#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="cms.vApp.local")]
	public partial class LINQDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertPM_Project(PM_Project instance);
    partial void UpdatePM_Project(PM_Project instance);
    partial void DeletePM_Project(PM_Project instance);
    partial void InsertPM_ProjectTOW(PM_ProjectTOW instance);
    partial void UpdatePM_ProjectTOW(PM_ProjectTOW instance);
    partial void DeletePM_ProjectTOW(PM_ProjectTOW instance);
    partial void InsertPM_ProjectCustomer(PM_ProjectCustomer instance);
    partial void UpdatePM_ProjectCustomer(PM_ProjectCustomer instance);
    partial void DeletePM_ProjectCustomer(PM_ProjectCustomer instance);
    partial void InsertPM_ProjectDetail(PM_ProjectDetail instance);
    partial void UpdatePM_ProjectDetail(PM_ProjectDetail instance);
    partial void DeletePM_ProjectDetail(PM_ProjectDetail instance);
    partial void InsertPM_ProjectEmployee(PM_ProjectEmployee instance);
    partial void UpdatePM_ProjectEmployee(PM_ProjectEmployee instance);
    partial void DeletePM_ProjectEmployee(PM_ProjectEmployee instance);
    partial void InsertPM_ProjectEmployeeProcess(PM_ProjectEmployeeProcess instance);
    partial void UpdatePM_ProjectEmployeeProcess(PM_ProjectEmployeeProcess instance);
    partial void DeletePM_ProjectEmployeeProcess(PM_ProjectEmployeeProcess instance);
    partial void InsertPM_ProjectMold(PM_ProjectMold instance);
    partial void UpdatePM_ProjectMold(PM_ProjectMold instance);
    partial void DeletePM_ProjectMold(PM_ProjectMold instance);
    partial void InsertPM_ProjectProcess(PM_ProjectProcess instance);
    partial void UpdatePM_ProjectProcess(PM_ProjectProcess instance);
    partial void DeletePM_ProjectProcess(PM_ProjectProcess instance);
    partial void InsertPM_ProjectProcessDetail(PM_ProjectProcessDetail instance);
    partial void UpdatePM_ProjectProcessDetail(PM_ProjectProcessDetail instance);
    partial void DeletePM_ProjectProcessDetail(PM_ProjectProcessDetail instance);
    partial void InsertPM_ProjectRolePermission(PM_ProjectRolePermission instance);
    partial void UpdatePM_ProjectRolePermission(PM_ProjectRolePermission instance);
    partial void DeletePM_ProjectRolePermission(PM_ProjectRolePermission instance);
    partial void InsertPM_ProjectStatus(PM_ProjectStatus instance);
    partial void UpdatePM_ProjectStatus(PM_ProjectStatus instance);
    partial void DeletePM_ProjectStatus(PM_ProjectStatus instance);
    partial void InsertPM_ProjectSubProcess(PM_ProjectSubProcess instance);
    partial void UpdatePM_ProjectSubProcess(PM_ProjectSubProcess instance);
    partial void DeletePM_ProjectSubProcess(PM_ProjectSubProcess instance);
    partial void InsertPM_ProjectTaskPriority(PM_ProjectTaskPriority instance);
    partial void UpdatePM_ProjectTaskPriority(PM_ProjectTaskPriority instance);
    partial void DeletePM_ProjectTaskPriority(PM_ProjectTaskPriority instance);
    partial void InsertPM_ProjectTaskStatus(PM_ProjectTaskStatus instance);
    partial void UpdatePM_ProjectTaskStatus(PM_ProjectTaskStatus instance);
    partial void DeletePM_ProjectTaskStatus(PM_ProjectTaskStatus instance);
    partial void InsertIV_tblTaskHistory(IV_tblTaskHistory instance);
    partial void UpdateIV_tblTaskHistory(IV_tblTaskHistory instance);
    partial void DeleteIV_tblTaskHistory(IV_tblTaskHistory instance);
    partial void InsertIV_tblTask(IV_tblTask instance);
    partial void UpdateIV_tblTask(IV_tblTask instance);
    partial void DeleteIV_tblTask(IV_tblTask instance);
    partial void InsertIV_tblMoldsProcess(IV_tblMoldsProcess instance);
    partial void UpdateIV_tblMoldsProcess(IV_tblMoldsProcess instance);
    partial void DeleteIV_tblMoldsProcess(IV_tblMoldsProcess instance);
    partial void InsertCMS_User(CMS_User instance);
    partial void UpdateCMS_User(CMS_User instance);
    partial void DeleteCMS_User(CMS_User instance);
    partial void InsertPM_ProjectProcessList(PM_ProjectProcessList instance);
    partial void UpdatePM_ProjectProcessList(PM_ProjectProcessList instance);
    partial void DeletePM_ProjectProcessList(PM_ProjectProcessList instance);
    partial void InsertPM_ProjectMachinery(PM_ProjectMachinery instance);
    partial void UpdatePM_ProjectMachinery(PM_ProjectMachinery instance);
    partial void DeletePM_ProjectMachinery(PM_ProjectMachinery instance);
    partial void InsertPM_ProjectTask(PM_ProjectTask instance);
    partial void UpdatePM_ProjectTask(PM_ProjectTask instance);
    partial void DeletePM_ProjectTask(PM_ProjectTask instance);
    #endregion
		
		public LINQDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["CMSConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public LINQDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LINQDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LINQDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LINQDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<PM_Project> PM_Projects
		{
			get
			{
				return this.GetTable<PM_Project>();
			}
		}
		
		public System.Data.Linq.Table<PM_ProjectTOW> PM_ProjectTOWs
		{
			get
			{
				return this.GetTable<PM_ProjectTOW>();
			}
		}
		
		public System.Data.Linq.Table<PM_ProjectCustomer> PM_ProjectCustomers
		{
			get
			{
				return this.GetTable<PM_ProjectCustomer>();
			}
		}
		
		public System.Data.Linq.Table<PM_ProjectDetail> PM_ProjectDetails
		{
			get
			{
				return this.GetTable<PM_ProjectDetail>();
			}
		}
		
		public System.Data.Linq.Table<PM_ProjectEmployee> PM_ProjectEmployees
		{
			get
			{
				return this.GetTable<PM_ProjectEmployee>();
			}
		}
		
		public System.Data.Linq.Table<PM_ProjectEmployeeProcess> PM_ProjectEmployeeProcesses
		{
			get
			{
				return this.GetTable<PM_ProjectEmployeeProcess>();
			}
		}
		
		public System.Data.Linq.Table<PM_ProjectMold> PM_ProjectMolds
		{
			get
			{
				return this.GetTable<PM_ProjectMold>();
			}
		}
		
		public System.Data.Linq.Table<PM_ProjectProcess> PM_ProjectProcesses
		{
			get
			{
				return this.GetTable<PM_ProjectProcess>();
			}
		}
		
		public System.Data.Linq.Table<PM_ProjectProcessDetail> PM_ProjectProcessDetails
		{
			get
			{
				return this.GetTable<PM_ProjectProcessDetail>();
			}
		}
		
		public System.Data.Linq.Table<PM_ProjectRolePermission> PM_ProjectRolePermissions
		{
			get
			{
				return this.GetTable<PM_ProjectRolePermission>();
			}
		}
		
		public System.Data.Linq.Table<PM_ProjectStatus> PM_ProjectStatus
		{
			get
			{
				return this.GetTable<PM_ProjectStatus>();
			}
		}
		
		public System.Data.Linq.Table<PM_ProjectSubProcess> PM_ProjectSubProcesses
		{
			get
			{
				return this.GetTable<PM_ProjectSubProcess>();
			}
		}
		
		public System.Data.Linq.Table<PM_ProjectTaskPriority> PM_ProjectTaskPriorities
		{
			get
			{
				return this.GetTable<PM_ProjectTaskPriority>();
			}
		}
		
		public System.Data.Linq.Table<PM_ProjectTaskStatus> PM_ProjectTaskStatus
		{
			get
			{
				return this.GetTable<PM_ProjectTaskStatus>();
			}
		}
		
		public System.Data.Linq.Table<IV_tblTaskHistory> IV_tblTaskHistories
		{
			get
			{
				return this.GetTable<IV_tblTaskHistory>();
			}
		}
		
		public System.Data.Linq.Table<IV_tblTask> IV_tblTasks
		{
			get
			{
				return this.GetTable<IV_tblTask>();
			}
		}
		
		public System.Data.Linq.Table<IV_tblMoldsProcess> IV_tblMoldsProcesses
		{
			get
			{
				return this.GetTable<IV_tblMoldsProcess>();
			}
		}
		
		public System.Data.Linq.Table<CMS_User> CMS_Users
		{
			get
			{
				return this.GetTable<CMS_User>();
			}
		}
		
		public System.Data.Linq.Table<PM_ProjectProcessList> PM_ProjectProcessLists
		{
			get
			{
				return this.GetTable<PM_ProjectProcessList>();
			}
		}
		
		public System.Data.Linq.Table<PM_ProjectMachinery> PM_ProjectMachineries
		{
			get
			{
				return this.GetTable<PM_ProjectMachinery>();
			}
		}
		
		public System.Data.Linq.Table<PM_ProjectTask> PM_ProjectTasks
		{
			get
			{
				return this.GetTable<PM_ProjectTask>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PM_Project")]
	public partial class PM_Project : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProjectID;
		
		private System.Nullable<int> _ProjectNodeID;
		
		private System.Nullable<int> _ProjectGroupID;
		
		private string _ProjectDisplayName;
		
		private string _ProjectName;
		
		private string _ProjectDescription;
		
		private System.Nullable<System.DateTime> _ProjectStartDate;
		
		private System.Nullable<System.DateTime> _ProjectDeadline;
		
		private System.Nullable<int> _ProjectOwner;
		
		private System.Nullable<int> _ProjectCreatedByID;
		
		private int _ProjectStatusID;
		
		private int _ProjectSiteID;
		
		private System.Guid _ProjectGUID;
		
		private System.DateTime _ProjectLastModified;
		
		private System.Nullable<bool> _ProjectAllowOrdering;
		
		private int _ProjectAccess;
		
		private EntitySet<PM_ProjectDetail> _PM_ProjectDetails;
		
		private EntitySet<PM_ProjectRolePermission> _PM_ProjectRolePermissions;
		
		private EntitySet<PM_ProjectTask> _PM_ProjectTasks;
		
		private EntityRef<PM_ProjectStatus> _PM_ProjectStatus;
		
		private EntityRef<CMS_User> _CMS_User;
		
		private EntityRef<CMS_User> _CMS_User1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProjectIDChanging(int value);
    partial void OnProjectIDChanged();
    partial void OnProjectNodeIDChanging(System.Nullable<int> value);
    partial void OnProjectNodeIDChanged();
    partial void OnProjectGroupIDChanging(System.Nullable<int> value);
    partial void OnProjectGroupIDChanged();
    partial void OnProjectDisplayNameChanging(string value);
    partial void OnProjectDisplayNameChanged();
    partial void OnProjectNameChanging(string value);
    partial void OnProjectNameChanged();
    partial void OnProjectDescriptionChanging(string value);
    partial void OnProjectDescriptionChanged();
    partial void OnProjectStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnProjectStartDateChanged();
    partial void OnProjectDeadlineChanging(System.Nullable<System.DateTime> value);
    partial void OnProjectDeadlineChanged();
    partial void OnProjectOwnerChanging(System.Nullable<int> value);
    partial void OnProjectOwnerChanged();
    partial void OnProjectCreatedByIDChanging(System.Nullable<int> value);
    partial void OnProjectCreatedByIDChanged();
    partial void OnProjectStatusIDChanging(int value);
    partial void OnProjectStatusIDChanged();
    partial void OnProjectSiteIDChanging(int value);
    partial void OnProjectSiteIDChanged();
    partial void OnProjectGUIDChanging(System.Guid value);
    partial void OnProjectGUIDChanged();
    partial void OnProjectLastModifiedChanging(System.DateTime value);
    partial void OnProjectLastModifiedChanged();
    partial void OnProjectAllowOrderingChanging(System.Nullable<bool> value);
    partial void OnProjectAllowOrderingChanged();
    partial void OnProjectAccessChanging(int value);
    partial void OnProjectAccessChanged();
    #endregion
		
		public PM_Project()
		{
			this._PM_ProjectDetails = new EntitySet<PM_ProjectDetail>(new Action<PM_ProjectDetail>(this.attach_PM_ProjectDetails), new Action<PM_ProjectDetail>(this.detach_PM_ProjectDetails));
			this._PM_ProjectRolePermissions = new EntitySet<PM_ProjectRolePermission>(new Action<PM_ProjectRolePermission>(this.attach_PM_ProjectRolePermissions), new Action<PM_ProjectRolePermission>(this.detach_PM_ProjectRolePermissions));
			this._PM_ProjectTasks = new EntitySet<PM_ProjectTask>(new Action<PM_ProjectTask>(this.attach_PM_ProjectTasks), new Action<PM_ProjectTask>(this.detach_PM_ProjectTasks));
			this._PM_ProjectStatus = default(EntityRef<PM_ProjectStatus>);
			this._CMS_User = default(EntityRef<CMS_User>);
			this._CMS_User1 = default(EntityRef<CMS_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProjectID
		{
			get
			{
				return this._ProjectID;
			}
			set
			{
				if ((this._ProjectID != value))
				{
					this.OnProjectIDChanging(value);
					this.SendPropertyChanging();
					this._ProjectID = value;
					this.SendPropertyChanged("ProjectID");
					this.OnProjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectNodeID", DbType="Int")]
		public System.Nullable<int> ProjectNodeID
		{
			get
			{
				return this._ProjectNodeID;
			}
			set
			{
				if ((this._ProjectNodeID != value))
				{
					this.OnProjectNodeIDChanging(value);
					this.SendPropertyChanging();
					this._ProjectNodeID = value;
					this.SendPropertyChanged("ProjectNodeID");
					this.OnProjectNodeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectGroupID", DbType="Int")]
		public System.Nullable<int> ProjectGroupID
		{
			get
			{
				return this._ProjectGroupID;
			}
			set
			{
				if ((this._ProjectGroupID != value))
				{
					this.OnProjectGroupIDChanging(value);
					this.SendPropertyChanging();
					this._ProjectGroupID = value;
					this.SendPropertyChanged("ProjectGroupID");
					this.OnProjectGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectDisplayName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string ProjectDisplayName
		{
			get
			{
				return this._ProjectDisplayName;
			}
			set
			{
				if ((this._ProjectDisplayName != value))
				{
					this.OnProjectDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._ProjectDisplayName = value;
					this.SendPropertyChanged("ProjectDisplayName");
					this.OnProjectDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string ProjectName
		{
			get
			{
				return this._ProjectName;
			}
			set
			{
				if ((this._ProjectName != value))
				{
					this.OnProjectNameChanging(value);
					this.SendPropertyChanging();
					this._ProjectName = value;
					this.SendPropertyChanged("ProjectName");
					this.OnProjectNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectDescription", DbType="NVarChar(MAX)")]
		public string ProjectDescription
		{
			get
			{
				return this._ProjectDescription;
			}
			set
			{
				if ((this._ProjectDescription != value))
				{
					this.OnProjectDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ProjectDescription = value;
					this.SendPropertyChanged("ProjectDescription");
					this.OnProjectDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectStartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ProjectStartDate
		{
			get
			{
				return this._ProjectStartDate;
			}
			set
			{
				if ((this._ProjectStartDate != value))
				{
					this.OnProjectStartDateChanging(value);
					this.SendPropertyChanging();
					this._ProjectStartDate = value;
					this.SendPropertyChanged("ProjectStartDate");
					this.OnProjectStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectDeadline", DbType="DateTime")]
		public System.Nullable<System.DateTime> ProjectDeadline
		{
			get
			{
				return this._ProjectDeadline;
			}
			set
			{
				if ((this._ProjectDeadline != value))
				{
					this.OnProjectDeadlineChanging(value);
					this.SendPropertyChanging();
					this._ProjectDeadline = value;
					this.SendPropertyChanged("ProjectDeadline");
					this.OnProjectDeadlineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectOwner", DbType="Int")]
		public System.Nullable<int> ProjectOwner
		{
			get
			{
				return this._ProjectOwner;
			}
			set
			{
				if ((this._ProjectOwner != value))
				{
					if (this._CMS_User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectOwnerChanging(value);
					this.SendPropertyChanging();
					this._ProjectOwner = value;
					this.SendPropertyChanged("ProjectOwner");
					this.OnProjectOwnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectCreatedByID", DbType="Int")]
		public System.Nullable<int> ProjectCreatedByID
		{
			get
			{
				return this._ProjectCreatedByID;
			}
			set
			{
				if ((this._ProjectCreatedByID != value))
				{
					if (this._CMS_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectCreatedByIDChanging(value);
					this.SendPropertyChanging();
					this._ProjectCreatedByID = value;
					this.SendPropertyChanged("ProjectCreatedByID");
					this.OnProjectCreatedByIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectStatusID", DbType="Int NOT NULL")]
		public int ProjectStatusID
		{
			get
			{
				return this._ProjectStatusID;
			}
			set
			{
				if ((this._ProjectStatusID != value))
				{
					if (this._PM_ProjectStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectStatusIDChanging(value);
					this.SendPropertyChanging();
					this._ProjectStatusID = value;
					this.SendPropertyChanged("ProjectStatusID");
					this.OnProjectStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectSiteID", DbType="Int NOT NULL")]
		public int ProjectSiteID
		{
			get
			{
				return this._ProjectSiteID;
			}
			set
			{
				if ((this._ProjectSiteID != value))
				{
					this.OnProjectSiteIDChanging(value);
					this.SendPropertyChanging();
					this._ProjectSiteID = value;
					this.SendPropertyChanged("ProjectSiteID");
					this.OnProjectSiteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectGUID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ProjectGUID
		{
			get
			{
				return this._ProjectGUID;
			}
			set
			{
				if ((this._ProjectGUID != value))
				{
					this.OnProjectGUIDChanging(value);
					this.SendPropertyChanging();
					this._ProjectGUID = value;
					this.SendPropertyChanged("ProjectGUID");
					this.OnProjectGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectLastModified", DbType="DateTime NOT NULL")]
		public System.DateTime ProjectLastModified
		{
			get
			{
				return this._ProjectLastModified;
			}
			set
			{
				if ((this._ProjectLastModified != value))
				{
					this.OnProjectLastModifiedChanging(value);
					this.SendPropertyChanging();
					this._ProjectLastModified = value;
					this.SendPropertyChanged("ProjectLastModified");
					this.OnProjectLastModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectAllowOrdering", DbType="Bit")]
		public System.Nullable<bool> ProjectAllowOrdering
		{
			get
			{
				return this._ProjectAllowOrdering;
			}
			set
			{
				if ((this._ProjectAllowOrdering != value))
				{
					this.OnProjectAllowOrderingChanging(value);
					this.SendPropertyChanging();
					this._ProjectAllowOrdering = value;
					this.SendPropertyChanged("ProjectAllowOrdering");
					this.OnProjectAllowOrderingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectAccess", DbType="Int NOT NULL")]
		public int ProjectAccess
		{
			get
			{
				return this._ProjectAccess;
			}
			set
			{
				if ((this._ProjectAccess != value))
				{
					this.OnProjectAccessChanging(value);
					this.SendPropertyChanging();
					this._ProjectAccess = value;
					this.SendPropertyChanged("ProjectAccess");
					this.OnProjectAccessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PM_Project_PM_ProjectDetail", Storage="_PM_ProjectDetails", ThisKey="ProjectID", OtherKey="DetailProjectID")]
		public EntitySet<PM_ProjectDetail> PM_ProjectDetails
		{
			get
			{
				return this._PM_ProjectDetails;
			}
			set
			{
				this._PM_ProjectDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PM_Project_PM_ProjectRolePermission", Storage="_PM_ProjectRolePermissions", ThisKey="ProjectID", OtherKey="ProjectID")]
		public EntitySet<PM_ProjectRolePermission> PM_ProjectRolePermissions
		{
			get
			{
				return this._PM_ProjectRolePermissions;
			}
			set
			{
				this._PM_ProjectRolePermissions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PM_Project_PM_ProjectTask", Storage="_PM_ProjectTasks", ThisKey="ProjectID", OtherKey="ProjectTaskProjectID")]
		public EntitySet<PM_ProjectTask> PM_ProjectTasks
		{
			get
			{
				return this._PM_ProjectTasks;
			}
			set
			{
				this._PM_ProjectTasks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PM_ProjectStatus_PM_Project", Storage="_PM_ProjectStatus", ThisKey="ProjectStatusID", OtherKey="StatusID", IsForeignKey=true)]
		public PM_ProjectStatus PM_ProjectStatus
		{
			get
			{
				return this._PM_ProjectStatus.Entity;
			}
			set
			{
				PM_ProjectStatus previousValue = this._PM_ProjectStatus.Entity;
				if (((previousValue != value) 
							|| (this._PM_ProjectStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PM_ProjectStatus.Entity = null;
						previousValue.PM_Projects.Remove(this);
					}
					this._PM_ProjectStatus.Entity = value;
					if ((value != null))
					{
						value.PM_Projects.Add(this);
						this._ProjectStatusID = value.StatusID;
					}
					else
					{
						this._ProjectStatusID = default(int);
					}
					this.SendPropertyChanged("PM_ProjectStatus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CMS_User_PM_Project", Storage="_CMS_User", ThisKey="ProjectCreatedByID", OtherKey="UserID", IsForeignKey=true)]
		public CMS_User CMS_User
		{
			get
			{
				return this._CMS_User.Entity;
			}
			set
			{
				CMS_User previousValue = this._CMS_User.Entity;
				if (((previousValue != value) 
							|| (this._CMS_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CMS_User.Entity = null;
						previousValue.PM_Projects.Remove(this);
					}
					this._CMS_User.Entity = value;
					if ((value != null))
					{
						value.PM_Projects.Add(this);
						this._ProjectCreatedByID = value.UserID;
					}
					else
					{
						this._ProjectCreatedByID = default(Nullable<int>);
					}
					this.SendPropertyChanged("CMS_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CMS_User_PM_Project1", Storage="_CMS_User1", ThisKey="ProjectOwner", OtherKey="UserID", IsForeignKey=true)]
		public CMS_User CMS_User1
		{
			get
			{
				return this._CMS_User1.Entity;
			}
			set
			{
				CMS_User previousValue = this._CMS_User1.Entity;
				if (((previousValue != value) 
							|| (this._CMS_User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CMS_User1.Entity = null;
						previousValue.PM_Projects1.Remove(this);
					}
					this._CMS_User1.Entity = value;
					if ((value != null))
					{
						value.PM_Projects1.Add(this);
						this._ProjectOwner = value.UserID;
					}
					else
					{
						this._ProjectOwner = default(Nullable<int>);
					}
					this.SendPropertyChanged("CMS_User1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PM_ProjectDetails(PM_ProjectDetail entity)
		{
			this.SendPropertyChanging();
			entity.PM_Project = this;
		}
		
		private void detach_PM_ProjectDetails(PM_ProjectDetail entity)
		{
			this.SendPropertyChanging();
			entity.PM_Project = null;
		}
		
		private void attach_PM_ProjectRolePermissions(PM_ProjectRolePermission entity)
		{
			this.SendPropertyChanging();
			entity.PM_Project = this;
		}
		
		private void detach_PM_ProjectRolePermissions(PM_ProjectRolePermission entity)
		{
			this.SendPropertyChanging();
			entity.PM_Project = null;
		}
		
		private void attach_PM_ProjectTasks(PM_ProjectTask entity)
		{
			this.SendPropertyChanging();
			entity.PM_Project = this;
		}
		
		private void detach_PM_ProjectTasks(PM_ProjectTask entity)
		{
			this.SendPropertyChanging();
			entity.PM_Project = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PM_ProjectTOW")]
	public partial class PM_ProjectTOW : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TOWID;
		
		private string _TOWName;
		
		private System.Nullable<int> _TOWOrder;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTOWIDChanging(int value);
    partial void OnTOWIDChanged();
    partial void OnTOWNameChanging(string value);
    partial void OnTOWNameChanged();
    partial void OnTOWOrderChanging(System.Nullable<int> value);
    partial void OnTOWOrderChanged();
    #endregion
		
		public PM_ProjectTOW()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOWID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TOWID
		{
			get
			{
				return this._TOWID;
			}
			set
			{
				if ((this._TOWID != value))
				{
					this.OnTOWIDChanging(value);
					this.SendPropertyChanging();
					this._TOWID = value;
					this.SendPropertyChanged("TOWID");
					this.OnTOWIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOWName", DbType="NVarChar(50)")]
		public string TOWName
		{
			get
			{
				return this._TOWName;
			}
			set
			{
				if ((this._TOWName != value))
				{
					this.OnTOWNameChanging(value);
					this.SendPropertyChanging();
					this._TOWName = value;
					this.SendPropertyChanged("TOWName");
					this.OnTOWNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOWOrder", DbType="Int")]
		public System.Nullable<int> TOWOrder
		{
			get
			{
				return this._TOWOrder;
			}
			set
			{
				if ((this._TOWOrder != value))
				{
					this.OnTOWOrderChanging(value);
					this.SendPropertyChanging();
					this._TOWOrder = value;
					this.SendPropertyChanged("TOWOrder");
					this.OnTOWOrderChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PM_ProjectCustomer")]
	public partial class PM_ProjectCustomer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CustomerId;
		
		private string _CustomerName;
		
		private string _CustomerPhone;
		
		private string _CustomerEmail;
		
		private string _CustomerAddress;
		
		private System.Nullable<System.DateTime> _ModifiedWhen;
		
		private System.Nullable<int> _ModifiedByUserId;
		
		private System.Nullable<System.DateTime> _CreatedWhen;
		
		private System.Nullable<int> _CreatedByUserId;
		
		private EntitySet<PM_ProjectTask> _PM_ProjectTasks;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomerIdChanging(int value);
    partial void OnCustomerIdChanged();
    partial void OnCustomerNameChanging(string value);
    partial void OnCustomerNameChanged();
    partial void OnCustomerPhoneChanging(string value);
    partial void OnCustomerPhoneChanged();
    partial void OnCustomerEmailChanging(string value);
    partial void OnCustomerEmailChanged();
    partial void OnCustomerAddressChanging(string value);
    partial void OnCustomerAddressChanged();
    partial void OnModifiedWhenChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedWhenChanged();
    partial void OnModifiedByUserIdChanging(System.Nullable<int> value);
    partial void OnModifiedByUserIdChanged();
    partial void OnCreatedWhenChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedWhenChanged();
    partial void OnCreatedByUserIdChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIdChanged();
    #endregion
		
		public PM_ProjectCustomer()
		{
			this._PM_ProjectTasks = new EntitySet<PM_ProjectTask>(new Action<PM_ProjectTask>(this.attach_PM_ProjectTasks), new Action<PM_ProjectTask>(this.detach_PM_ProjectTasks));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="NVarChar(50)")]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this.OnCustomerNameChanging(value);
					this.SendPropertyChanging();
					this._CustomerName = value;
					this.SendPropertyChanged("CustomerName");
					this.OnCustomerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerPhone", DbType="NVarChar(50)")]
		public string CustomerPhone
		{
			get
			{
				return this._CustomerPhone;
			}
			set
			{
				if ((this._CustomerPhone != value))
				{
					this.OnCustomerPhoneChanging(value);
					this.SendPropertyChanging();
					this._CustomerPhone = value;
					this.SendPropertyChanged("CustomerPhone");
					this.OnCustomerPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerEmail", DbType="NVarChar(50)")]
		public string CustomerEmail
		{
			get
			{
				return this._CustomerEmail;
			}
			set
			{
				if ((this._CustomerEmail != value))
				{
					this.OnCustomerEmailChanging(value);
					this.SendPropertyChanging();
					this._CustomerEmail = value;
					this.SendPropertyChanged("CustomerEmail");
					this.OnCustomerEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerAddress", DbType="NVarChar(100)")]
		public string CustomerAddress
		{
			get
			{
				return this._CustomerAddress;
			}
			set
			{
				if ((this._CustomerAddress != value))
				{
					this.OnCustomerAddressChanging(value);
					this.SendPropertyChanging();
					this._CustomerAddress = value;
					this.SendPropertyChanged("CustomerAddress");
					this.OnCustomerAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedWhen", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedWhen
		{
			get
			{
				return this._ModifiedWhen;
			}
			set
			{
				if ((this._ModifiedWhen != value))
				{
					this.OnModifiedWhenChanging(value);
					this.SendPropertyChanging();
					this._ModifiedWhen = value;
					this.SendPropertyChanged("ModifiedWhen");
					this.OnModifiedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedByUserId", DbType="Int")]
		public System.Nullable<int> ModifiedByUserId
		{
			get
			{
				return this._ModifiedByUserId;
			}
			set
			{
				if ((this._ModifiedByUserId != value))
				{
					this.OnModifiedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._ModifiedByUserId = value;
					this.SendPropertyChanged("ModifiedByUserId");
					this.OnModifiedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWhen", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedWhen
		{
			get
			{
				return this._CreatedWhen;
			}
			set
			{
				if ((this._CreatedWhen != value))
				{
					this.OnCreatedWhenChanging(value);
					this.SendPropertyChanging();
					this._CreatedWhen = value;
					this.SendPropertyChanged("CreatedWhen");
					this.OnCreatedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserId", DbType="Int")]
		public System.Nullable<int> CreatedByUserId
		{
			get
			{
				return this._CreatedByUserId;
			}
			set
			{
				if ((this._CreatedByUserId != value))
				{
					this.OnCreatedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserId = value;
					this.SendPropertyChanged("CreatedByUserId");
					this.OnCreatedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PM_ProjectCustomer_PM_ProjectTask", Storage="_PM_ProjectTasks", ThisKey="CustomerId", OtherKey="ProjectTaskCustomerId")]
		public EntitySet<PM_ProjectTask> PM_ProjectTasks
		{
			get
			{
				return this._PM_ProjectTasks;
			}
			set
			{
				this._PM_ProjectTasks.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PM_ProjectTasks(PM_ProjectTask entity)
		{
			this.SendPropertyChanging();
			entity.PM_ProjectCustomer = this;
		}
		
		private void detach_PM_ProjectTasks(PM_ProjectTask entity)
		{
			this.SendPropertyChanging();
			entity.PM_ProjectCustomer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PM_ProjectDetail")]
	public partial class PM_ProjectDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DetailID;
		
		private System.Nullable<int> _DetailProjectID;
		
		private EntityRef<PM_Project> _PM_Project;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDetailIDChanging(int value);
    partial void OnDetailIDChanged();
    partial void OnDetailProjectIDChanging(System.Nullable<int> value);
    partial void OnDetailProjectIDChanged();
    #endregion
		
		public PM_ProjectDetail()
		{
			this._PM_Project = default(EntityRef<PM_Project>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DetailID
		{
			get
			{
				return this._DetailID;
			}
			set
			{
				if ((this._DetailID != value))
				{
					this.OnDetailIDChanging(value);
					this.SendPropertyChanging();
					this._DetailID = value;
					this.SendPropertyChanged("DetailID");
					this.OnDetailIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailProjectID", DbType="Int")]
		public System.Nullable<int> DetailProjectID
		{
			get
			{
				return this._DetailProjectID;
			}
			set
			{
				if ((this._DetailProjectID != value))
				{
					if (this._PM_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDetailProjectIDChanging(value);
					this.SendPropertyChanging();
					this._DetailProjectID = value;
					this.SendPropertyChanged("DetailProjectID");
					this.OnDetailProjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PM_Project_PM_ProjectDetail", Storage="_PM_Project", ThisKey="DetailProjectID", OtherKey="ProjectID", IsForeignKey=true)]
		public PM_Project PM_Project
		{
			get
			{
				return this._PM_Project.Entity;
			}
			set
			{
				PM_Project previousValue = this._PM_Project.Entity;
				if (((previousValue != value) 
							|| (this._PM_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PM_Project.Entity = null;
						previousValue.PM_ProjectDetails.Remove(this);
					}
					this._PM_Project.Entity = value;
					if ((value != null))
					{
						value.PM_ProjectDetails.Add(this);
						this._DetailProjectID = value.ProjectID;
					}
					else
					{
						this._DetailProjectID = default(Nullable<int>);
					}
					this.SendPropertyChanged("PM_Project");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PM_ProjectEmployee")]
	public partial class PM_ProjectEmployee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EmployeeID;
		
		private string _EmployeeCode;
		
		private string _EmployeeFullName;
		
		private string _EmployeeFirstName;
		
		private string _EmployeeLastName;
		
		private System.Nullable<System.DateTime> _EmployeeDateOfBirth;
		
		private System.Nullable<int> _EmployeeGender;
		
		private string _EmployeeTel;
		
		private System.Nullable<int> _EmployeeAvatar;
		
		private string _EmployeeDescription;
		
		private EntitySet<PM_ProjectEmployeeProcess> _PM_ProjectEmployeeProcesses;
		
		private EntitySet<PM_ProjectProcessDetail> _PM_ProjectProcessDetails;
		
		private EntitySet<PM_ProjectProcessDetail> _PM_ProjectProcessDetails1;
		
		private EntitySet<PM_ProjectProcessDetail> _PM_ProjectProcessDetails2;
		
		private EntitySet<IV_tblTaskHistory> _IV_tblTaskHistories;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmployeeIDChanging(int value);
    partial void OnEmployeeIDChanged();
    partial void OnEmployeeCodeChanging(string value);
    partial void OnEmployeeCodeChanged();
    partial void OnEmployeeFullNameChanging(string value);
    partial void OnEmployeeFullNameChanged();
    partial void OnEmployeeFirstNameChanging(string value);
    partial void OnEmployeeFirstNameChanged();
    partial void OnEmployeeLastNameChanging(string value);
    partial void OnEmployeeLastNameChanged();
    partial void OnEmployeeDateOfBirthChanging(System.Nullable<System.DateTime> value);
    partial void OnEmployeeDateOfBirthChanged();
    partial void OnEmployeeGenderChanging(System.Nullable<int> value);
    partial void OnEmployeeGenderChanged();
    partial void OnEmployeeTelChanging(string value);
    partial void OnEmployeeTelChanged();
    partial void OnEmployeeAvatarChanging(System.Nullable<int> value);
    partial void OnEmployeeAvatarChanged();
    partial void OnEmployeeDescriptionChanging(string value);
    partial void OnEmployeeDescriptionChanged();
    #endregion
		
		public PM_ProjectEmployee()
		{
			this._PM_ProjectEmployeeProcesses = new EntitySet<PM_ProjectEmployeeProcess>(new Action<PM_ProjectEmployeeProcess>(this.attach_PM_ProjectEmployeeProcesses), new Action<PM_ProjectEmployeeProcess>(this.detach_PM_ProjectEmployeeProcesses));
			this._PM_ProjectProcessDetails = new EntitySet<PM_ProjectProcessDetail>(new Action<PM_ProjectProcessDetail>(this.attach_PM_ProjectProcessDetails), new Action<PM_ProjectProcessDetail>(this.detach_PM_ProjectProcessDetails));
			this._PM_ProjectProcessDetails1 = new EntitySet<PM_ProjectProcessDetail>(new Action<PM_ProjectProcessDetail>(this.attach_PM_ProjectProcessDetails1), new Action<PM_ProjectProcessDetail>(this.detach_PM_ProjectProcessDetails1));
			this._PM_ProjectProcessDetails2 = new EntitySet<PM_ProjectProcessDetail>(new Action<PM_ProjectProcessDetail>(this.attach_PM_ProjectProcessDetails2), new Action<PM_ProjectProcessDetail>(this.detach_PM_ProjectProcessDetails2));
			this._IV_tblTaskHistories = new EntitySet<IV_tblTaskHistory>(new Action<IV_tblTaskHistory>(this.attach_IV_tblTaskHistories), new Action<IV_tblTaskHistory>(this.detach_IV_tblTaskHistories));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					this.OnEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeID = value;
					this.SendPropertyChanged("EmployeeID");
					this.OnEmployeeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeCode", DbType="VarChar(25)")]
		public string EmployeeCode
		{
			get
			{
				return this._EmployeeCode;
			}
			set
			{
				if ((this._EmployeeCode != value))
				{
					this.OnEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._EmployeeCode = value;
					this.SendPropertyChanged("EmployeeCode");
					this.OnEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeFullName", DbType="NVarChar(100)")]
		public string EmployeeFullName
		{
			get
			{
				return this._EmployeeFullName;
			}
			set
			{
				if ((this._EmployeeFullName != value))
				{
					this.OnEmployeeFullNameChanging(value);
					this.SendPropertyChanging();
					this._EmployeeFullName = value;
					this.SendPropertyChanged("EmployeeFullName");
					this.OnEmployeeFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeFirstName", DbType="NVarChar(50)")]
		public string EmployeeFirstName
		{
			get
			{
				return this._EmployeeFirstName;
			}
			set
			{
				if ((this._EmployeeFirstName != value))
				{
					this.OnEmployeeFirstNameChanging(value);
					this.SendPropertyChanging();
					this._EmployeeFirstName = value;
					this.SendPropertyChanged("EmployeeFirstName");
					this.OnEmployeeFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeLastName", DbType="NVarChar(50)")]
		public string EmployeeLastName
		{
			get
			{
				return this._EmployeeLastName;
			}
			set
			{
				if ((this._EmployeeLastName != value))
				{
					this.OnEmployeeLastNameChanging(value);
					this.SendPropertyChanging();
					this._EmployeeLastName = value;
					this.SendPropertyChanged("EmployeeLastName");
					this.OnEmployeeLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeDateOfBirth", DbType="Date")]
		public System.Nullable<System.DateTime> EmployeeDateOfBirth
		{
			get
			{
				return this._EmployeeDateOfBirth;
			}
			set
			{
				if ((this._EmployeeDateOfBirth != value))
				{
					this.OnEmployeeDateOfBirthChanging(value);
					this.SendPropertyChanging();
					this._EmployeeDateOfBirth = value;
					this.SendPropertyChanged("EmployeeDateOfBirth");
					this.OnEmployeeDateOfBirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeGender", DbType="Int")]
		public System.Nullable<int> EmployeeGender
		{
			get
			{
				return this._EmployeeGender;
			}
			set
			{
				if ((this._EmployeeGender != value))
				{
					this.OnEmployeeGenderChanging(value);
					this.SendPropertyChanging();
					this._EmployeeGender = value;
					this.SendPropertyChanged("EmployeeGender");
					this.OnEmployeeGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeTel", DbType="NVarChar(50)")]
		public string EmployeeTel
		{
			get
			{
				return this._EmployeeTel;
			}
			set
			{
				if ((this._EmployeeTel != value))
				{
					this.OnEmployeeTelChanging(value);
					this.SendPropertyChanging();
					this._EmployeeTel = value;
					this.SendPropertyChanged("EmployeeTel");
					this.OnEmployeeTelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeAvatar", DbType="Int")]
		public System.Nullable<int> EmployeeAvatar
		{
			get
			{
				return this._EmployeeAvatar;
			}
			set
			{
				if ((this._EmployeeAvatar != value))
				{
					this.OnEmployeeAvatarChanging(value);
					this.SendPropertyChanging();
					this._EmployeeAvatar = value;
					this.SendPropertyChanged("EmployeeAvatar");
					this.OnEmployeeAvatarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeDescription", DbType="NVarChar(MAX)")]
		public string EmployeeDescription
		{
			get
			{
				return this._EmployeeDescription;
			}
			set
			{
				if ((this._EmployeeDescription != value))
				{
					this.OnEmployeeDescriptionChanging(value);
					this.SendPropertyChanging();
					this._EmployeeDescription = value;
					this.SendPropertyChanged("EmployeeDescription");
					this.OnEmployeeDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PM_ProjectEmployee_PM_ProjectEmployeeProcess", Storage="_PM_ProjectEmployeeProcesses", ThisKey="EmployeeID", OtherKey="EmployeeID")]
		public EntitySet<PM_ProjectEmployeeProcess> PM_ProjectEmployeeProcesses
		{
			get
			{
				return this._PM_ProjectEmployeeProcesses;
			}
			set
			{
				this._PM_ProjectEmployeeProcesses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PM_ProjectEmployee_PM_ProjectProcessDetail", Storage="_PM_ProjectProcessDetails", ThisKey="EmployeeID", OtherKey="DetailOwnerM")]
		public EntitySet<PM_ProjectProcessDetail> PM_ProjectProcessDetails
		{
			get
			{
				return this._PM_ProjectProcessDetails;
			}
			set
			{
				this._PM_ProjectProcessDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PM_ProjectEmployee_PM_ProjectProcessDetail1", Storage="_PM_ProjectProcessDetails1", ThisKey="EmployeeID", OtherKey="DetailOwnerP")]
		public EntitySet<PM_ProjectProcessDetail> PM_ProjectProcessDetails1
		{
			get
			{
				return this._PM_ProjectProcessDetails1;
			}
			set
			{
				this._PM_ProjectProcessDetails1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PM_ProjectEmployee_PM_ProjectProcessDetail2", Storage="_PM_ProjectProcessDetails2", ThisKey="EmployeeID", OtherKey="DetailOwner")]
		public EntitySet<PM_ProjectProcessDetail> PM_ProjectProcessDetails2
		{
			get
			{
				return this._PM_ProjectProcessDetails2;
			}
			set
			{
				this._PM_ProjectProcessDetails2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PM_ProjectEmployee_IV_tblTaskHistory", Storage="_IV_tblTaskHistories", ThisKey="EmployeeID", OtherKey="HistoryEmployeeId")]
		public EntitySet<IV_tblTaskHistory> IV_tblTaskHistories
		{
			get
			{
				return this._IV_tblTaskHistories;
			}
			set
			{
				this._IV_tblTaskHistories.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PM_ProjectEmployeeProcesses(PM_ProjectEmployeeProcess entity)
		{
			this.SendPropertyChanging();
			entity.PM_ProjectEmployee = this;
		}
		
		private void detach_PM_ProjectEmployeeProcesses(PM_ProjectEmployeeProcess entity)
		{
			this.SendPropertyChanging();
			entity.PM_ProjectEmployee = null;
		}
		
		private void attach_PM_ProjectProcessDetails(PM_ProjectProcessDetail entity)
		{
			this.SendPropertyChanging();
			entity.PM_ProjectEmployee = this;
		}
		
		private void detach_PM_ProjectProcessDetails(PM_ProjectProcessDetail entity)
		{
			this.SendPropertyChanging();
			entity.PM_ProjectEmployee = null;
		}
		
		private void attach_PM_ProjectProcessDetails1(PM_ProjectProcessDetail entity)
		{
			this.SendPropertyChanging();
			entity.PM_ProjectEmployee1 = this;
		}
		
		private void detach_PM_ProjectProcessDetails1(PM_ProjectProcessDetail entity)
		{
			this.SendPropertyChanging();
			entity.PM_ProjectEmployee1 = null;
		}
		
		private void attach_PM_ProjectProcessDetails2(PM_ProjectProcessDetail entity)
		{
			this.SendPropertyChanging();
			entity.PM_ProjectEmployee2 = this;
		}
		
		private void detach_PM_ProjectProcessDetails2(PM_ProjectProcessDetail entity)
		{
			this.SendPropertyChanging();
			entity.PM_ProjectEmployee2 = null;
		}
		
		private void attach_IV_tblTaskHistories(IV_tblTaskHistory entity)
		{
			this.SendPropertyChanging();
			entity.PM_ProjectEmployee = this;
		}
		
		private void detach_IV_tblTaskHistories(IV_tblTaskHistory entity)
		{
			this.SendPropertyChanging();
			entity.PM_ProjectEmployee = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PM_ProjectEmployeeProcess")]
	public partial class PM_ProjectEmployeeProcess : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EmpProID;
		
		private int _EmployeeID;
		
		private int _ProcessListID;
		
		private EntityRef<PM_ProjectEmployee> _PM_ProjectEmployee;
		
		private EntityRef<PM_ProjectProcessList> _PM_ProjectProcessList;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmpProIDChanging(int value);
    partial void OnEmpProIDChanged();
    partial void OnEmployeeIDChanging(int value);
    partial void OnEmployeeIDChanged();
    partial void OnProcessListIDChanging(int value);
    partial void OnProcessListIDChanged();
    #endregion
		
		public PM_ProjectEmployeeProcess()
		{
			this._PM_ProjectEmployee = default(EntityRef<PM_ProjectEmployee>);
			this._PM_ProjectProcessList = default(EntityRef<PM_ProjectProcessList>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpProID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int EmpProID
		{
			get
			{
				return this._EmpProID;
			}
			set
			{
				if ((this._EmpProID != value))
				{
					this.OnEmpProIDChanging(value);
					this.SendPropertyChanging();
					this._EmpProID = value;
					this.SendPropertyChanged("EmpProID");
					this.OnEmpProIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", DbType="Int NOT NULL")]
		public int EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					if (this._PM_ProjectEmployee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeID = value;
					this.SendPropertyChanged("EmployeeID");
					this.OnEmployeeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessListID", DbType="Int NOT NULL")]
		public int ProcessListID
		{
			get
			{
				return this._ProcessListID;
			}
			set
			{
				if ((this._ProcessListID != value))
				{
					if (this._PM_ProjectProcessList.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProcessListIDChanging(value);
					this.SendPropertyChanging();
					this._ProcessListID = value;
					this.SendPropertyChanged("ProcessListID");
					this.OnProcessListIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PM_ProjectEmployee_PM_ProjectEmployeeProcess", Storage="_PM_ProjectEmployee", ThisKey="EmployeeID", OtherKey="EmployeeID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public PM_ProjectEmployee PM_ProjectEmployee
		{
			get
			{
				return this._PM_ProjectEmployee.Entity;
			}
			set
			{
				PM_ProjectEmployee previousValue = this._PM_ProjectEmployee.Entity;
				if (((previousValue != value) 
							|| (this._PM_ProjectEmployee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PM_ProjectEmployee.Entity = null;
						previousValue.PM_ProjectEmployeeProcesses.Remove(this);
					}
					this._PM_ProjectEmployee.Entity = value;
					if ((value != null))
					{
						value.PM_ProjectEmployeeProcesses.Add(this);
						this._EmployeeID = value.EmployeeID;
					}
					else
					{
						this._EmployeeID = default(int);
					}
					this.SendPropertyChanged("PM_ProjectEmployee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PM_ProjectProcessList_PM_ProjectEmployeeProcess", Storage="_PM_ProjectProcessList", ThisKey="ProcessListID", OtherKey="ProcessListId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public PM_ProjectProcessList PM_ProjectProcessList
		{
			get
			{
				return this._PM_ProjectProcessList.Entity;
			}
			set
			{
				PM_ProjectProcessList previousValue = this._PM_ProjectProcessList.Entity;
				if (((previousValue != value) 
							|| (this._PM_ProjectProcessList.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PM_ProjectProcessList.Entity = null;
						previousValue.PM_ProjectEmployeeProcesses.Remove(this);
					}
					this._PM_ProjectProcessList.Entity = value;
					if ((value != null))
					{
						value.PM_ProjectEmployeeProcesses.Add(this);
						this._ProcessListID = value.ProcessListId;
					}
					else
					{
						this._ProcessListID = default(int);
					}
					this.SendPropertyChanged("PM_ProjectProcessList");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PM_ProjectMolds")]
	public partial class PM_ProjectMold : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MoldsId;
		
		private string _MoldsName;
		
		private System.Nullable<decimal> _MoldsMinScheduledDays;
		
		private System.Nullable<decimal> _MoldsFactor;
		
		private System.Nullable<int> _MoldsOrder;
		
		private System.Nullable<System.DateTime> _ModifiedWhen;
		
		private System.Nullable<int> _ModifiedByUserId;
		
		private System.Nullable<System.DateTime> _CreatedWhen;
		
		private System.Nullable<int> _CreatedByUserId;
		
		private EntitySet<IV_tblMoldsProcess> _IV_tblMoldsProcesses;
		
		private EntitySet<PM_ProjectTask> _PM_ProjectTasks;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMoldsIdChanging(int value);
    partial void OnMoldsIdChanged();
    partial void OnMoldsNameChanging(string value);
    partial void OnMoldsNameChanged();
    partial void OnMoldsMinScheduledDaysChanging(System.Nullable<decimal> value);
    partial void OnMoldsMinScheduledDaysChanged();
    partial void OnMoldsFactorChanging(System.Nullable<decimal> value);
    partial void OnMoldsFactorChanged();
    partial void OnMoldsOrderChanging(System.Nullable<int> value);
    partial void OnMoldsOrderChanged();
    partial void OnModifiedWhenChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedWhenChanged();
    partial void OnModifiedByUserIdChanging(System.Nullable<int> value);
    partial void OnModifiedByUserIdChanged();
    partial void OnCreatedWhenChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedWhenChanged();
    partial void OnCreatedByUserIdChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIdChanged();
    #endregion
		
		public PM_ProjectMold()
		{
			this._IV_tblMoldsProcesses = new EntitySet<IV_tblMoldsProcess>(new Action<IV_tblMoldsProcess>(this.attach_IV_tblMoldsProcesses), new Action<IV_tblMoldsProcess>(this.detach_IV_tblMoldsProcesses));
			this._PM_ProjectTasks = new EntitySet<PM_ProjectTask>(new Action<PM_ProjectTask>(this.attach_PM_ProjectTasks), new Action<PM_ProjectTask>(this.detach_PM_ProjectTasks));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoldsId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MoldsId
		{
			get
			{
				return this._MoldsId;
			}
			set
			{
				if ((this._MoldsId != value))
				{
					this.OnMoldsIdChanging(value);
					this.SendPropertyChanging();
					this._MoldsId = value;
					this.SendPropertyChanged("MoldsId");
					this.OnMoldsIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoldsName", DbType="NVarChar(50)")]
		public string MoldsName
		{
			get
			{
				return this._MoldsName;
			}
			set
			{
				if ((this._MoldsName != value))
				{
					this.OnMoldsNameChanging(value);
					this.SendPropertyChanging();
					this._MoldsName = value;
					this.SendPropertyChanged("MoldsName");
					this.OnMoldsNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoldsMinScheduledDays", DbType="Decimal(2,0)")]
		public System.Nullable<decimal> MoldsMinScheduledDays
		{
			get
			{
				return this._MoldsMinScheduledDays;
			}
			set
			{
				if ((this._MoldsMinScheduledDays != value))
				{
					this.OnMoldsMinScheduledDaysChanging(value);
					this.SendPropertyChanging();
					this._MoldsMinScheduledDays = value;
					this.SendPropertyChanged("MoldsMinScheduledDays");
					this.OnMoldsMinScheduledDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoldsFactor", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> MoldsFactor
		{
			get
			{
				return this._MoldsFactor;
			}
			set
			{
				if ((this._MoldsFactor != value))
				{
					this.OnMoldsFactorChanging(value);
					this.SendPropertyChanging();
					this._MoldsFactor = value;
					this.SendPropertyChanged("MoldsFactor");
					this.OnMoldsFactorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoldsOrder", DbType="Int")]
		public System.Nullable<int> MoldsOrder
		{
			get
			{
				return this._MoldsOrder;
			}
			set
			{
				if ((this._MoldsOrder != value))
				{
					this.OnMoldsOrderChanging(value);
					this.SendPropertyChanging();
					this._MoldsOrder = value;
					this.SendPropertyChanged("MoldsOrder");
					this.OnMoldsOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedWhen", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedWhen
		{
			get
			{
				return this._ModifiedWhen;
			}
			set
			{
				if ((this._ModifiedWhen != value))
				{
					this.OnModifiedWhenChanging(value);
					this.SendPropertyChanging();
					this._ModifiedWhen = value;
					this.SendPropertyChanged("ModifiedWhen");
					this.OnModifiedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedByUserId", DbType="Int")]
		public System.Nullable<int> ModifiedByUserId
		{
			get
			{
				return this._ModifiedByUserId;
			}
			set
			{
				if ((this._ModifiedByUserId != value))
				{
					this.OnModifiedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._ModifiedByUserId = value;
					this.SendPropertyChanged("ModifiedByUserId");
					this.OnModifiedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWhen", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedWhen
		{
			get
			{
				return this._CreatedWhen;
			}
			set
			{
				if ((this._CreatedWhen != value))
				{
					this.OnCreatedWhenChanging(value);
					this.SendPropertyChanging();
					this._CreatedWhen = value;
					this.SendPropertyChanged("CreatedWhen");
					this.OnCreatedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserId", DbType="Int")]
		public System.Nullable<int> CreatedByUserId
		{
			get
			{
				return this._CreatedByUserId;
			}
			set
			{
				if ((this._CreatedByUserId != value))
				{
					this.OnCreatedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserId = value;
					this.SendPropertyChanged("CreatedByUserId");
					this.OnCreatedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PM_ProjectMold_IV_tblMoldsProcess", Storage="_IV_tblMoldsProcesses", ThisKey="MoldsId", OtherKey="MoldsId")]
		public EntitySet<IV_tblMoldsProcess> IV_tblMoldsProcesses
		{
			get
			{
				return this._IV_tblMoldsProcesses;
			}
			set
			{
				this._IV_tblMoldsProcesses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PM_ProjectMold_PM_ProjectTask", Storage="_PM_ProjectTasks", ThisKey="MoldsId", OtherKey="ProjectTaskMoldsId")]
		public EntitySet<PM_ProjectTask> PM_ProjectTasks
		{
			get
			{
				return this._PM_ProjectTasks;
			}
			set
			{
				this._PM_ProjectTasks.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_IV_tblMoldsProcesses(IV_tblMoldsProcess entity)
		{
			this.SendPropertyChanging();
			entity.PM_ProjectMold = this;
		}
		
		private void detach_IV_tblMoldsProcesses(IV_tblMoldsProcess entity)
		{
			this.SendPropertyChanging();
			entity.PM_ProjectMold = null;
		}
		
		private void attach_PM_ProjectTasks(PM_ProjectTask entity)
		{
			this.SendPropertyChanging();
			entity.PM_ProjectMold = this;
		}
		
		private void detach_PM_ProjectTasks(PM_ProjectTask entity)
		{
			this.SendPropertyChanging();
			entity.PM_ProjectMold = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PM_ProjectProcess")]
	public partial class PM_ProjectProcess : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProcessId;
		
		private int _ProcessProjectTaskID;
		
		private int _ProcessListId;
		
		private System.Nullable<decimal> _ProcessExpectedTime;
		
		private System.Nullable<System.DateTime> _ProcessExpectedCompletion;
		
		private System.Nullable<decimal> _ProcessFactTime;
		
		private System.Nullable<System.DateTime> _ProcessCompletion;
		
		private System.Nullable<int> _ProcessPriority;
		
		private System.Nullable<bool> _ProcessRequired;
		
		private System.Nullable<bool> _ProcessSMGangerBrowse;
		
		private System.Nullable<int> _ProcessPlusBrowse;
		
		private System.Nullable<bool> _ProcessGangerBrowse;
		
		private System.Nullable<System.DateTime> _ModifiedWhen;
		
		private System.Nullable<int> _ModifiedByUserId;
		
		private System.Nullable<System.DateTime> _CreatedWhen;
		
		private System.Nullable<int> _CreatedByUserId;
		
		private EntityRef<PM_ProjectProcessList> _PM_ProjectProcessList;
		
		private EntityRef<PM_ProjectTask> _PM_ProjectTask;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProcessIdChanging(int value);
    partial void OnProcessIdChanged();
    partial void OnProcessProjectTaskIDChanging(int value);
    partial void OnProcessProjectTaskIDChanged();
    partial void OnProcessListIdChanging(int value);
    partial void OnProcessListIdChanged();
    partial void OnProcessExpectedTimeChanging(System.Nullable<decimal> value);
    partial void OnProcessExpectedTimeChanged();
    partial void OnProcessExpectedCompletionChanging(System.Nullable<System.DateTime> value);
    partial void OnProcessExpectedCompletionChanged();
    partial void OnProcessFactTimeChanging(System.Nullable<decimal> value);
    partial void OnProcessFactTimeChanged();
    partial void OnProcessCompletionChanging(System.Nullable<System.DateTime> value);
    partial void OnProcessCompletionChanged();
    partial void OnProcessPriorityChanging(System.Nullable<int> value);
    partial void OnProcessPriorityChanged();
    partial void OnProcessRequiredChanging(System.Nullable<bool> value);
    partial void OnProcessRequiredChanged();
    partial void OnProcessSMGangerBrowseChanging(System.Nullable<bool> value);
    partial void OnProcessSMGangerBrowseChanged();
    partial void OnProcessPlusBrowseChanging(System.Nullable<int> value);
    partial void OnProcessPlusBrowseChanged();
    partial void OnProcessGangerBrowseChanging(System.Nullable<bool> value);
    partial void OnProcessGangerBrowseChanged();
    partial void OnModifiedWhenChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedWhenChanged();
    partial void OnModifiedByUserIdChanging(System.Nullable<int> value);
    partial void OnModifiedByUserIdChanged();
    partial void OnCreatedWhenChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedWhenChanged();
    partial void OnCreatedByUserIdChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIdChanged();
    #endregion
		
		public PM_ProjectProcess()
		{
			this._PM_ProjectProcessList = default(EntityRef<PM_ProjectProcessList>);
			this._PM_ProjectTask = default(EntityRef<PM_ProjectTask>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProcessId
		{
			get
			{
				return this._ProcessId;
			}
			set
			{
				if ((this._ProcessId != value))
				{
					this.OnProcessIdChanging(value);
					this.SendPropertyChanging();
					this._ProcessId = value;
					this.SendPropertyChanged("ProcessId");
					this.OnProcessIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessProjectTaskID", DbType="Int NOT NULL")]
		public int ProcessProjectTaskID
		{
			get
			{
				return this._ProcessProjectTaskID;
			}
			set
			{
				if ((this._ProcessProjectTaskID != value))
				{
					if (this._PM_ProjectTask.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProcessProjectTaskIDChanging(value);
					this.SendPropertyChanging();
					this._ProcessProjectTaskID = value;
					this.SendPropertyChanged("ProcessProjectTaskID");
					this.OnProcessProjectTaskIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessListId", DbType="Int NOT NULL")]
		public int ProcessListId
		{
			get
			{
				return this._ProcessListId;
			}
			set
			{
				if ((this._ProcessListId != value))
				{
					if (this._PM_ProjectProcessList.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProcessListIdChanging(value);
					this.SendPropertyChanging();
					this._ProcessListId = value;
					this.SendPropertyChanged("ProcessListId");
					this.OnProcessListIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessExpectedTime", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> ProcessExpectedTime
		{
			get
			{
				return this._ProcessExpectedTime;
			}
			set
			{
				if ((this._ProcessExpectedTime != value))
				{
					this.OnProcessExpectedTimeChanging(value);
					this.SendPropertyChanging();
					this._ProcessExpectedTime = value;
					this.SendPropertyChanged("ProcessExpectedTime");
					this.OnProcessExpectedTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessExpectedCompletion", DbType="DateTime")]
		public System.Nullable<System.DateTime> ProcessExpectedCompletion
		{
			get
			{
				return this._ProcessExpectedCompletion;
			}
			set
			{
				if ((this._ProcessExpectedCompletion != value))
				{
					this.OnProcessExpectedCompletionChanging(value);
					this.SendPropertyChanging();
					this._ProcessExpectedCompletion = value;
					this.SendPropertyChanged("ProcessExpectedCompletion");
					this.OnProcessExpectedCompletionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessFactTime", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> ProcessFactTime
		{
			get
			{
				return this._ProcessFactTime;
			}
			set
			{
				if ((this._ProcessFactTime != value))
				{
					this.OnProcessFactTimeChanging(value);
					this.SendPropertyChanging();
					this._ProcessFactTime = value;
					this.SendPropertyChanged("ProcessFactTime");
					this.OnProcessFactTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessCompletion", DbType="DateTime")]
		public System.Nullable<System.DateTime> ProcessCompletion
		{
			get
			{
				return this._ProcessCompletion;
			}
			set
			{
				if ((this._ProcessCompletion != value))
				{
					this.OnProcessCompletionChanging(value);
					this.SendPropertyChanging();
					this._ProcessCompletion = value;
					this.SendPropertyChanged("ProcessCompletion");
					this.OnProcessCompletionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessPriority", DbType="Int")]
		public System.Nullable<int> ProcessPriority
		{
			get
			{
				return this._ProcessPriority;
			}
			set
			{
				if ((this._ProcessPriority != value))
				{
					this.OnProcessPriorityChanging(value);
					this.SendPropertyChanging();
					this._ProcessPriority = value;
					this.SendPropertyChanged("ProcessPriority");
					this.OnProcessPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessRequired", DbType="Bit")]
		public System.Nullable<bool> ProcessRequired
		{
			get
			{
				return this._ProcessRequired;
			}
			set
			{
				if ((this._ProcessRequired != value))
				{
					this.OnProcessRequiredChanging(value);
					this.SendPropertyChanging();
					this._ProcessRequired = value;
					this.SendPropertyChanged("ProcessRequired");
					this.OnProcessRequiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessSMGangerBrowse", DbType="Bit")]
		public System.Nullable<bool> ProcessSMGangerBrowse
		{
			get
			{
				return this._ProcessSMGangerBrowse;
			}
			set
			{
				if ((this._ProcessSMGangerBrowse != value))
				{
					this.OnProcessSMGangerBrowseChanging(value);
					this.SendPropertyChanging();
					this._ProcessSMGangerBrowse = value;
					this.SendPropertyChanged("ProcessSMGangerBrowse");
					this.OnProcessSMGangerBrowseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessPlusBrowse", DbType="Int")]
		public System.Nullable<int> ProcessPlusBrowse
		{
			get
			{
				return this._ProcessPlusBrowse;
			}
			set
			{
				if ((this._ProcessPlusBrowse != value))
				{
					this.OnProcessPlusBrowseChanging(value);
					this.SendPropertyChanging();
					this._ProcessPlusBrowse = value;
					this.SendPropertyChanged("ProcessPlusBrowse");
					this.OnProcessPlusBrowseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessGangerBrowse", DbType="Bit")]
		public System.Nullable<bool> ProcessGangerBrowse
		{
			get
			{
				return this._ProcessGangerBrowse;
			}
			set
			{
				if ((this._ProcessGangerBrowse != value))
				{
					this.OnProcessGangerBrowseChanging(value);
					this.SendPropertyChanging();
					this._ProcessGangerBrowse = value;
					this.SendPropertyChanged("ProcessGangerBrowse");
					this.OnProcessGangerBrowseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedWhen", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedWhen
		{
			get
			{
				return this._ModifiedWhen;
			}
			set
			{
				if ((this._ModifiedWhen != value))
				{
					this.OnModifiedWhenChanging(value);
					this.SendPropertyChanging();
					this._ModifiedWhen = value;
					this.SendPropertyChanged("ModifiedWhen");
					this.OnModifiedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedByUserId", DbType="Int")]
		public System.Nullable<int> ModifiedByUserId
		{
			get
			{
				return this._ModifiedByUserId;
			}
			set
			{
				if ((this._ModifiedByUserId != value))
				{
					this.OnModifiedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._ModifiedByUserId = value;
					this.SendPropertyChanged("ModifiedByUserId");
					this.OnModifiedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWhen", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedWhen
		{
			get
			{
				return this._CreatedWhen;
			}
			set
			{
				if ((this._CreatedWhen != value))
				{
					this.OnCreatedWhenChanging(value);
					this.SendPropertyChanging();
					this._CreatedWhen = value;
					this.SendPropertyChanged("CreatedWhen");
					this.OnCreatedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserId", DbType="Int")]
		public System.Nullable<int> CreatedByUserId
		{
			get
			{
				return this._CreatedByUserId;
			}
			set
			{
				if ((this._CreatedByUserId != value))
				{
					this.OnCreatedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserId = value;
					this.SendPropertyChanged("CreatedByUserId");
					this.OnCreatedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PM_ProjectProcessList_PM_ProjectProcess", Storage="_PM_ProjectProcessList", ThisKey="ProcessListId", OtherKey="ProcessListId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public PM_ProjectProcessList PM_ProjectProcessList
		{
			get
			{
				return this._PM_ProjectProcessList.Entity;
			}
			set
			{
				PM_ProjectProcessList previousValue = this._PM_ProjectProcessList.Entity;
				if (((previousValue != value) 
							|| (this._PM_ProjectProcessList.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PM_ProjectProcessList.Entity = null;
						previousValue.PM_ProjectProcesses.Remove(this);
					}
					this._PM_ProjectProcessList.Entity = value;
					if ((value != null))
					{
						value.PM_ProjectProcesses.Add(this);
						this._ProcessListId = value.ProcessListId;
					}
					else
					{
						this._ProcessListId = default(int);
					}
					this.SendPropertyChanged("PM_ProjectProcessList");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PM_ProjectTask_PM_ProjectProcess", Storage="_PM_ProjectTask", ThisKey="ProcessProjectTaskID", OtherKey="ProjectTaskID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public PM_ProjectTask PM_ProjectTask
		{
			get
			{
				return this._PM_ProjectTask.Entity;
			}
			set
			{
				PM_ProjectTask previousValue = this._PM_ProjectTask.Entity;
				if (((previousValue != value) 
							|| (this._PM_ProjectTask.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PM_ProjectTask.Entity = null;
						previousValue.PM_ProjectProcesses.Remove(this);
					}
					this._PM_ProjectTask.Entity = value;
					if ((value != null))
					{
						value.PM_ProjectProcesses.Add(this);
						this._ProcessProjectTaskID = value.ProjectTaskID;
					}
					else
					{
						this._ProcessProjectTaskID = default(int);
					}
					this.SendPropertyChanged("PM_ProjectTask");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PM_ProjectProcessDetail")]
	public partial class PM_ProjectProcessDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DetailId;
		
		private int _DetailSubProcessId;
		
		private int _DetailProjectTaskID;
		
		private System.Nullable<System.DateTime> _DetailStartTimeM;
		
		private System.Nullable<System.DateTime> _DetailEndTimeM;
		
		private System.Nullable<decimal> _DetailTotalTimeM;
		
		private int _DetailOwnerM;
		
		private System.Nullable<System.DateTime> _DetailStartTimeP;
		
		private System.Nullable<System.DateTime> _DetailEndTimeP;
		
		private System.Nullable<System.DateTime> _DetailTotalTimeP;
		
		private int _DetailOwnerP;
		
		private System.Nullable<int> _DetailOwner;
		
		private System.Nullable<System.DateTime> _DetailNormsTime;
		
		private System.Nullable<int> _DetailJobNumber;
		
		private System.Nullable<int> _DetailBrowse;
		
		private string _DetailComments;
		
		private System.Nullable<int> _DetailMachineId;
		
		private System.Nullable<System.DateTime> _ModifiedWhen;
		
		private System.Nullable<int> _ModifiedByUserId;
		
		private System.Nullable<System.DateTime> _CreatedWhen;
		
		private System.Nullable<int> _CreatedByUserId;
		
		private EntityRef<PM_ProjectEmployee> _PM_ProjectEmployee;
		
		private EntityRef<PM_ProjectEmployee> _PM_ProjectEmployee1;
		
		private EntityRef<PM_ProjectEmployee> _PM_ProjectEmployee2;
		
		private EntityRef<PM_ProjectSubProcess> _PM_ProjectSubProcess;
		
		private EntityRef<PM_ProjectMachinery> _PM_ProjectMachinery;
		
		private EntityRef<PM_ProjectTask> _PM_ProjectTask;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDetailIdChanging(int value);
    partial void OnDetailIdChanged();
    partial void OnDetailSubProcessIdChanging(int value);
    partial void OnDetailSubProcessIdChanged();
    partial void OnDetailProjectTaskIDChanging(int value);
    partial void OnDetailProjectTaskIDChanged();
    partial void OnDetailStartTimeMChanging(System.Nullable<System.DateTime> value);
    partial void OnDetailStartTimeMChanged();
    partial void OnDetailEndTimeMChanging(System.Nullable<System.DateTime> value);
    partial void OnDetailEndTimeMChanged();
    partial void OnDetailTotalTimeMChanging(System.Nullable<decimal> value);
    partial void OnDetailTotalTimeMChanged();
    partial void OnDetailOwnerMChanging(int value);
    partial void OnDetailOwnerMChanged();
    partial void OnDetailStartTimePChanging(System.Nullable<System.DateTime> value);
    partial void OnDetailStartTimePChanged();
    partial void OnDetailEndTimePChanging(System.Nullable<System.DateTime> value);
    partial void OnDetailEndTimePChanged();
    partial void OnDetailTotalTimePChanging(System.Nullable<System.DateTime> value);
    partial void OnDetailTotalTimePChanged();
    partial void OnDetailOwnerPChanging(int value);
    partial void OnDetailOwnerPChanged();
    partial void OnDetailOwnerChanging(System.Nullable<int> value);
    partial void OnDetailOwnerChanged();
    partial void OnDetailNormsTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnDetailNormsTimeChanged();
    partial void OnDetailJobNumberChanging(System.Nullable<int> value);
    partial void OnDetailJobNumberChanged();
    partial void OnDetailBrowseChanging(System.Nullable<int> value);
    partial void OnDetailBrowseChanged();
    partial void OnDetailCommentsChanging(string value);
    partial void OnDetailCommentsChanged();
    partial void OnDetailMachineIdChanging(System.Nullable<int> value);
    partial void OnDetailMachineIdChanged();
    partial void OnModifiedWhenChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedWhenChanged();
    partial void OnModifiedByUserIdChanging(System.Nullable<int> value);
    partial void OnModifiedByUserIdChanged();
    partial void OnCreatedWhenChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedWhenChanged();
    partial void OnCreatedByUserIdChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIdChanged();
    #endregion
		
		public PM_ProjectProcessDetail()
		{
			this._PM_ProjectEmployee = default(EntityRef<PM_ProjectEmployee>);
			this._PM_ProjectEmployee1 = default(EntityRef<PM_ProjectEmployee>);
			this._PM_ProjectEmployee2 = default(EntityRef<PM_ProjectEmployee>);
			this._PM_ProjectSubProcess = default(EntityRef<PM_ProjectSubProcess>);
			this._PM_ProjectMachinery = default(EntityRef<PM_ProjectMachinery>);
			this._PM_ProjectTask = default(EntityRef<PM_ProjectTask>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DetailId
		{
			get
			{
				return this._DetailId;
			}
			set
			{
				if ((this._DetailId != value))
				{
					this.OnDetailIdChanging(value);
					this.SendPropertyChanging();
					this._DetailId = value;
					this.SendPropertyChanged("DetailId");
					this.OnDetailIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailSubProcessId", DbType="Int NOT NULL")]
		public int DetailSubProcessId
		{
			get
			{
				return this._DetailSubProcessId;
			}
			set
			{
				if ((this._DetailSubProcessId != value))
				{
					if (this._PM_ProjectSubProcess.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDetailSubProcessIdChanging(value);
					this.SendPropertyChanging();
					this._DetailSubProcessId = value;
					this.SendPropertyChanged("DetailSubProcessId");
					this.OnDetailSubProcessIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailProjectTaskID", DbType="Int NOT NULL")]
		public int DetailProjectTaskID
		{
			get
			{
				return this._DetailProjectTaskID;
			}
			set
			{
				if ((this._DetailProjectTaskID != value))
				{
					if (this._PM_ProjectTask.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDetailProjectTaskIDChanging(value);
					this.SendPropertyChanging();
					this._DetailProjectTaskID = value;
					this.SendPropertyChanged("DetailProjectTaskID");
					this.OnDetailProjectTaskIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailStartTimeM", DbType="DateTime")]
		public System.Nullable<System.DateTime> DetailStartTimeM
		{
			get
			{
				return this._DetailStartTimeM;
			}
			set
			{
				if ((this._DetailStartTimeM != value))
				{
					this.OnDetailStartTimeMChanging(value);
					this.SendPropertyChanging();
					this._DetailStartTimeM = value;
					this.SendPropertyChanged("DetailStartTimeM");
					this.OnDetailStartTimeMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailEndTimeM", DbType="DateTime")]
		public System.Nullable<System.DateTime> DetailEndTimeM
		{
			get
			{
				return this._DetailEndTimeM;
			}
			set
			{
				if ((this._DetailEndTimeM != value))
				{
					this.OnDetailEndTimeMChanging(value);
					this.SendPropertyChanging();
					this._DetailEndTimeM = value;
					this.SendPropertyChanged("DetailEndTimeM");
					this.OnDetailEndTimeMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailTotalTimeM", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> DetailTotalTimeM
		{
			get
			{
				return this._DetailTotalTimeM;
			}
			set
			{
				if ((this._DetailTotalTimeM != value))
				{
					this.OnDetailTotalTimeMChanging(value);
					this.SendPropertyChanging();
					this._DetailTotalTimeM = value;
					this.SendPropertyChanged("DetailTotalTimeM");
					this.OnDetailTotalTimeMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailOwnerM", DbType="Int NOT NULL")]
		public int DetailOwnerM
		{
			get
			{
				return this._DetailOwnerM;
			}
			set
			{
				if ((this._DetailOwnerM != value))
				{
					if (this._PM_ProjectEmployee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDetailOwnerMChanging(value);
					this.SendPropertyChanging();
					this._DetailOwnerM = value;
					this.SendPropertyChanged("DetailOwnerM");
					this.OnDetailOwnerMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailStartTimeP", DbType="DateTime")]
		public System.Nullable<System.DateTime> DetailStartTimeP
		{
			get
			{
				return this._DetailStartTimeP;
			}
			set
			{
				if ((this._DetailStartTimeP != value))
				{
					this.OnDetailStartTimePChanging(value);
					this.SendPropertyChanging();
					this._DetailStartTimeP = value;
					this.SendPropertyChanged("DetailStartTimeP");
					this.OnDetailStartTimePChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailEndTimeP", DbType="DateTime")]
		public System.Nullable<System.DateTime> DetailEndTimeP
		{
			get
			{
				return this._DetailEndTimeP;
			}
			set
			{
				if ((this._DetailEndTimeP != value))
				{
					this.OnDetailEndTimePChanging(value);
					this.SendPropertyChanging();
					this._DetailEndTimeP = value;
					this.SendPropertyChanged("DetailEndTimeP");
					this.OnDetailEndTimePChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailTotalTimeP", DbType="DateTime")]
		public System.Nullable<System.DateTime> DetailTotalTimeP
		{
			get
			{
				return this._DetailTotalTimeP;
			}
			set
			{
				if ((this._DetailTotalTimeP != value))
				{
					this.OnDetailTotalTimePChanging(value);
					this.SendPropertyChanging();
					this._DetailTotalTimeP = value;
					this.SendPropertyChanged("DetailTotalTimeP");
					this.OnDetailTotalTimePChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailOwnerP", DbType="Int NOT NULL")]
		public int DetailOwnerP
		{
			get
			{
				return this._DetailOwnerP;
			}
			set
			{
				if ((this._DetailOwnerP != value))
				{
					if (this._PM_ProjectEmployee1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDetailOwnerPChanging(value);
					this.SendPropertyChanging();
					this._DetailOwnerP = value;
					this.SendPropertyChanged("DetailOwnerP");
					this.OnDetailOwnerPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailOwner", DbType="Int")]
		public System.Nullable<int> DetailOwner
		{
			get
			{
				return this._DetailOwner;
			}
			set
			{
				if ((this._DetailOwner != value))
				{
					if (this._PM_ProjectEmployee2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDetailOwnerChanging(value);
					this.SendPropertyChanging();
					this._DetailOwner = value;
					this.SendPropertyChanged("DetailOwner");
					this.OnDetailOwnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailNormsTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> DetailNormsTime
		{
			get
			{
				return this._DetailNormsTime;
			}
			set
			{
				if ((this._DetailNormsTime != value))
				{
					this.OnDetailNormsTimeChanging(value);
					this.SendPropertyChanging();
					this._DetailNormsTime = value;
					this.SendPropertyChanged("DetailNormsTime");
					this.OnDetailNormsTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailJobNumber", DbType="Int")]
		public System.Nullable<int> DetailJobNumber
		{
			get
			{
				return this._DetailJobNumber;
			}
			set
			{
				if ((this._DetailJobNumber != value))
				{
					this.OnDetailJobNumberChanging(value);
					this.SendPropertyChanging();
					this._DetailJobNumber = value;
					this.SendPropertyChanged("DetailJobNumber");
					this.OnDetailJobNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailBrowse", DbType="Int")]
		public System.Nullable<int> DetailBrowse
		{
			get
			{
				return this._DetailBrowse;
			}
			set
			{
				if ((this._DetailBrowse != value))
				{
					this.OnDetailBrowseChanging(value);
					this.SendPropertyChanging();
					this._DetailBrowse = value;
					this.SendPropertyChanged("DetailBrowse");
					this.OnDetailBrowseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailComments", DbType="NVarChar(MAX)")]
		public string DetailComments
		{
			get
			{
				return this._DetailComments;
			}
			set
			{
				if ((this._DetailComments != value))
				{
					this.OnDetailCommentsChanging(value);
					this.SendPropertyChanging();
					this._DetailComments = value;
					this.SendPropertyChanged("DetailComments");
					this.OnDetailCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailMachineId", DbType="Int")]
		public System.Nullable<int> DetailMachineId
		{
			get
			{
				return this._DetailMachineId;
			}
			set
			{
				if ((this._DetailMachineId != value))
				{
					if (this._PM_ProjectMachinery.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDetailMachineIdChanging(value);
					this.SendPropertyChanging();
					this._DetailMachineId = value;
					this.SendPropertyChanged("DetailMachineId");
					this.OnDetailMachineIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedWhen", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedWhen
		{
			get
			{
				return this._ModifiedWhen;
			}
			set
			{
				if ((this._ModifiedWhen != value))
				{
					this.OnModifiedWhenChanging(value);
					this.SendPropertyChanging();
					this._ModifiedWhen = value;
					this.SendPropertyChanged("ModifiedWhen");
					this.OnModifiedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedByUserId", DbType="Int")]
		public System.Nullable<int> ModifiedByUserId
		{
			get
			{
				return this._ModifiedByUserId;
			}
			set
			{
				if ((this._ModifiedByUserId != value))
				{
					this.OnModifiedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._ModifiedByUserId = value;
					this.SendPropertyChanged("ModifiedByUserId");
					this.OnModifiedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWhen", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedWhen
		{
			get
			{
				return this._CreatedWhen;
			}
			set
			{
				if ((this._CreatedWhen != value))
				{
					this.OnCreatedWhenChanging(value);
					this.SendPropertyChanging();
					this._CreatedWhen = value;
					this.SendPropertyChanged("CreatedWhen");
					this.OnCreatedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserId", DbType="Int")]
		public System.Nullable<int> CreatedByUserId
		{
			get
			{
				return this._CreatedByUserId;
			}
			set
			{
				if ((this._CreatedByUserId != value))
				{
					this.OnCreatedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserId = value;
					this.SendPropertyChanged("CreatedByUserId");
					this.OnCreatedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PM_ProjectEmployee_PM_ProjectProcessDetail", Storage="_PM_ProjectEmployee", ThisKey="DetailOwnerM", OtherKey="EmployeeID", IsForeignKey=true)]
		public PM_ProjectEmployee PM_ProjectEmployee
		{
			get
			{
				return this._PM_ProjectEmployee.Entity;
			}
			set
			{
				PM_ProjectEmployee previousValue = this._PM_ProjectEmployee.Entity;
				if (((previousValue != value) 
							|| (this._PM_ProjectEmployee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PM_ProjectEmployee.Entity = null;
						previousValue.PM_ProjectProcessDetails.Remove(this);
					}
					this._PM_ProjectEmployee.Entity = value;
					if ((value != null))
					{
						value.PM_ProjectProcessDetails.Add(this);
						this._DetailOwnerM = value.EmployeeID;
					}
					else
					{
						this._DetailOwnerM = default(int);
					}
					this.SendPropertyChanged("PM_ProjectEmployee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PM_ProjectEmployee_PM_ProjectProcessDetail1", Storage="_PM_ProjectEmployee1", ThisKey="DetailOwnerP", OtherKey="EmployeeID", IsForeignKey=true)]
		public PM_ProjectEmployee PM_ProjectEmployee1
		{
			get
			{
				return this._PM_ProjectEmployee1.Entity;
			}
			set
			{
				PM_ProjectEmployee previousValue = this._PM_ProjectEmployee1.Entity;
				if (((previousValue != value) 
							|| (this._PM_ProjectEmployee1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PM_ProjectEmployee1.Entity = null;
						previousValue.PM_ProjectProcessDetails1.Remove(this);
					}
					this._PM_ProjectEmployee1.Entity = value;
					if ((value != null))
					{
						value.PM_ProjectProcessDetails1.Add(this);
						this._DetailOwnerP = value.EmployeeID;
					}
					else
					{
						this._DetailOwnerP = default(int);
					}
					this.SendPropertyChanged("PM_ProjectEmployee1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PM_ProjectEmployee_PM_ProjectProcessDetail2", Storage="_PM_ProjectEmployee2", ThisKey="DetailOwner", OtherKey="EmployeeID", IsForeignKey=true)]
		public PM_ProjectEmployee PM_ProjectEmployee2
		{
			get
			{
				return this._PM_ProjectEmployee2.Entity;
			}
			set
			{
				PM_ProjectEmployee previousValue = this._PM_ProjectEmployee2.Entity;
				if (((previousValue != value) 
							|| (this._PM_ProjectEmployee2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PM_ProjectEmployee2.Entity = null;
						previousValue.PM_ProjectProcessDetails2.Remove(this);
					}
					this._PM_ProjectEmployee2.Entity = value;
					if ((value != null))
					{
						value.PM_ProjectProcessDetails2.Add(this);
						this._DetailOwner = value.EmployeeID;
					}
					else
					{
						this._DetailOwner = default(Nullable<int>);
					}
					this.SendPropertyChanged("PM_ProjectEmployee2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PM_ProjectSubProcess_PM_ProjectProcessDetail", Storage="_PM_ProjectSubProcess", ThisKey="DetailSubProcessId", OtherKey="SubProcessId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public PM_ProjectSubProcess PM_ProjectSubProcess
		{
			get
			{
				return this._PM_ProjectSubProcess.Entity;
			}
			set
			{
				PM_ProjectSubProcess previousValue = this._PM_ProjectSubProcess.Entity;
				if (((previousValue != value) 
							|| (this._PM_ProjectSubProcess.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PM_ProjectSubProcess.Entity = null;
						previousValue.PM_ProjectProcessDetails.Remove(this);
					}
					this._PM_ProjectSubProcess.Entity = value;
					if ((value != null))
					{
						value.PM_ProjectProcessDetails.Add(this);
						this._DetailSubProcessId = value.SubProcessId;
					}
					else
					{
						this._DetailSubProcessId = default(int);
					}
					this.SendPropertyChanged("PM_ProjectSubProcess");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PM_ProjectMachinery_PM_ProjectProcessDetail", Storage="_PM_ProjectMachinery", ThisKey="DetailMachineId", OtherKey="MachineryId", IsForeignKey=true, DeleteRule="CASCADE")]
		public PM_ProjectMachinery PM_ProjectMachinery
		{
			get
			{
				return this._PM_ProjectMachinery.Entity;
			}
			set
			{
				PM_ProjectMachinery previousValue = this._PM_ProjectMachinery.Entity;
				if (((previousValue != value) 
							|| (this._PM_ProjectMachinery.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PM_ProjectMachinery.Entity = null;
						previousValue.PM_ProjectProcessDetails.Remove(this);
					}
					this._PM_ProjectMachinery.Entity = value;
					if ((value != null))
					{
						value.PM_ProjectProcessDetails.Add(this);
						this._DetailMachineId = value.MachineryId;
					}
					else
					{
						this._DetailMachineId = default(Nullable<int>);
					}
					this.SendPropertyChanged("PM_ProjectMachinery");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PM_ProjectTask_PM_ProjectProcessDetail", Storage="_PM_ProjectTask", ThisKey="DetailProjectTaskID", OtherKey="ProjectTaskID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public PM_ProjectTask PM_ProjectTask
		{
			get
			{
				return this._PM_ProjectTask.Entity;
			}
			set
			{
				PM_ProjectTask previousValue = this._PM_ProjectTask.Entity;
				if (((previousValue != value) 
							|| (this._PM_ProjectTask.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PM_ProjectTask.Entity = null;
						previousValue.PM_ProjectProcessDetails.Remove(this);
					}
					this._PM_ProjectTask.Entity = value;
					if ((value != null))
					{
						value.PM_ProjectProcessDetails.Add(this);
						this._DetailProjectTaskID = value.ProjectTaskID;
					}
					else
					{
						this._DetailProjectTaskID = default(int);
					}
					this.SendPropertyChanged("PM_ProjectTask");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PM_ProjectRolePermission")]
	public partial class PM_ProjectRolePermission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProjectID;
		
		private int _RoleID;
		
		private int _PermissionID;
		
		private EntityRef<PM_Project> _PM_Project;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProjectIDChanging(int value);
    partial void OnProjectIDChanged();
    partial void OnRoleIDChanging(int value);
    partial void OnRoleIDChanged();
    partial void OnPermissionIDChanging(int value);
    partial void OnPermissionIDChanged();
    #endregion
		
		public PM_ProjectRolePermission()
		{
			this._PM_Project = default(EntityRef<PM_Project>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ProjectID
		{
			get
			{
				return this._ProjectID;
			}
			set
			{
				if ((this._ProjectID != value))
				{
					if (this._PM_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIDChanging(value);
					this.SendPropertyChanging();
					this._ProjectID = value;
					this.SendPropertyChanged("ProjectID");
					this.OnProjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermissionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PermissionID
		{
			get
			{
				return this._PermissionID;
			}
			set
			{
				if ((this._PermissionID != value))
				{
					this.OnPermissionIDChanging(value);
					this.SendPropertyChanging();
					this._PermissionID = value;
					this.SendPropertyChanged("PermissionID");
					this.OnPermissionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PM_Project_PM_ProjectRolePermission", Storage="_PM_Project", ThisKey="ProjectID", OtherKey="ProjectID", IsForeignKey=true)]
		public PM_Project PM_Project
		{
			get
			{
				return this._PM_Project.Entity;
			}
			set
			{
				PM_Project previousValue = this._PM_Project.Entity;
				if (((previousValue != value) 
							|| (this._PM_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PM_Project.Entity = null;
						previousValue.PM_ProjectRolePermissions.Remove(this);
					}
					this._PM_Project.Entity = value;
					if ((value != null))
					{
						value.PM_ProjectRolePermissions.Add(this);
						this._ProjectID = value.ProjectID;
					}
					else
					{
						this._ProjectID = default(int);
					}
					this.SendPropertyChanged("PM_Project");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PM_ProjectStatus")]
	public partial class PM_ProjectStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StatusID;
		
		private string _StatusName;
		
		private string _StatusDisplayName;
		
		private int _StatusOrder;
		
		private string _StatusColor;
		
		private string _StatusIcon;
		
		private System.Guid _StatusGUID;
		
		private System.DateTime _StatusLastModified;
		
		private bool _StatusEnabled;
		
		private bool _StatusIsFinished;
		
		private bool _StatusIsNotStarted;
		
		private EntitySet<PM_Project> _PM_Projects;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStatusIDChanging(int value);
    partial void OnStatusIDChanged();
    partial void OnStatusNameChanging(string value);
    partial void OnStatusNameChanged();
    partial void OnStatusDisplayNameChanging(string value);
    partial void OnStatusDisplayNameChanged();
    partial void OnStatusOrderChanging(int value);
    partial void OnStatusOrderChanged();
    partial void OnStatusColorChanging(string value);
    partial void OnStatusColorChanged();
    partial void OnStatusIconChanging(string value);
    partial void OnStatusIconChanged();
    partial void OnStatusGUIDChanging(System.Guid value);
    partial void OnStatusGUIDChanged();
    partial void OnStatusLastModifiedChanging(System.DateTime value);
    partial void OnStatusLastModifiedChanged();
    partial void OnStatusEnabledChanging(bool value);
    partial void OnStatusEnabledChanged();
    partial void OnStatusIsFinishedChanging(bool value);
    partial void OnStatusIsFinishedChanged();
    partial void OnStatusIsNotStartedChanging(bool value);
    partial void OnStatusIsNotStartedChanged();
    #endregion
		
		public PM_ProjectStatus()
		{
			this._PM_Projects = new EntitySet<PM_Project>(new Action<PM_Project>(this.attach_PM_Projects), new Action<PM_Project>(this.detach_PM_Projects));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StatusID
		{
			get
			{
				return this._StatusID;
			}
			set
			{
				if ((this._StatusID != value))
				{
					this.OnStatusIDChanging(value);
					this.SendPropertyChanging();
					this._StatusID = value;
					this.SendPropertyChanged("StatusID");
					this.OnStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string StatusName
		{
			get
			{
				return this._StatusName;
			}
			set
			{
				if ((this._StatusName != value))
				{
					this.OnStatusNameChanging(value);
					this.SendPropertyChanging();
					this._StatusName = value;
					this.SendPropertyChanged("StatusName");
					this.OnStatusNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusDisplayName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string StatusDisplayName
		{
			get
			{
				return this._StatusDisplayName;
			}
			set
			{
				if ((this._StatusDisplayName != value))
				{
					this.OnStatusDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._StatusDisplayName = value;
					this.SendPropertyChanged("StatusDisplayName");
					this.OnStatusDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusOrder", DbType="Int NOT NULL")]
		public int StatusOrder
		{
			get
			{
				return this._StatusOrder;
			}
			set
			{
				if ((this._StatusOrder != value))
				{
					this.OnStatusOrderChanging(value);
					this.SendPropertyChanging();
					this._StatusOrder = value;
					this.SendPropertyChanged("StatusOrder");
					this.OnStatusOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusColor", DbType="NVarChar(7)")]
		public string StatusColor
		{
			get
			{
				return this._StatusColor;
			}
			set
			{
				if ((this._StatusColor != value))
				{
					this.OnStatusColorChanging(value);
					this.SendPropertyChanging();
					this._StatusColor = value;
					this.SendPropertyChanged("StatusColor");
					this.OnStatusColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusIcon", DbType="NVarChar(450)")]
		public string StatusIcon
		{
			get
			{
				return this._StatusIcon;
			}
			set
			{
				if ((this._StatusIcon != value))
				{
					this.OnStatusIconChanging(value);
					this.SendPropertyChanging();
					this._StatusIcon = value;
					this.SendPropertyChanged("StatusIcon");
					this.OnStatusIconChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusGUID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid StatusGUID
		{
			get
			{
				return this._StatusGUID;
			}
			set
			{
				if ((this._StatusGUID != value))
				{
					this.OnStatusGUIDChanging(value);
					this.SendPropertyChanging();
					this._StatusGUID = value;
					this.SendPropertyChanged("StatusGUID");
					this.OnStatusGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusLastModified", DbType="DateTime NOT NULL")]
		public System.DateTime StatusLastModified
		{
			get
			{
				return this._StatusLastModified;
			}
			set
			{
				if ((this._StatusLastModified != value))
				{
					this.OnStatusLastModifiedChanging(value);
					this.SendPropertyChanging();
					this._StatusLastModified = value;
					this.SendPropertyChanged("StatusLastModified");
					this.OnStatusLastModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusEnabled", DbType="Bit NOT NULL")]
		public bool StatusEnabled
		{
			get
			{
				return this._StatusEnabled;
			}
			set
			{
				if ((this._StatusEnabled != value))
				{
					this.OnStatusEnabledChanging(value);
					this.SendPropertyChanging();
					this._StatusEnabled = value;
					this.SendPropertyChanged("StatusEnabled");
					this.OnStatusEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusIsFinished", DbType="Bit NOT NULL")]
		public bool StatusIsFinished
		{
			get
			{
				return this._StatusIsFinished;
			}
			set
			{
				if ((this._StatusIsFinished != value))
				{
					this.OnStatusIsFinishedChanging(value);
					this.SendPropertyChanging();
					this._StatusIsFinished = value;
					this.SendPropertyChanged("StatusIsFinished");
					this.OnStatusIsFinishedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusIsNotStarted", DbType="Bit NOT NULL")]
		public bool StatusIsNotStarted
		{
			get
			{
				return this._StatusIsNotStarted;
			}
			set
			{
				if ((this._StatusIsNotStarted != value))
				{
					this.OnStatusIsNotStartedChanging(value);
					this.SendPropertyChanging();
					this._StatusIsNotStarted = value;
					this.SendPropertyChanged("StatusIsNotStarted");
					this.OnStatusIsNotStartedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PM_ProjectStatus_PM_Project", Storage="_PM_Projects", ThisKey="StatusID", OtherKey="ProjectStatusID")]
		public EntitySet<PM_Project> PM_Projects
		{
			get
			{
				return this._PM_Projects;
			}
			set
			{
				this._PM_Projects.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PM_Projects(PM_Project entity)
		{
			this.SendPropertyChanging();
			entity.PM_ProjectStatus = this;
		}
		
		private void detach_PM_Projects(PM_Project entity)
		{
			this.SendPropertyChanging();
			entity.PM_ProjectStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PM_ProjectSubProcess")]
	public partial class PM_ProjectSubProcess : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SubProcessId;
		
		private int _SubProcessListId;
		
		private string _SubProcessName;
		
		private System.Nullable<int> _SubProcessOrder;
		
		private System.Nullable<bool> _SubProcessFinish;
		
		private EntitySet<PM_ProjectProcessDetail> _PM_ProjectProcessDetails;
		
		private EntityRef<PM_ProjectProcessList> _PM_ProjectProcessList;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSubProcessIdChanging(int value);
    partial void OnSubProcessIdChanged();
    partial void OnSubProcessListIdChanging(int value);
    partial void OnSubProcessListIdChanged();
    partial void OnSubProcessNameChanging(string value);
    partial void OnSubProcessNameChanged();
    partial void OnSubProcessOrderChanging(System.Nullable<int> value);
    partial void OnSubProcessOrderChanged();
    partial void OnSubProcessFinishChanging(System.Nullable<bool> value);
    partial void OnSubProcessFinishChanged();
    #endregion
		
		public PM_ProjectSubProcess()
		{
			this._PM_ProjectProcessDetails = new EntitySet<PM_ProjectProcessDetail>(new Action<PM_ProjectProcessDetail>(this.attach_PM_ProjectProcessDetails), new Action<PM_ProjectProcessDetail>(this.detach_PM_ProjectProcessDetails));
			this._PM_ProjectProcessList = default(EntityRef<PM_ProjectProcessList>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubProcessId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SubProcessId
		{
			get
			{
				return this._SubProcessId;
			}
			set
			{
				if ((this._SubProcessId != value))
				{
					this.OnSubProcessIdChanging(value);
					this.SendPropertyChanging();
					this._SubProcessId = value;
					this.SendPropertyChanged("SubProcessId");
					this.OnSubProcessIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubProcessListId", DbType="Int NOT NULL")]
		public int SubProcessListId
		{
			get
			{
				return this._SubProcessListId;
			}
			set
			{
				if ((this._SubProcessListId != value))
				{
					if (this._PM_ProjectProcessList.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubProcessListIdChanging(value);
					this.SendPropertyChanging();
					this._SubProcessListId = value;
					this.SendPropertyChanged("SubProcessListId");
					this.OnSubProcessListIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubProcessName", DbType="NVarChar(200)")]
		public string SubProcessName
		{
			get
			{
				return this._SubProcessName;
			}
			set
			{
				if ((this._SubProcessName != value))
				{
					this.OnSubProcessNameChanging(value);
					this.SendPropertyChanging();
					this._SubProcessName = value;
					this.SendPropertyChanged("SubProcessName");
					this.OnSubProcessNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubProcessOrder", DbType="Int")]
		public System.Nullable<int> SubProcessOrder
		{
			get
			{
				return this._SubProcessOrder;
			}
			set
			{
				if ((this._SubProcessOrder != value))
				{
					this.OnSubProcessOrderChanging(value);
					this.SendPropertyChanging();
					this._SubProcessOrder = value;
					this.SendPropertyChanged("SubProcessOrder");
					this.OnSubProcessOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubProcessFinish", DbType="Bit")]
		public System.Nullable<bool> SubProcessFinish
		{
			get
			{
				return this._SubProcessFinish;
			}
			set
			{
				if ((this._SubProcessFinish != value))
				{
					this.OnSubProcessFinishChanging(value);
					this.SendPropertyChanging();
					this._SubProcessFinish = value;
					this.SendPropertyChanged("SubProcessFinish");
					this.OnSubProcessFinishChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PM_ProjectSubProcess_PM_ProjectProcessDetail", Storage="_PM_ProjectProcessDetails", ThisKey="SubProcessId", OtherKey="DetailSubProcessId")]
		public EntitySet<PM_ProjectProcessDetail> PM_ProjectProcessDetails
		{
			get
			{
				return this._PM_ProjectProcessDetails;
			}
			set
			{
				this._PM_ProjectProcessDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PM_ProjectProcessList_PM_ProjectSubProcess", Storage="_PM_ProjectProcessList", ThisKey="SubProcessListId", OtherKey="ProcessListId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public PM_ProjectProcessList PM_ProjectProcessList
		{
			get
			{
				return this._PM_ProjectProcessList.Entity;
			}
			set
			{
				PM_ProjectProcessList previousValue = this._PM_ProjectProcessList.Entity;
				if (((previousValue != value) 
							|| (this._PM_ProjectProcessList.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PM_ProjectProcessList.Entity = null;
						previousValue.PM_ProjectSubProcesses.Remove(this);
					}
					this._PM_ProjectProcessList.Entity = value;
					if ((value != null))
					{
						value.PM_ProjectSubProcesses.Add(this);
						this._SubProcessListId = value.ProcessListId;
					}
					else
					{
						this._SubProcessListId = default(int);
					}
					this.SendPropertyChanged("PM_ProjectProcessList");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PM_ProjectProcessDetails(PM_ProjectProcessDetail entity)
		{
			this.SendPropertyChanging();
			entity.PM_ProjectSubProcess = this;
		}
		
		private void detach_PM_ProjectProcessDetails(PM_ProjectProcessDetail entity)
		{
			this.SendPropertyChanging();
			entity.PM_ProjectSubProcess = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PM_ProjectTaskPriority")]
	public partial class PM_ProjectTaskPriority : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TaskPriorityID;
		
		private string _TaskPriorityName;
		
		private string _TaskPriorityDisplayName;
		
		private System.Nullable<int> _TaskPriorityOrder;
		
		private System.Guid _TaskPriorityGUID;
		
		private System.DateTime _TaskPriorityLastModified;
		
		private bool _TaskPriorityEnabled;
		
		private bool _TaskPriorityDefault;
		
		private EntitySet<PM_ProjectTask> _PM_ProjectTasks;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTaskPriorityIDChanging(int value);
    partial void OnTaskPriorityIDChanged();
    partial void OnTaskPriorityNameChanging(string value);
    partial void OnTaskPriorityNameChanged();
    partial void OnTaskPriorityDisplayNameChanging(string value);
    partial void OnTaskPriorityDisplayNameChanged();
    partial void OnTaskPriorityOrderChanging(System.Nullable<int> value);
    partial void OnTaskPriorityOrderChanged();
    partial void OnTaskPriorityGUIDChanging(System.Guid value);
    partial void OnTaskPriorityGUIDChanged();
    partial void OnTaskPriorityLastModifiedChanging(System.DateTime value);
    partial void OnTaskPriorityLastModifiedChanged();
    partial void OnTaskPriorityEnabledChanging(bool value);
    partial void OnTaskPriorityEnabledChanged();
    partial void OnTaskPriorityDefaultChanging(bool value);
    partial void OnTaskPriorityDefaultChanged();
    #endregion
		
		public PM_ProjectTaskPriority()
		{
			this._PM_ProjectTasks = new EntitySet<PM_ProjectTask>(new Action<PM_ProjectTask>(this.attach_PM_ProjectTasks), new Action<PM_ProjectTask>(this.detach_PM_ProjectTasks));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskPriorityID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TaskPriorityID
		{
			get
			{
				return this._TaskPriorityID;
			}
			set
			{
				if ((this._TaskPriorityID != value))
				{
					this.OnTaskPriorityIDChanging(value);
					this.SendPropertyChanging();
					this._TaskPriorityID = value;
					this.SendPropertyChanged("TaskPriorityID");
					this.OnTaskPriorityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskPriorityName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string TaskPriorityName
		{
			get
			{
				return this._TaskPriorityName;
			}
			set
			{
				if ((this._TaskPriorityName != value))
				{
					this.OnTaskPriorityNameChanging(value);
					this.SendPropertyChanging();
					this._TaskPriorityName = value;
					this.SendPropertyChanged("TaskPriorityName");
					this.OnTaskPriorityNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskPriorityDisplayName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string TaskPriorityDisplayName
		{
			get
			{
				return this._TaskPriorityDisplayName;
			}
			set
			{
				if ((this._TaskPriorityDisplayName != value))
				{
					this.OnTaskPriorityDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._TaskPriorityDisplayName = value;
					this.SendPropertyChanged("TaskPriorityDisplayName");
					this.OnTaskPriorityDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskPriorityOrder", DbType="Int")]
		public System.Nullable<int> TaskPriorityOrder
		{
			get
			{
				return this._TaskPriorityOrder;
			}
			set
			{
				if ((this._TaskPriorityOrder != value))
				{
					this.OnTaskPriorityOrderChanging(value);
					this.SendPropertyChanging();
					this._TaskPriorityOrder = value;
					this.SendPropertyChanged("TaskPriorityOrder");
					this.OnTaskPriorityOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskPriorityGUID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid TaskPriorityGUID
		{
			get
			{
				return this._TaskPriorityGUID;
			}
			set
			{
				if ((this._TaskPriorityGUID != value))
				{
					this.OnTaskPriorityGUIDChanging(value);
					this.SendPropertyChanging();
					this._TaskPriorityGUID = value;
					this.SendPropertyChanged("TaskPriorityGUID");
					this.OnTaskPriorityGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskPriorityLastModified", DbType="DateTime NOT NULL")]
		public System.DateTime TaskPriorityLastModified
		{
			get
			{
				return this._TaskPriorityLastModified;
			}
			set
			{
				if ((this._TaskPriorityLastModified != value))
				{
					this.OnTaskPriorityLastModifiedChanging(value);
					this.SendPropertyChanging();
					this._TaskPriorityLastModified = value;
					this.SendPropertyChanged("TaskPriorityLastModified");
					this.OnTaskPriorityLastModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskPriorityEnabled", DbType="Bit NOT NULL")]
		public bool TaskPriorityEnabled
		{
			get
			{
				return this._TaskPriorityEnabled;
			}
			set
			{
				if ((this._TaskPriorityEnabled != value))
				{
					this.OnTaskPriorityEnabledChanging(value);
					this.SendPropertyChanging();
					this._TaskPriorityEnabled = value;
					this.SendPropertyChanged("TaskPriorityEnabled");
					this.OnTaskPriorityEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskPriorityDefault", DbType="Bit NOT NULL")]
		public bool TaskPriorityDefault
		{
			get
			{
				return this._TaskPriorityDefault;
			}
			set
			{
				if ((this._TaskPriorityDefault != value))
				{
					this.OnTaskPriorityDefaultChanging(value);
					this.SendPropertyChanging();
					this._TaskPriorityDefault = value;
					this.SendPropertyChanged("TaskPriorityDefault");
					this.OnTaskPriorityDefaultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PM_ProjectTaskPriority_PM_ProjectTask", Storage="_PM_ProjectTasks", ThisKey="TaskPriorityID", OtherKey="ProjectTaskPriorityID")]
		public EntitySet<PM_ProjectTask> PM_ProjectTasks
		{
			get
			{
				return this._PM_ProjectTasks;
			}
			set
			{
				this._PM_ProjectTasks.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PM_ProjectTasks(PM_ProjectTask entity)
		{
			this.SendPropertyChanging();
			entity.PM_ProjectTaskPriority = this;
		}
		
		private void detach_PM_ProjectTasks(PM_ProjectTask entity)
		{
			this.SendPropertyChanging();
			entity.PM_ProjectTaskPriority = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PM_ProjectTaskStatus")]
	public partial class PM_ProjectTaskStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TaskStatusID;
		
		private string _TaskStatusName;
		
		private string _TaskStatusDisplayName;
		
		private int _TaskStatusOrder;
		
		private string _TaskStatusColor;
		
		private string _TaskStatusIcon;
		
		private System.Guid _TaskStatusGUID;
		
		private System.DateTime _TaskStatusLastModified;
		
		private bool _TaskStatusEnabled;
		
		private bool _TaskStatusIsNotStarted;
		
		private bool _TaskStatusIsFinished;
		
		private EntitySet<PM_ProjectTask> _PM_ProjectTasks;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTaskStatusIDChanging(int value);
    partial void OnTaskStatusIDChanged();
    partial void OnTaskStatusNameChanging(string value);
    partial void OnTaskStatusNameChanged();
    partial void OnTaskStatusDisplayNameChanging(string value);
    partial void OnTaskStatusDisplayNameChanged();
    partial void OnTaskStatusOrderChanging(int value);
    partial void OnTaskStatusOrderChanged();
    partial void OnTaskStatusColorChanging(string value);
    partial void OnTaskStatusColorChanged();
    partial void OnTaskStatusIconChanging(string value);
    partial void OnTaskStatusIconChanged();
    partial void OnTaskStatusGUIDChanging(System.Guid value);
    partial void OnTaskStatusGUIDChanged();
    partial void OnTaskStatusLastModifiedChanging(System.DateTime value);
    partial void OnTaskStatusLastModifiedChanged();
    partial void OnTaskStatusEnabledChanging(bool value);
    partial void OnTaskStatusEnabledChanged();
    partial void OnTaskStatusIsNotStartedChanging(bool value);
    partial void OnTaskStatusIsNotStartedChanged();
    partial void OnTaskStatusIsFinishedChanging(bool value);
    partial void OnTaskStatusIsFinishedChanged();
    #endregion
		
		public PM_ProjectTaskStatus()
		{
			this._PM_ProjectTasks = new EntitySet<PM_ProjectTask>(new Action<PM_ProjectTask>(this.attach_PM_ProjectTasks), new Action<PM_ProjectTask>(this.detach_PM_ProjectTasks));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskStatusID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TaskStatusID
		{
			get
			{
				return this._TaskStatusID;
			}
			set
			{
				if ((this._TaskStatusID != value))
				{
					this.OnTaskStatusIDChanging(value);
					this.SendPropertyChanging();
					this._TaskStatusID = value;
					this.SendPropertyChanged("TaskStatusID");
					this.OnTaskStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskStatusName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string TaskStatusName
		{
			get
			{
				return this._TaskStatusName;
			}
			set
			{
				if ((this._TaskStatusName != value))
				{
					this.OnTaskStatusNameChanging(value);
					this.SendPropertyChanging();
					this._TaskStatusName = value;
					this.SendPropertyChanged("TaskStatusName");
					this.OnTaskStatusNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskStatusDisplayName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string TaskStatusDisplayName
		{
			get
			{
				return this._TaskStatusDisplayName;
			}
			set
			{
				if ((this._TaskStatusDisplayName != value))
				{
					this.OnTaskStatusDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._TaskStatusDisplayName = value;
					this.SendPropertyChanged("TaskStatusDisplayName");
					this.OnTaskStatusDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskStatusOrder", DbType="Int NOT NULL")]
		public int TaskStatusOrder
		{
			get
			{
				return this._TaskStatusOrder;
			}
			set
			{
				if ((this._TaskStatusOrder != value))
				{
					this.OnTaskStatusOrderChanging(value);
					this.SendPropertyChanging();
					this._TaskStatusOrder = value;
					this.SendPropertyChanged("TaskStatusOrder");
					this.OnTaskStatusOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskStatusColor", DbType="NVarChar(7)")]
		public string TaskStatusColor
		{
			get
			{
				return this._TaskStatusColor;
			}
			set
			{
				if ((this._TaskStatusColor != value))
				{
					this.OnTaskStatusColorChanging(value);
					this.SendPropertyChanging();
					this._TaskStatusColor = value;
					this.SendPropertyChanged("TaskStatusColor");
					this.OnTaskStatusColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskStatusIcon", DbType="NVarChar(450)")]
		public string TaskStatusIcon
		{
			get
			{
				return this._TaskStatusIcon;
			}
			set
			{
				if ((this._TaskStatusIcon != value))
				{
					this.OnTaskStatusIconChanging(value);
					this.SendPropertyChanging();
					this._TaskStatusIcon = value;
					this.SendPropertyChanged("TaskStatusIcon");
					this.OnTaskStatusIconChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskStatusGUID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid TaskStatusGUID
		{
			get
			{
				return this._TaskStatusGUID;
			}
			set
			{
				if ((this._TaskStatusGUID != value))
				{
					this.OnTaskStatusGUIDChanging(value);
					this.SendPropertyChanging();
					this._TaskStatusGUID = value;
					this.SendPropertyChanged("TaskStatusGUID");
					this.OnTaskStatusGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskStatusLastModified", DbType="DateTime NOT NULL")]
		public System.DateTime TaskStatusLastModified
		{
			get
			{
				return this._TaskStatusLastModified;
			}
			set
			{
				if ((this._TaskStatusLastModified != value))
				{
					this.OnTaskStatusLastModifiedChanging(value);
					this.SendPropertyChanging();
					this._TaskStatusLastModified = value;
					this.SendPropertyChanged("TaskStatusLastModified");
					this.OnTaskStatusLastModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskStatusEnabled", DbType="Bit NOT NULL")]
		public bool TaskStatusEnabled
		{
			get
			{
				return this._TaskStatusEnabled;
			}
			set
			{
				if ((this._TaskStatusEnabled != value))
				{
					this.OnTaskStatusEnabledChanging(value);
					this.SendPropertyChanging();
					this._TaskStatusEnabled = value;
					this.SendPropertyChanged("TaskStatusEnabled");
					this.OnTaskStatusEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskStatusIsNotStarted", DbType="Bit NOT NULL")]
		public bool TaskStatusIsNotStarted
		{
			get
			{
				return this._TaskStatusIsNotStarted;
			}
			set
			{
				if ((this._TaskStatusIsNotStarted != value))
				{
					this.OnTaskStatusIsNotStartedChanging(value);
					this.SendPropertyChanging();
					this._TaskStatusIsNotStarted = value;
					this.SendPropertyChanged("TaskStatusIsNotStarted");
					this.OnTaskStatusIsNotStartedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskStatusIsFinished", DbType="Bit NOT NULL")]
		public bool TaskStatusIsFinished
		{
			get
			{
				return this._TaskStatusIsFinished;
			}
			set
			{
				if ((this._TaskStatusIsFinished != value))
				{
					this.OnTaskStatusIsFinishedChanging(value);
					this.SendPropertyChanging();
					this._TaskStatusIsFinished = value;
					this.SendPropertyChanged("TaskStatusIsFinished");
					this.OnTaskStatusIsFinishedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PM_ProjectTaskStatus_PM_ProjectTask", Storage="_PM_ProjectTasks", ThisKey="TaskStatusID", OtherKey="ProjectTaskStatusID")]
		public EntitySet<PM_ProjectTask> PM_ProjectTasks
		{
			get
			{
				return this._PM_ProjectTasks;
			}
			set
			{
				this._PM_ProjectTasks.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PM_ProjectTasks(PM_ProjectTask entity)
		{
			this.SendPropertyChanging();
			entity.PM_ProjectTaskStatus = this;
		}
		
		private void detach_PM_ProjectTasks(PM_ProjectTask entity)
		{
			this.SendPropertyChanging();
			entity.PM_ProjectTaskStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.IV_tblTaskHistory")]
	public partial class IV_tblTaskHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _HistoryId;
		
		private int _HistoryEmployeeId;
		
		private int _HistoryTaskId;
		
		private System.DateTime _HistoryBegin;
		
		private System.DateTime _HistoryEnd;
		
		private System.Nullable<decimal> _HistoryDuration;
		
		private System.Nullable<System.DateTime> _ModifiedWhen;
		
		private System.Nullable<int> _ModifiedByUserId;
		
		private System.Nullable<System.DateTime> _CreatedWhen;
		
		private System.Nullable<int> _CreatedByUserId;
		
		private EntityRef<PM_ProjectEmployee> _PM_ProjectEmployee;
		
		private EntityRef<IV_tblTask> _IV_tblTask;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHistoryIdChanging(int value);
    partial void OnHistoryIdChanged();
    partial void OnHistoryEmployeeIdChanging(int value);
    partial void OnHistoryEmployeeIdChanged();
    partial void OnHistoryTaskIdChanging(int value);
    partial void OnHistoryTaskIdChanged();
    partial void OnHistoryBeginChanging(System.DateTime value);
    partial void OnHistoryBeginChanged();
    partial void OnHistoryEndChanging(System.DateTime value);
    partial void OnHistoryEndChanged();
    partial void OnHistoryDurationChanging(System.Nullable<decimal> value);
    partial void OnHistoryDurationChanged();
    partial void OnModifiedWhenChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedWhenChanged();
    partial void OnModifiedByUserIdChanging(System.Nullable<int> value);
    partial void OnModifiedByUserIdChanged();
    partial void OnCreatedWhenChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedWhenChanged();
    partial void OnCreatedByUserIdChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIdChanged();
    #endregion
		
		public IV_tblTaskHistory()
		{
			this._PM_ProjectEmployee = default(EntityRef<PM_ProjectEmployee>);
			this._IV_tblTask = default(EntityRef<IV_tblTask>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HistoryId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int HistoryId
		{
			get
			{
				return this._HistoryId;
			}
			set
			{
				if ((this._HistoryId != value))
				{
					this.OnHistoryIdChanging(value);
					this.SendPropertyChanging();
					this._HistoryId = value;
					this.SendPropertyChanged("HistoryId");
					this.OnHistoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HistoryEmployeeId", DbType="Int NOT NULL")]
		public int HistoryEmployeeId
		{
			get
			{
				return this._HistoryEmployeeId;
			}
			set
			{
				if ((this._HistoryEmployeeId != value))
				{
					if (this._PM_ProjectEmployee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHistoryEmployeeIdChanging(value);
					this.SendPropertyChanging();
					this._HistoryEmployeeId = value;
					this.SendPropertyChanged("HistoryEmployeeId");
					this.OnHistoryEmployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HistoryTaskId", DbType="Int NOT NULL")]
		public int HistoryTaskId
		{
			get
			{
				return this._HistoryTaskId;
			}
			set
			{
				if ((this._HistoryTaskId != value))
				{
					if (this._IV_tblTask.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHistoryTaskIdChanging(value);
					this.SendPropertyChanging();
					this._HistoryTaskId = value;
					this.SendPropertyChanged("HistoryTaskId");
					this.OnHistoryTaskIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HistoryBegin", DbType="DateTime NOT NULL")]
		public System.DateTime HistoryBegin
		{
			get
			{
				return this._HistoryBegin;
			}
			set
			{
				if ((this._HistoryBegin != value))
				{
					this.OnHistoryBeginChanging(value);
					this.SendPropertyChanging();
					this._HistoryBegin = value;
					this.SendPropertyChanged("HistoryBegin");
					this.OnHistoryBeginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HistoryEnd", DbType="DateTime NOT NULL")]
		public System.DateTime HistoryEnd
		{
			get
			{
				return this._HistoryEnd;
			}
			set
			{
				if ((this._HistoryEnd != value))
				{
					this.OnHistoryEndChanging(value);
					this.SendPropertyChanging();
					this._HistoryEnd = value;
					this.SendPropertyChanged("HistoryEnd");
					this.OnHistoryEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HistoryDuration", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> HistoryDuration
		{
			get
			{
				return this._HistoryDuration;
			}
			set
			{
				if ((this._HistoryDuration != value))
				{
					this.OnHistoryDurationChanging(value);
					this.SendPropertyChanging();
					this._HistoryDuration = value;
					this.SendPropertyChanged("HistoryDuration");
					this.OnHistoryDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedWhen", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedWhen
		{
			get
			{
				return this._ModifiedWhen;
			}
			set
			{
				if ((this._ModifiedWhen != value))
				{
					this.OnModifiedWhenChanging(value);
					this.SendPropertyChanging();
					this._ModifiedWhen = value;
					this.SendPropertyChanged("ModifiedWhen");
					this.OnModifiedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedByUserId", DbType="Int")]
		public System.Nullable<int> ModifiedByUserId
		{
			get
			{
				return this._ModifiedByUserId;
			}
			set
			{
				if ((this._ModifiedByUserId != value))
				{
					this.OnModifiedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._ModifiedByUserId = value;
					this.SendPropertyChanged("ModifiedByUserId");
					this.OnModifiedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWhen", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedWhen
		{
			get
			{
				return this._CreatedWhen;
			}
			set
			{
				if ((this._CreatedWhen != value))
				{
					this.OnCreatedWhenChanging(value);
					this.SendPropertyChanging();
					this._CreatedWhen = value;
					this.SendPropertyChanged("CreatedWhen");
					this.OnCreatedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserId", DbType="Int")]
		public System.Nullable<int> CreatedByUserId
		{
			get
			{
				return this._CreatedByUserId;
			}
			set
			{
				if ((this._CreatedByUserId != value))
				{
					this.OnCreatedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserId = value;
					this.SendPropertyChanged("CreatedByUserId");
					this.OnCreatedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PM_ProjectEmployee_IV_tblTaskHistory", Storage="_PM_ProjectEmployee", ThisKey="HistoryEmployeeId", OtherKey="EmployeeID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public PM_ProjectEmployee PM_ProjectEmployee
		{
			get
			{
				return this._PM_ProjectEmployee.Entity;
			}
			set
			{
				PM_ProjectEmployee previousValue = this._PM_ProjectEmployee.Entity;
				if (((previousValue != value) 
							|| (this._PM_ProjectEmployee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PM_ProjectEmployee.Entity = null;
						previousValue.IV_tblTaskHistories.Remove(this);
					}
					this._PM_ProjectEmployee.Entity = value;
					if ((value != null))
					{
						value.IV_tblTaskHistories.Add(this);
						this._HistoryEmployeeId = value.EmployeeID;
					}
					else
					{
						this._HistoryEmployeeId = default(int);
					}
					this.SendPropertyChanged("PM_ProjectEmployee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="IV_tblTask_IV_tblTaskHistory", Storage="_IV_tblTask", ThisKey="HistoryTaskId", OtherKey="TaskId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public IV_tblTask IV_tblTask
		{
			get
			{
				return this._IV_tblTask.Entity;
			}
			set
			{
				IV_tblTask previousValue = this._IV_tblTask.Entity;
				if (((previousValue != value) 
							|| (this._IV_tblTask.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._IV_tblTask.Entity = null;
						previousValue.IV_tblTaskHistories.Remove(this);
					}
					this._IV_tblTask.Entity = value;
					if ((value != null))
					{
						value.IV_tblTaskHistories.Add(this);
						this._HistoryTaskId = value.TaskId;
					}
					else
					{
						this._HistoryTaskId = default(int);
					}
					this.SendPropertyChanged("IV_tblTask");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.IV_tblTask")]
	public partial class IV_tblTask : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TaskId;
		
		private string _TaskName;
		
		private string _TaskDescription;
		
		private System.Nullable<System.DateTime> _ModifiedWhen;
		
		private System.Nullable<int> _ModifiedByUserId;
		
		private System.Nullable<System.DateTime> _CreatedWhen;
		
		private System.Nullable<int> _CreatedByUserId;
		
		private EntitySet<IV_tblTaskHistory> _IV_tblTaskHistories;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTaskIdChanging(int value);
    partial void OnTaskIdChanged();
    partial void OnTaskNameChanging(string value);
    partial void OnTaskNameChanged();
    partial void OnTaskDescriptionChanging(string value);
    partial void OnTaskDescriptionChanged();
    partial void OnModifiedWhenChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedWhenChanged();
    partial void OnModifiedByUserIdChanging(System.Nullable<int> value);
    partial void OnModifiedByUserIdChanged();
    partial void OnCreatedWhenChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedWhenChanged();
    partial void OnCreatedByUserIdChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIdChanged();
    #endregion
		
		public IV_tblTask()
		{
			this._IV_tblTaskHistories = new EntitySet<IV_tblTaskHistory>(new Action<IV_tblTaskHistory>(this.attach_IV_tblTaskHistories), new Action<IV_tblTaskHistory>(this.detach_IV_tblTaskHistories));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TaskId
		{
			get
			{
				return this._TaskId;
			}
			set
			{
				if ((this._TaskId != value))
				{
					this.OnTaskIdChanging(value);
					this.SendPropertyChanging();
					this._TaskId = value;
					this.SendPropertyChanged("TaskId");
					this.OnTaskIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskName", DbType="NVarChar(55) NOT NULL", CanBeNull=false)]
		public string TaskName
		{
			get
			{
				return this._TaskName;
			}
			set
			{
				if ((this._TaskName != value))
				{
					this.OnTaskNameChanging(value);
					this.SendPropertyChanging();
					this._TaskName = value;
					this.SendPropertyChanged("TaskName");
					this.OnTaskNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskDescription", DbType="NVarChar(255)")]
		public string TaskDescription
		{
			get
			{
				return this._TaskDescription;
			}
			set
			{
				if ((this._TaskDescription != value))
				{
					this.OnTaskDescriptionChanging(value);
					this.SendPropertyChanging();
					this._TaskDescription = value;
					this.SendPropertyChanged("TaskDescription");
					this.OnTaskDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedWhen", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedWhen
		{
			get
			{
				return this._ModifiedWhen;
			}
			set
			{
				if ((this._ModifiedWhen != value))
				{
					this.OnModifiedWhenChanging(value);
					this.SendPropertyChanging();
					this._ModifiedWhen = value;
					this.SendPropertyChanged("ModifiedWhen");
					this.OnModifiedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedByUserId", DbType="Int")]
		public System.Nullable<int> ModifiedByUserId
		{
			get
			{
				return this._ModifiedByUserId;
			}
			set
			{
				if ((this._ModifiedByUserId != value))
				{
					this.OnModifiedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._ModifiedByUserId = value;
					this.SendPropertyChanged("ModifiedByUserId");
					this.OnModifiedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWhen", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedWhen
		{
			get
			{
				return this._CreatedWhen;
			}
			set
			{
				if ((this._CreatedWhen != value))
				{
					this.OnCreatedWhenChanging(value);
					this.SendPropertyChanging();
					this._CreatedWhen = value;
					this.SendPropertyChanged("CreatedWhen");
					this.OnCreatedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserId", DbType="Int")]
		public System.Nullable<int> CreatedByUserId
		{
			get
			{
				return this._CreatedByUserId;
			}
			set
			{
				if ((this._CreatedByUserId != value))
				{
					this.OnCreatedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserId = value;
					this.SendPropertyChanged("CreatedByUserId");
					this.OnCreatedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="IV_tblTask_IV_tblTaskHistory", Storage="_IV_tblTaskHistories", ThisKey="TaskId", OtherKey="HistoryTaskId")]
		public EntitySet<IV_tblTaskHistory> IV_tblTaskHistories
		{
			get
			{
				return this._IV_tblTaskHistories;
			}
			set
			{
				this._IV_tblTaskHistories.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_IV_tblTaskHistories(IV_tblTaskHistory entity)
		{
			this.SendPropertyChanging();
			entity.IV_tblTask = this;
		}
		
		private void detach_IV_tblTaskHistories(IV_tblTaskHistory entity)
		{
			this.SendPropertyChanging();
			entity.IV_tblTask = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.IV_tblMoldsProcess")]
	public partial class IV_tblMoldsProcess : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MoldsProcessId;
		
		private int _MoldsId;
		
		private int _ProcessListId;
		
		private System.Nullable<System.DateTime> _ModifiedWhen;
		
		private System.Nullable<int> _ModifiedByUserId;
		
		private System.Nullable<System.DateTime> _CreatedWhen;
		
		private System.Nullable<int> _CreatedByUserId;
		
		private EntityRef<PM_ProjectMold> _PM_ProjectMold;
		
		private EntityRef<PM_ProjectProcessList> _PM_ProjectProcessList;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMoldsProcessIdChanging(int value);
    partial void OnMoldsProcessIdChanged();
    partial void OnMoldsIdChanging(int value);
    partial void OnMoldsIdChanged();
    partial void OnProcessListIdChanging(int value);
    partial void OnProcessListIdChanged();
    partial void OnModifiedWhenChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedWhenChanged();
    partial void OnModifiedByUserIdChanging(System.Nullable<int> value);
    partial void OnModifiedByUserIdChanged();
    partial void OnCreatedWhenChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedWhenChanged();
    partial void OnCreatedByUserIdChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIdChanged();
    #endregion
		
		public IV_tblMoldsProcess()
		{
			this._PM_ProjectMold = default(EntityRef<PM_ProjectMold>);
			this._PM_ProjectProcessList = default(EntityRef<PM_ProjectProcessList>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoldsProcessId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MoldsProcessId
		{
			get
			{
				return this._MoldsProcessId;
			}
			set
			{
				if ((this._MoldsProcessId != value))
				{
					this.OnMoldsProcessIdChanging(value);
					this.SendPropertyChanging();
					this._MoldsProcessId = value;
					this.SendPropertyChanged("MoldsProcessId");
					this.OnMoldsProcessIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoldsId", DbType="Int NOT NULL")]
		public int MoldsId
		{
			get
			{
				return this._MoldsId;
			}
			set
			{
				if ((this._MoldsId != value))
				{
					if (this._PM_ProjectMold.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMoldsIdChanging(value);
					this.SendPropertyChanging();
					this._MoldsId = value;
					this.SendPropertyChanged("MoldsId");
					this.OnMoldsIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessListId", DbType="Int NOT NULL")]
		public int ProcessListId
		{
			get
			{
				return this._ProcessListId;
			}
			set
			{
				if ((this._ProcessListId != value))
				{
					if (this._PM_ProjectProcessList.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProcessListIdChanging(value);
					this.SendPropertyChanging();
					this._ProcessListId = value;
					this.SendPropertyChanged("ProcessListId");
					this.OnProcessListIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedWhen", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedWhen
		{
			get
			{
				return this._ModifiedWhen;
			}
			set
			{
				if ((this._ModifiedWhen != value))
				{
					this.OnModifiedWhenChanging(value);
					this.SendPropertyChanging();
					this._ModifiedWhen = value;
					this.SendPropertyChanged("ModifiedWhen");
					this.OnModifiedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedByUserId", DbType="Int")]
		public System.Nullable<int> ModifiedByUserId
		{
			get
			{
				return this._ModifiedByUserId;
			}
			set
			{
				if ((this._ModifiedByUserId != value))
				{
					this.OnModifiedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._ModifiedByUserId = value;
					this.SendPropertyChanged("ModifiedByUserId");
					this.OnModifiedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWhen", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedWhen
		{
			get
			{
				return this._CreatedWhen;
			}
			set
			{
				if ((this._CreatedWhen != value))
				{
					this.OnCreatedWhenChanging(value);
					this.SendPropertyChanging();
					this._CreatedWhen = value;
					this.SendPropertyChanged("CreatedWhen");
					this.OnCreatedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserId", DbType="Int")]
		public System.Nullable<int> CreatedByUserId
		{
			get
			{
				return this._CreatedByUserId;
			}
			set
			{
				if ((this._CreatedByUserId != value))
				{
					this.OnCreatedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserId = value;
					this.SendPropertyChanged("CreatedByUserId");
					this.OnCreatedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PM_ProjectMold_IV_tblMoldsProcess", Storage="_PM_ProjectMold", ThisKey="MoldsId", OtherKey="MoldsId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public PM_ProjectMold PM_ProjectMold
		{
			get
			{
				return this._PM_ProjectMold.Entity;
			}
			set
			{
				PM_ProjectMold previousValue = this._PM_ProjectMold.Entity;
				if (((previousValue != value) 
							|| (this._PM_ProjectMold.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PM_ProjectMold.Entity = null;
						previousValue.IV_tblMoldsProcesses.Remove(this);
					}
					this._PM_ProjectMold.Entity = value;
					if ((value != null))
					{
						value.IV_tblMoldsProcesses.Add(this);
						this._MoldsId = value.MoldsId;
					}
					else
					{
						this._MoldsId = default(int);
					}
					this.SendPropertyChanged("PM_ProjectMold");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PM_ProjectProcessList_IV_tblMoldsProcess", Storage="_PM_ProjectProcessList", ThisKey="ProcessListId", OtherKey="ProcessListId", IsForeignKey=true, DeleteRule="CASCADE")]
		public PM_ProjectProcessList PM_ProjectProcessList
		{
			get
			{
				return this._PM_ProjectProcessList.Entity;
			}
			set
			{
				PM_ProjectProcessList previousValue = this._PM_ProjectProcessList.Entity;
				if (((previousValue != value) 
							|| (this._PM_ProjectProcessList.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PM_ProjectProcessList.Entity = null;
						previousValue.IV_tblMoldsProcesses.Remove(this);
					}
					this._PM_ProjectProcessList.Entity = value;
					if ((value != null))
					{
						value.IV_tblMoldsProcesses.Add(this);
						this._ProcessListId = value.ProcessListId;
					}
					else
					{
						this._ProcessListId = default(int);
					}
					this.SendPropertyChanged("PM_ProjectProcessList");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CMS_User")]
	public partial class CMS_User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserID;
		
		private string _UserName;
		
		private string _FirstName;
		
		private string _MiddleName;
		
		private string _LastName;
		
		private string _FullName;
		
		private string _Email;
		
		private string _UserPassword;
		
		private string _PreferredCultureCode;
		
		private string _PreferredUICultureCode;
		
		private bool _UserEnabled;
		
		private bool _UserIsEditor;
		
		private bool _UserIsGlobalAdministrator;
		
		private System.Nullable<bool> _UserIsExternal;
		
		private string _UserPasswordFormat;
		
		private System.Nullable<System.DateTime> _UserCreated;
		
		private System.Nullable<System.DateTime> _LastLogon;
		
		private string _UserStartingAliasPath;
		
		private System.Guid _UserGUID;
		
		private System.DateTime _UserLastModified;
		
		private string _UserLastLogonInfo;
		
		private System.Nullable<bool> _UserIsHidden;
		
		private string _UserVisibility;
		
		private System.Nullable<bool> _UserIsDomain;
		
		private System.Nullable<bool> _UserHasAllowedCultures;
		
		private System.Nullable<bool> _UserSiteManagerDisabled;
		
		private EntitySet<PM_Project> _PM_Projects;
		
		private EntitySet<PM_Project> _PM_Projects1;
		
		private EntitySet<PM_ProjectTask> _PM_ProjectTasks;
		
		private EntitySet<PM_ProjectTask> _PM_ProjectTasks1;
		
		private EntitySet<PM_ProjectTask> _PM_ProjectTasks2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnMiddleNameChanging(string value);
    partial void OnMiddleNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnUserPasswordChanging(string value);
    partial void OnUserPasswordChanged();
    partial void OnPreferredCultureCodeChanging(string value);
    partial void OnPreferredCultureCodeChanged();
    partial void OnPreferredUICultureCodeChanging(string value);
    partial void OnPreferredUICultureCodeChanged();
    partial void OnUserEnabledChanging(bool value);
    partial void OnUserEnabledChanged();
    partial void OnUserIsEditorChanging(bool value);
    partial void OnUserIsEditorChanged();
    partial void OnUserIsGlobalAdministratorChanging(bool value);
    partial void OnUserIsGlobalAdministratorChanged();
    partial void OnUserIsExternalChanging(System.Nullable<bool> value);
    partial void OnUserIsExternalChanged();
    partial void OnUserPasswordFormatChanging(string value);
    partial void OnUserPasswordFormatChanged();
    partial void OnUserCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnUserCreatedChanged();
    partial void OnLastLogonChanging(System.Nullable<System.DateTime> value);
    partial void OnLastLogonChanged();
    partial void OnUserStartingAliasPathChanging(string value);
    partial void OnUserStartingAliasPathChanged();
    partial void OnUserGUIDChanging(System.Guid value);
    partial void OnUserGUIDChanged();
    partial void OnUserLastModifiedChanging(System.DateTime value);
    partial void OnUserLastModifiedChanged();
    partial void OnUserLastLogonInfoChanging(string value);
    partial void OnUserLastLogonInfoChanged();
    partial void OnUserIsHiddenChanging(System.Nullable<bool> value);
    partial void OnUserIsHiddenChanged();
    partial void OnUserVisibilityChanging(string value);
    partial void OnUserVisibilityChanged();
    partial void OnUserIsDomainChanging(System.Nullable<bool> value);
    partial void OnUserIsDomainChanged();
    partial void OnUserHasAllowedCulturesChanging(System.Nullable<bool> value);
    partial void OnUserHasAllowedCulturesChanged();
    partial void OnUserSiteManagerDisabledChanging(System.Nullable<bool> value);
    partial void OnUserSiteManagerDisabledChanged();
    #endregion
		
		public CMS_User()
		{
			this._PM_Projects = new EntitySet<PM_Project>(new Action<PM_Project>(this.attach_PM_Projects), new Action<PM_Project>(this.detach_PM_Projects));
			this._PM_Projects1 = new EntitySet<PM_Project>(new Action<PM_Project>(this.attach_PM_Projects1), new Action<PM_Project>(this.detach_PM_Projects1));
			this._PM_ProjectTasks = new EntitySet<PM_ProjectTask>(new Action<PM_ProjectTask>(this.attach_PM_ProjectTasks), new Action<PM_ProjectTask>(this.detach_PM_ProjectTasks));
			this._PM_ProjectTasks1 = new EntitySet<PM_ProjectTask>(new Action<PM_ProjectTask>(this.attach_PM_ProjectTasks1), new Action<PM_ProjectTask>(this.detach_PM_ProjectTasks1));
			this._PM_ProjectTasks2 = new EntitySet<PM_ProjectTask>(new Action<PM_ProjectTask>(this.attach_PM_ProjectTasks2), new Action<PM_ProjectTask>(this.detach_PM_ProjectTasks2));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(100)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiddleName", DbType="NVarChar(100)")]
		public string MiddleName
		{
			get
			{
				return this._MiddleName;
			}
			set
			{
				if ((this._MiddleName != value))
				{
					this.OnMiddleNameChanging(value);
					this.SendPropertyChanging();
					this._MiddleName = value;
					this.SendPropertyChanged("MiddleName");
					this.OnMiddleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(100)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(450)")]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserPassword", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string UserPassword
		{
			get
			{
				return this._UserPassword;
			}
			set
			{
				if ((this._UserPassword != value))
				{
					this.OnUserPasswordChanging(value);
					this.SendPropertyChanging();
					this._UserPassword = value;
					this.SendPropertyChanged("UserPassword");
					this.OnUserPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreferredCultureCode", DbType="NVarChar(10)")]
		public string PreferredCultureCode
		{
			get
			{
				return this._PreferredCultureCode;
			}
			set
			{
				if ((this._PreferredCultureCode != value))
				{
					this.OnPreferredCultureCodeChanging(value);
					this.SendPropertyChanging();
					this._PreferredCultureCode = value;
					this.SendPropertyChanged("PreferredCultureCode");
					this.OnPreferredCultureCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreferredUICultureCode", DbType="NVarChar(10)")]
		public string PreferredUICultureCode
		{
			get
			{
				return this._PreferredUICultureCode;
			}
			set
			{
				if ((this._PreferredUICultureCode != value))
				{
					this.OnPreferredUICultureCodeChanging(value);
					this.SendPropertyChanging();
					this._PreferredUICultureCode = value;
					this.SendPropertyChanged("PreferredUICultureCode");
					this.OnPreferredUICultureCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserEnabled", DbType="Bit NOT NULL")]
		public bool UserEnabled
		{
			get
			{
				return this._UserEnabled;
			}
			set
			{
				if ((this._UserEnabled != value))
				{
					this.OnUserEnabledChanging(value);
					this.SendPropertyChanging();
					this._UserEnabled = value;
					this.SendPropertyChanged("UserEnabled");
					this.OnUserEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserIsEditor", DbType="Bit NOT NULL")]
		public bool UserIsEditor
		{
			get
			{
				return this._UserIsEditor;
			}
			set
			{
				if ((this._UserIsEditor != value))
				{
					this.OnUserIsEditorChanging(value);
					this.SendPropertyChanging();
					this._UserIsEditor = value;
					this.SendPropertyChanged("UserIsEditor");
					this.OnUserIsEditorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserIsGlobalAdministrator", DbType="Bit NOT NULL")]
		public bool UserIsGlobalAdministrator
		{
			get
			{
				return this._UserIsGlobalAdministrator;
			}
			set
			{
				if ((this._UserIsGlobalAdministrator != value))
				{
					this.OnUserIsGlobalAdministratorChanging(value);
					this.SendPropertyChanging();
					this._UserIsGlobalAdministrator = value;
					this.SendPropertyChanged("UserIsGlobalAdministrator");
					this.OnUserIsGlobalAdministratorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserIsExternal", DbType="Bit")]
		public System.Nullable<bool> UserIsExternal
		{
			get
			{
				return this._UserIsExternal;
			}
			set
			{
				if ((this._UserIsExternal != value))
				{
					this.OnUserIsExternalChanging(value);
					this.SendPropertyChanging();
					this._UserIsExternal = value;
					this.SendPropertyChanged("UserIsExternal");
					this.OnUserIsExternalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserPasswordFormat", DbType="NVarChar(10)")]
		public string UserPasswordFormat
		{
			get
			{
				return this._UserPasswordFormat;
			}
			set
			{
				if ((this._UserPasswordFormat != value))
				{
					this.OnUserPasswordFormatChanging(value);
					this.SendPropertyChanging();
					this._UserPasswordFormat = value;
					this.SendPropertyChanged("UserPasswordFormat");
					this.OnUserPasswordFormatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> UserCreated
		{
			get
			{
				return this._UserCreated;
			}
			set
			{
				if ((this._UserCreated != value))
				{
					this.OnUserCreatedChanging(value);
					this.SendPropertyChanging();
					this._UserCreated = value;
					this.SendPropertyChanged("UserCreated");
					this.OnUserCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLogon", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastLogon
		{
			get
			{
				return this._LastLogon;
			}
			set
			{
				if ((this._LastLogon != value))
				{
					this.OnLastLogonChanging(value);
					this.SendPropertyChanging();
					this._LastLogon = value;
					this.SendPropertyChanged("LastLogon");
					this.OnLastLogonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserStartingAliasPath", DbType="NVarChar(200)")]
		public string UserStartingAliasPath
		{
			get
			{
				return this._UserStartingAliasPath;
			}
			set
			{
				if ((this._UserStartingAliasPath != value))
				{
					this.OnUserStartingAliasPathChanging(value);
					this.SendPropertyChanging();
					this._UserStartingAliasPath = value;
					this.SendPropertyChanged("UserStartingAliasPath");
					this.OnUserStartingAliasPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserGUID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserGUID
		{
			get
			{
				return this._UserGUID;
			}
			set
			{
				if ((this._UserGUID != value))
				{
					this.OnUserGUIDChanging(value);
					this.SendPropertyChanging();
					this._UserGUID = value;
					this.SendPropertyChanged("UserGUID");
					this.OnUserGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserLastModified", DbType="DateTime NOT NULL")]
		public System.DateTime UserLastModified
		{
			get
			{
				return this._UserLastModified;
			}
			set
			{
				if ((this._UserLastModified != value))
				{
					this.OnUserLastModifiedChanging(value);
					this.SendPropertyChanging();
					this._UserLastModified = value;
					this.SendPropertyChanged("UserLastModified");
					this.OnUserLastModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserLastLogonInfo", DbType="NVarChar(MAX)")]
		public string UserLastLogonInfo
		{
			get
			{
				return this._UserLastLogonInfo;
			}
			set
			{
				if ((this._UserLastLogonInfo != value))
				{
					this.OnUserLastLogonInfoChanging(value);
					this.SendPropertyChanging();
					this._UserLastLogonInfo = value;
					this.SendPropertyChanged("UserLastLogonInfo");
					this.OnUserLastLogonInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserIsHidden", DbType="Bit")]
		public System.Nullable<bool> UserIsHidden
		{
			get
			{
				return this._UserIsHidden;
			}
			set
			{
				if ((this._UserIsHidden != value))
				{
					this.OnUserIsHiddenChanging(value);
					this.SendPropertyChanging();
					this._UserIsHidden = value;
					this.SendPropertyChanged("UserIsHidden");
					this.OnUserIsHiddenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserVisibility", DbType="NVarChar(MAX)")]
		public string UserVisibility
		{
			get
			{
				return this._UserVisibility;
			}
			set
			{
				if ((this._UserVisibility != value))
				{
					this.OnUserVisibilityChanging(value);
					this.SendPropertyChanging();
					this._UserVisibility = value;
					this.SendPropertyChanged("UserVisibility");
					this.OnUserVisibilityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserIsDomain", DbType="Bit")]
		public System.Nullable<bool> UserIsDomain
		{
			get
			{
				return this._UserIsDomain;
			}
			set
			{
				if ((this._UserIsDomain != value))
				{
					this.OnUserIsDomainChanging(value);
					this.SendPropertyChanging();
					this._UserIsDomain = value;
					this.SendPropertyChanged("UserIsDomain");
					this.OnUserIsDomainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserHasAllowedCultures", DbType="Bit")]
		public System.Nullable<bool> UserHasAllowedCultures
		{
			get
			{
				return this._UserHasAllowedCultures;
			}
			set
			{
				if ((this._UserHasAllowedCultures != value))
				{
					this.OnUserHasAllowedCulturesChanging(value);
					this.SendPropertyChanging();
					this._UserHasAllowedCultures = value;
					this.SendPropertyChanged("UserHasAllowedCultures");
					this.OnUserHasAllowedCulturesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserSiteManagerDisabled", DbType="Bit")]
		public System.Nullable<bool> UserSiteManagerDisabled
		{
			get
			{
				return this._UserSiteManagerDisabled;
			}
			set
			{
				if ((this._UserSiteManagerDisabled != value))
				{
					this.OnUserSiteManagerDisabledChanging(value);
					this.SendPropertyChanging();
					this._UserSiteManagerDisabled = value;
					this.SendPropertyChanged("UserSiteManagerDisabled");
					this.OnUserSiteManagerDisabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CMS_User_PM_Project", Storage="_PM_Projects", ThisKey="UserID", OtherKey="ProjectCreatedByID")]
		public EntitySet<PM_Project> PM_Projects
		{
			get
			{
				return this._PM_Projects;
			}
			set
			{
				this._PM_Projects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CMS_User_PM_Project1", Storage="_PM_Projects1", ThisKey="UserID", OtherKey="ProjectOwner")]
		public EntitySet<PM_Project> PM_Projects1
		{
			get
			{
				return this._PM_Projects1;
			}
			set
			{
				this._PM_Projects1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CMS_User_PM_ProjectTask", Storage="_PM_ProjectTasks", ThisKey="UserID", OtherKey="ProjectTaskAssignedToUserID")]
		public EntitySet<PM_ProjectTask> PM_ProjectTasks
		{
			get
			{
				return this._PM_ProjectTasks;
			}
			set
			{
				this._PM_ProjectTasks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CMS_User_PM_ProjectTask1", Storage="_PM_ProjectTasks1", ThisKey="UserID", OtherKey="ProjectTaskCreatedByID")]
		public EntitySet<PM_ProjectTask> PM_ProjectTasks1
		{
			get
			{
				return this._PM_ProjectTasks1;
			}
			set
			{
				this._PM_ProjectTasks1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CMS_User_PM_ProjectTask2", Storage="_PM_ProjectTasks2", ThisKey="UserID", OtherKey="ProjectTaskOwnerID")]
		public EntitySet<PM_ProjectTask> PM_ProjectTasks2
		{
			get
			{
				return this._PM_ProjectTasks2;
			}
			set
			{
				this._PM_ProjectTasks2.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PM_Projects(PM_Project entity)
		{
			this.SendPropertyChanging();
			entity.CMS_User = this;
		}
		
		private void detach_PM_Projects(PM_Project entity)
		{
			this.SendPropertyChanging();
			entity.CMS_User = null;
		}
		
		private void attach_PM_Projects1(PM_Project entity)
		{
			this.SendPropertyChanging();
			entity.CMS_User1 = this;
		}
		
		private void detach_PM_Projects1(PM_Project entity)
		{
			this.SendPropertyChanging();
			entity.CMS_User1 = null;
		}
		
		private void attach_PM_ProjectTasks(PM_ProjectTask entity)
		{
			this.SendPropertyChanging();
			entity.CMS_User = this;
		}
		
		private void detach_PM_ProjectTasks(PM_ProjectTask entity)
		{
			this.SendPropertyChanging();
			entity.CMS_User = null;
		}
		
		private void attach_PM_ProjectTasks1(PM_ProjectTask entity)
		{
			this.SendPropertyChanging();
			entity.CMS_User1 = this;
		}
		
		private void detach_PM_ProjectTasks1(PM_ProjectTask entity)
		{
			this.SendPropertyChanging();
			entity.CMS_User1 = null;
		}
		
		private void attach_PM_ProjectTasks2(PM_ProjectTask entity)
		{
			this.SendPropertyChanging();
			entity.CMS_User2 = this;
		}
		
		private void detach_PM_ProjectTasks2(PM_ProjectTask entity)
		{
			this.SendPropertyChanging();
			entity.CMS_User2 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PM_ProjectProcessList")]
	public partial class PM_ProjectProcessList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProcessListId;
		
		private string _ProcessListName;
		
		private string _ProcessListGroup;
		
		private System.Nullable<int> _ProcessListOrder;
		
		private System.Nullable<System.DateTime> _ModifiedWhen;
		
		private System.Nullable<int> _ModifiedByUserId;
		
		private System.Nullable<System.DateTime> _CreatedWhen;
		
		private System.Nullable<int> _CreatedByUserId;
		
		private EntitySet<PM_ProjectEmployeeProcess> _PM_ProjectEmployeeProcesses;
		
		private EntitySet<PM_ProjectProcess> _PM_ProjectProcesses;
		
		private EntitySet<PM_ProjectSubProcess> _PM_ProjectSubProcesses;
		
		private EntitySet<IV_tblMoldsProcess> _IV_tblMoldsProcesses;
		
		private EntitySet<PM_ProjectMachinery> _PM_ProjectMachineries;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProcessListIdChanging(int value);
    partial void OnProcessListIdChanged();
    partial void OnProcessListNameChanging(string value);
    partial void OnProcessListNameChanged();
    partial void OnProcessListGroupChanging(string value);
    partial void OnProcessListGroupChanged();
    partial void OnProcessListOrderChanging(System.Nullable<int> value);
    partial void OnProcessListOrderChanged();
    partial void OnModifiedWhenChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedWhenChanged();
    partial void OnModifiedByUserIdChanging(System.Nullable<int> value);
    partial void OnModifiedByUserIdChanged();
    partial void OnCreatedWhenChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedWhenChanged();
    partial void OnCreatedByUserIdChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIdChanged();
    #endregion
		
		public PM_ProjectProcessList()
		{
			this._PM_ProjectEmployeeProcesses = new EntitySet<PM_ProjectEmployeeProcess>(new Action<PM_ProjectEmployeeProcess>(this.attach_PM_ProjectEmployeeProcesses), new Action<PM_ProjectEmployeeProcess>(this.detach_PM_ProjectEmployeeProcesses));
			this._PM_ProjectProcesses = new EntitySet<PM_ProjectProcess>(new Action<PM_ProjectProcess>(this.attach_PM_ProjectProcesses), new Action<PM_ProjectProcess>(this.detach_PM_ProjectProcesses));
			this._PM_ProjectSubProcesses = new EntitySet<PM_ProjectSubProcess>(new Action<PM_ProjectSubProcess>(this.attach_PM_ProjectSubProcesses), new Action<PM_ProjectSubProcess>(this.detach_PM_ProjectSubProcesses));
			this._IV_tblMoldsProcesses = new EntitySet<IV_tblMoldsProcess>(new Action<IV_tblMoldsProcess>(this.attach_IV_tblMoldsProcesses), new Action<IV_tblMoldsProcess>(this.detach_IV_tblMoldsProcesses));
			this._PM_ProjectMachineries = new EntitySet<PM_ProjectMachinery>(new Action<PM_ProjectMachinery>(this.attach_PM_ProjectMachineries), new Action<PM_ProjectMachinery>(this.detach_PM_ProjectMachineries));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessListId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProcessListId
		{
			get
			{
				return this._ProcessListId;
			}
			set
			{
				if ((this._ProcessListId != value))
				{
					this.OnProcessListIdChanging(value);
					this.SendPropertyChanging();
					this._ProcessListId = value;
					this.SendPropertyChanged("ProcessListId");
					this.OnProcessListIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessListName", DbType="NVarChar(255)")]
		public string ProcessListName
		{
			get
			{
				return this._ProcessListName;
			}
			set
			{
				if ((this._ProcessListName != value))
				{
					this.OnProcessListNameChanging(value);
					this.SendPropertyChanging();
					this._ProcessListName = value;
					this.SendPropertyChanged("ProcessListName");
					this.OnProcessListNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessListGroup", DbType="NVarChar(255)")]
		public string ProcessListGroup
		{
			get
			{
				return this._ProcessListGroup;
			}
			set
			{
				if ((this._ProcessListGroup != value))
				{
					this.OnProcessListGroupChanging(value);
					this.SendPropertyChanging();
					this._ProcessListGroup = value;
					this.SendPropertyChanged("ProcessListGroup");
					this.OnProcessListGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessListOrder", DbType="Int")]
		public System.Nullable<int> ProcessListOrder
		{
			get
			{
				return this._ProcessListOrder;
			}
			set
			{
				if ((this._ProcessListOrder != value))
				{
					this.OnProcessListOrderChanging(value);
					this.SendPropertyChanging();
					this._ProcessListOrder = value;
					this.SendPropertyChanged("ProcessListOrder");
					this.OnProcessListOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedWhen", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedWhen
		{
			get
			{
				return this._ModifiedWhen;
			}
			set
			{
				if ((this._ModifiedWhen != value))
				{
					this.OnModifiedWhenChanging(value);
					this.SendPropertyChanging();
					this._ModifiedWhen = value;
					this.SendPropertyChanged("ModifiedWhen");
					this.OnModifiedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedByUserId", DbType="Int")]
		public System.Nullable<int> ModifiedByUserId
		{
			get
			{
				return this._ModifiedByUserId;
			}
			set
			{
				if ((this._ModifiedByUserId != value))
				{
					this.OnModifiedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._ModifiedByUserId = value;
					this.SendPropertyChanged("ModifiedByUserId");
					this.OnModifiedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWhen", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedWhen
		{
			get
			{
				return this._CreatedWhen;
			}
			set
			{
				if ((this._CreatedWhen != value))
				{
					this.OnCreatedWhenChanging(value);
					this.SendPropertyChanging();
					this._CreatedWhen = value;
					this.SendPropertyChanged("CreatedWhen");
					this.OnCreatedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserId", DbType="Int")]
		public System.Nullable<int> CreatedByUserId
		{
			get
			{
				return this._CreatedByUserId;
			}
			set
			{
				if ((this._CreatedByUserId != value))
				{
					this.OnCreatedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserId = value;
					this.SendPropertyChanged("CreatedByUserId");
					this.OnCreatedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PM_ProjectProcessList_PM_ProjectEmployeeProcess", Storage="_PM_ProjectEmployeeProcesses", ThisKey="ProcessListId", OtherKey="ProcessListID")]
		public EntitySet<PM_ProjectEmployeeProcess> PM_ProjectEmployeeProcesses
		{
			get
			{
				return this._PM_ProjectEmployeeProcesses;
			}
			set
			{
				this._PM_ProjectEmployeeProcesses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PM_ProjectProcessList_PM_ProjectProcess", Storage="_PM_ProjectProcesses", ThisKey="ProcessListId", OtherKey="ProcessListId")]
		public EntitySet<PM_ProjectProcess> PM_ProjectProcesses
		{
			get
			{
				return this._PM_ProjectProcesses;
			}
			set
			{
				this._PM_ProjectProcesses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PM_ProjectProcessList_PM_ProjectSubProcess", Storage="_PM_ProjectSubProcesses", ThisKey="ProcessListId", OtherKey="SubProcessListId")]
		public EntitySet<PM_ProjectSubProcess> PM_ProjectSubProcesses
		{
			get
			{
				return this._PM_ProjectSubProcesses;
			}
			set
			{
				this._PM_ProjectSubProcesses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PM_ProjectProcessList_IV_tblMoldsProcess", Storage="_IV_tblMoldsProcesses", ThisKey="ProcessListId", OtherKey="ProcessListId")]
		public EntitySet<IV_tblMoldsProcess> IV_tblMoldsProcesses
		{
			get
			{
				return this._IV_tblMoldsProcesses;
			}
			set
			{
				this._IV_tblMoldsProcesses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PM_ProjectProcessList_PM_ProjectMachinery", Storage="_PM_ProjectMachineries", ThisKey="ProcessListId", OtherKey="MachineryProcessListId")]
		public EntitySet<PM_ProjectMachinery> PM_ProjectMachineries
		{
			get
			{
				return this._PM_ProjectMachineries;
			}
			set
			{
				this._PM_ProjectMachineries.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PM_ProjectEmployeeProcesses(PM_ProjectEmployeeProcess entity)
		{
			this.SendPropertyChanging();
			entity.PM_ProjectProcessList = this;
		}
		
		private void detach_PM_ProjectEmployeeProcesses(PM_ProjectEmployeeProcess entity)
		{
			this.SendPropertyChanging();
			entity.PM_ProjectProcessList = null;
		}
		
		private void attach_PM_ProjectProcesses(PM_ProjectProcess entity)
		{
			this.SendPropertyChanging();
			entity.PM_ProjectProcessList = this;
		}
		
		private void detach_PM_ProjectProcesses(PM_ProjectProcess entity)
		{
			this.SendPropertyChanging();
			entity.PM_ProjectProcessList = null;
		}
		
		private void attach_PM_ProjectSubProcesses(PM_ProjectSubProcess entity)
		{
			this.SendPropertyChanging();
			entity.PM_ProjectProcessList = this;
		}
		
		private void detach_PM_ProjectSubProcesses(PM_ProjectSubProcess entity)
		{
			this.SendPropertyChanging();
			entity.PM_ProjectProcessList = null;
		}
		
		private void attach_IV_tblMoldsProcesses(IV_tblMoldsProcess entity)
		{
			this.SendPropertyChanging();
			entity.PM_ProjectProcessList = this;
		}
		
		private void detach_IV_tblMoldsProcesses(IV_tblMoldsProcess entity)
		{
			this.SendPropertyChanging();
			entity.PM_ProjectProcessList = null;
		}
		
		private void attach_PM_ProjectMachineries(PM_ProjectMachinery entity)
		{
			this.SendPropertyChanging();
			entity.PM_ProjectProcessList = this;
		}
		
		private void detach_PM_ProjectMachineries(PM_ProjectMachinery entity)
		{
			this.SendPropertyChanging();
			entity.PM_ProjectProcessList = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PM_ProjectMachinery")]
	public partial class PM_ProjectMachinery : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MachineryId;
		
		private System.Nullable<int> _MachineryProcessListId;
		
		private string _MachineryName;
		
		private string _MachinerySymbol;
		
		private string _MachineryStatus;
		
		private EntitySet<PM_ProjectProcessDetail> _PM_ProjectProcessDetails;
		
		private EntityRef<PM_ProjectProcessList> _PM_ProjectProcessList;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMachineryIdChanging(int value);
    partial void OnMachineryIdChanged();
    partial void OnMachineryProcessListIdChanging(System.Nullable<int> value);
    partial void OnMachineryProcessListIdChanged();
    partial void OnMachineryNameChanging(string value);
    partial void OnMachineryNameChanged();
    partial void OnMachinerySymbolChanging(string value);
    partial void OnMachinerySymbolChanged();
    partial void OnMachineryStatusChanging(string value);
    partial void OnMachineryStatusChanged();
    #endregion
		
		public PM_ProjectMachinery()
		{
			this._PM_ProjectProcessDetails = new EntitySet<PM_ProjectProcessDetail>(new Action<PM_ProjectProcessDetail>(this.attach_PM_ProjectProcessDetails), new Action<PM_ProjectProcessDetail>(this.detach_PM_ProjectProcessDetails));
			this._PM_ProjectProcessList = default(EntityRef<PM_ProjectProcessList>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MachineryId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MachineryId
		{
			get
			{
				return this._MachineryId;
			}
			set
			{
				if ((this._MachineryId != value))
				{
					this.OnMachineryIdChanging(value);
					this.SendPropertyChanging();
					this._MachineryId = value;
					this.SendPropertyChanged("MachineryId");
					this.OnMachineryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MachineryProcessListId", DbType="Int")]
		public System.Nullable<int> MachineryProcessListId
		{
			get
			{
				return this._MachineryProcessListId;
			}
			set
			{
				if ((this._MachineryProcessListId != value))
				{
					if (this._PM_ProjectProcessList.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMachineryProcessListIdChanging(value);
					this.SendPropertyChanging();
					this._MachineryProcessListId = value;
					this.SendPropertyChanged("MachineryProcessListId");
					this.OnMachineryProcessListIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MachineryName", DbType="NVarChar(50)")]
		public string MachineryName
		{
			get
			{
				return this._MachineryName;
			}
			set
			{
				if ((this._MachineryName != value))
				{
					this.OnMachineryNameChanging(value);
					this.SendPropertyChanging();
					this._MachineryName = value;
					this.SendPropertyChanged("MachineryName");
					this.OnMachineryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MachinerySymbol", DbType="NVarChar(50)")]
		public string MachinerySymbol
		{
			get
			{
				return this._MachinerySymbol;
			}
			set
			{
				if ((this._MachinerySymbol != value))
				{
					this.OnMachinerySymbolChanging(value);
					this.SendPropertyChanging();
					this._MachinerySymbol = value;
					this.SendPropertyChanged("MachinerySymbol");
					this.OnMachinerySymbolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MachineryStatus", DbType="NVarChar(50)")]
		public string MachineryStatus
		{
			get
			{
				return this._MachineryStatus;
			}
			set
			{
				if ((this._MachineryStatus != value))
				{
					this.OnMachineryStatusChanging(value);
					this.SendPropertyChanging();
					this._MachineryStatus = value;
					this.SendPropertyChanged("MachineryStatus");
					this.OnMachineryStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PM_ProjectMachinery_PM_ProjectProcessDetail", Storage="_PM_ProjectProcessDetails", ThisKey="MachineryId", OtherKey="DetailMachineId")]
		public EntitySet<PM_ProjectProcessDetail> PM_ProjectProcessDetails
		{
			get
			{
				return this._PM_ProjectProcessDetails;
			}
			set
			{
				this._PM_ProjectProcessDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PM_ProjectProcessList_PM_ProjectMachinery", Storage="_PM_ProjectProcessList", ThisKey="MachineryProcessListId", OtherKey="ProcessListId", IsForeignKey=true, DeleteRule="CASCADE")]
		public PM_ProjectProcessList PM_ProjectProcessList
		{
			get
			{
				return this._PM_ProjectProcessList.Entity;
			}
			set
			{
				PM_ProjectProcessList previousValue = this._PM_ProjectProcessList.Entity;
				if (((previousValue != value) 
							|| (this._PM_ProjectProcessList.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PM_ProjectProcessList.Entity = null;
						previousValue.PM_ProjectMachineries.Remove(this);
					}
					this._PM_ProjectProcessList.Entity = value;
					if ((value != null))
					{
						value.PM_ProjectMachineries.Add(this);
						this._MachineryProcessListId = value.ProcessListId;
					}
					else
					{
						this._MachineryProcessListId = default(Nullable<int>);
					}
					this.SendPropertyChanged("PM_ProjectProcessList");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PM_ProjectProcessDetails(PM_ProjectProcessDetail entity)
		{
			this.SendPropertyChanging();
			entity.PM_ProjectMachinery = this;
		}
		
		private void detach_PM_ProjectProcessDetails(PM_ProjectProcessDetail entity)
		{
			this.SendPropertyChanging();
			entity.PM_ProjectMachinery = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PM_ProjectTask")]
	public partial class PM_ProjectTask : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProjectTaskID;
		
		private System.Nullable<int> _ProjectTaskProjectID;
		
		private string _ProjectTaskMoldCode;
		
		private System.Nullable<int> _ProjectTaskMoldsId;
		
		private System.Nullable<decimal> _ProjectTaskMoldsFactor;
		
		private string _ProjectTaskDisplayName;
		
		private System.Nullable<int> _ProjectTaskQuantities;
		
		private string _ProjectTaskContainHead;
		
		private string _ProjectTaskBottoHob;
		
		private string _ProjectTaskChildNote;
		
		private string _ProjectTaskHorikomi;
		
		private System.Nullable<decimal> _ProjectTaskPrice;
		
		private System.Nullable<int> _ProjectTaskThickness;
		
		private string _ProjectTaskThicknessTotal;
		
		private System.Nullable<decimal> _ProjectTaskDiameterOut;
		
		private string _ProjectTaskHardness;
		
		private string _ProjectTaskOverlayNum;
		
		private string _ProjectTaskHoleNum;
		
		private string _ProjectTaskBox;
		
		private string _ProjectTaskMaterialsCode;
		
		private string _ProjectTaskMaterialsRequire;
		
		private string _ProjectTaskDimension;
		
		private System.Nullable<decimal> _ProjectTaskWeight;
		
		private System.Nullable<System.DateTime> _ProjectTaskDeadline;
		
		private System.Nullable<System.DateTime> _ProjectTaskTransmit;
		
		private int _ProjectTaskStatusID;
		
		private int _ProjectTaskPriorityID;
		
		private string _ProjectTaskDescription;
		
		private System.Nullable<int> _ProjectTaskOwnerID;
		
		private System.Nullable<int> _ProjectTaskCreatedByID;
		
		private System.Nullable<int> _ProjectTaskAssignedToUserID;
		
		private int _ProjectTaskProgress;
		
		private double _ProjectTaskHours;
		
		private System.Guid _ProjectTaskGUID;
		
		private System.DateTime _ProjectTaskLastModified;
		
		private System.Nullable<int> _ProjectTaskProjectOrder;
		
		private System.Nullable<int> _ProjectTaskUserOrder;
		
		private System.Nullable<bool> _ProjectTaskNotificationSent;
		
		private System.Nullable<bool> _ProjectTaskIsPrivate;
		
		private System.Nullable<int> _ProjectTaskCustomerId;
		
		private System.Nullable<System.DateTime> _ProjectTaskDuKienThoQuaTinh;
		
		private System.Nullable<System.DateTime> _ProjectTaskDuKienTinhQuaQA;
		
		private System.Nullable<System.DateTime> _ProjectTaskExpectedThree;
		
		private System.Nullable<System.DateTime> _ProjectTaskThucTeThoQuaTinh;
		
		private System.Nullable<System.DateTime> _ProjectTaskThucTeTinhQuaQA;
		
		private System.Nullable<System.DateTime> _ModifiedWhen;
		
		private System.Nullable<int> _ModifiedByUserId;
		
		private System.Nullable<System.DateTime> _CreatedWhen;
		
		private System.Nullable<int> _CreatedByUserId;
		
		private EntitySet<PM_ProjectProcess> _PM_ProjectProcesses;
		
		private EntitySet<PM_ProjectProcessDetail> _PM_ProjectProcessDetails;
		
		private EntityRef<PM_ProjectCustomer> _PM_ProjectCustomer;
		
		private EntityRef<PM_ProjectMold> _PM_ProjectMold;
		
		private EntityRef<CMS_User> _CMS_User;
		
		private EntityRef<CMS_User> _CMS_User1;
		
		private EntityRef<CMS_User> _CMS_User2;
		
		private EntityRef<PM_ProjectTaskPriority> _PM_ProjectTaskPriority;
		
		private EntityRef<PM_Project> _PM_Project;
		
		private EntityRef<PM_ProjectTaskStatus> _PM_ProjectTaskStatus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProjectTaskIDChanging(int value);
    partial void OnProjectTaskIDChanged();
    partial void OnProjectTaskProjectIDChanging(System.Nullable<int> value);
    partial void OnProjectTaskProjectIDChanged();
    partial void OnProjectTaskMoldCodeChanging(string value);
    partial void OnProjectTaskMoldCodeChanged();
    partial void OnProjectTaskMoldsIdChanging(System.Nullable<int> value);
    partial void OnProjectTaskMoldsIdChanged();
    partial void OnProjectTaskMoldsFactorChanging(System.Nullable<decimal> value);
    partial void OnProjectTaskMoldsFactorChanged();
    partial void OnProjectTaskDisplayNameChanging(string value);
    partial void OnProjectTaskDisplayNameChanged();
    partial void OnProjectTaskQuantitiesChanging(System.Nullable<int> value);
    partial void OnProjectTaskQuantitiesChanged();
    partial void OnProjectTaskContainHeadChanging(string value);
    partial void OnProjectTaskContainHeadChanged();
    partial void OnProjectTaskBottoHobChanging(string value);
    partial void OnProjectTaskBottoHobChanged();
    partial void OnProjectTaskChildNoteChanging(string value);
    partial void OnProjectTaskChildNoteChanged();
    partial void OnProjectTaskHorikomiChanging(string value);
    partial void OnProjectTaskHorikomiChanged();
    partial void OnProjectTaskPriceChanging(System.Nullable<decimal> value);
    partial void OnProjectTaskPriceChanged();
    partial void OnProjectTaskThicknessChanging(System.Nullable<int> value);
    partial void OnProjectTaskThicknessChanged();
    partial void OnProjectTaskThicknessTotalChanging(string value);
    partial void OnProjectTaskThicknessTotalChanged();
    partial void OnProjectTaskDiameterOutChanging(System.Nullable<decimal> value);
    partial void OnProjectTaskDiameterOutChanged();
    partial void OnProjectTaskHardnessChanging(string value);
    partial void OnProjectTaskHardnessChanged();
    partial void OnProjectTaskOverlayNumChanging(string value);
    partial void OnProjectTaskOverlayNumChanged();
    partial void OnProjectTaskHoleNumChanging(string value);
    partial void OnProjectTaskHoleNumChanged();
    partial void OnProjectTaskBoxChanging(string value);
    partial void OnProjectTaskBoxChanged();
    partial void OnProjectTaskMaterialsCodeChanging(string value);
    partial void OnProjectTaskMaterialsCodeChanged();
    partial void OnProjectTaskMaterialsRequireChanging(string value);
    partial void OnProjectTaskMaterialsRequireChanged();
    partial void OnProjectTaskDimensionChanging(string value);
    partial void OnProjectTaskDimensionChanged();
    partial void OnProjectTaskWeightChanging(System.Nullable<decimal> value);
    partial void OnProjectTaskWeightChanged();
    partial void OnProjectTaskDeadlineChanging(System.Nullable<System.DateTime> value);
    partial void OnProjectTaskDeadlineChanged();
    partial void OnProjectTaskTransmitChanging(System.Nullable<System.DateTime> value);
    partial void OnProjectTaskTransmitChanged();
    partial void OnProjectTaskStatusIDChanging(int value);
    partial void OnProjectTaskStatusIDChanged();
    partial void OnProjectTaskPriorityIDChanging(int value);
    partial void OnProjectTaskPriorityIDChanged();
    partial void OnProjectTaskDescriptionChanging(string value);
    partial void OnProjectTaskDescriptionChanged();
    partial void OnProjectTaskOwnerIDChanging(System.Nullable<int> value);
    partial void OnProjectTaskOwnerIDChanged();
    partial void OnProjectTaskCreatedByIDChanging(System.Nullable<int> value);
    partial void OnProjectTaskCreatedByIDChanged();
    partial void OnProjectTaskAssignedToUserIDChanging(System.Nullable<int> value);
    partial void OnProjectTaskAssignedToUserIDChanged();
    partial void OnProjectTaskProgressChanging(int value);
    partial void OnProjectTaskProgressChanged();
    partial void OnProjectTaskHoursChanging(double value);
    partial void OnProjectTaskHoursChanged();
    partial void OnProjectTaskGUIDChanging(System.Guid value);
    partial void OnProjectTaskGUIDChanged();
    partial void OnProjectTaskLastModifiedChanging(System.DateTime value);
    partial void OnProjectTaskLastModifiedChanged();
    partial void OnProjectTaskProjectOrderChanging(System.Nullable<int> value);
    partial void OnProjectTaskProjectOrderChanged();
    partial void OnProjectTaskUserOrderChanging(System.Nullable<int> value);
    partial void OnProjectTaskUserOrderChanged();
    partial void OnProjectTaskNotificationSentChanging(System.Nullable<bool> value);
    partial void OnProjectTaskNotificationSentChanged();
    partial void OnProjectTaskIsPrivateChanging(System.Nullable<bool> value);
    partial void OnProjectTaskIsPrivateChanged();
    partial void OnProjectTaskCustomerIdChanging(System.Nullable<int> value);
    partial void OnProjectTaskCustomerIdChanged();
    partial void OnProjectTaskDuKienThoQuaTinhChanging(System.Nullable<System.DateTime> value);
    partial void OnProjectTaskDuKienThoQuaTinhChanged();
    partial void OnProjectTaskDuKienTinhQuaQAChanging(System.Nullable<System.DateTime> value);
    partial void OnProjectTaskDuKienTinhQuaQAChanged();
    partial void OnProjectTaskExpectedThreeChanging(System.Nullable<System.DateTime> value);
    partial void OnProjectTaskExpectedThreeChanged();
    partial void OnProjectTaskThucTeThoQuaTinhChanging(System.Nullable<System.DateTime> value);
    partial void OnProjectTaskThucTeThoQuaTinhChanged();
    partial void OnProjectTaskThucTeTinhQuaQAChanging(System.Nullable<System.DateTime> value);
    partial void OnProjectTaskThucTeTinhQuaQAChanged();
    partial void OnModifiedWhenChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedWhenChanged();
    partial void OnModifiedByUserIdChanging(System.Nullable<int> value);
    partial void OnModifiedByUserIdChanged();
    partial void OnCreatedWhenChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedWhenChanged();
    partial void OnCreatedByUserIdChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIdChanged();
    #endregion
		
		public PM_ProjectTask()
		{
			this._PM_ProjectProcesses = new EntitySet<PM_ProjectProcess>(new Action<PM_ProjectProcess>(this.attach_PM_ProjectProcesses), new Action<PM_ProjectProcess>(this.detach_PM_ProjectProcesses));
			this._PM_ProjectProcessDetails = new EntitySet<PM_ProjectProcessDetail>(new Action<PM_ProjectProcessDetail>(this.attach_PM_ProjectProcessDetails), new Action<PM_ProjectProcessDetail>(this.detach_PM_ProjectProcessDetails));
			this._PM_ProjectCustomer = default(EntityRef<PM_ProjectCustomer>);
			this._PM_ProjectMold = default(EntityRef<PM_ProjectMold>);
			this._CMS_User = default(EntityRef<CMS_User>);
			this._CMS_User1 = default(EntityRef<CMS_User>);
			this._CMS_User2 = default(EntityRef<CMS_User>);
			this._PM_ProjectTaskPriority = default(EntityRef<PM_ProjectTaskPriority>);
			this._PM_Project = default(EntityRef<PM_Project>);
			this._PM_ProjectTaskStatus = default(EntityRef<PM_ProjectTaskStatus>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectTaskID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProjectTaskID
		{
			get
			{
				return this._ProjectTaskID;
			}
			set
			{
				if ((this._ProjectTaskID != value))
				{
					this.OnProjectTaskIDChanging(value);
					this.SendPropertyChanging();
					this._ProjectTaskID = value;
					this.SendPropertyChanged("ProjectTaskID");
					this.OnProjectTaskIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectTaskProjectID", DbType="Int")]
		public System.Nullable<int> ProjectTaskProjectID
		{
			get
			{
				return this._ProjectTaskProjectID;
			}
			set
			{
				if ((this._ProjectTaskProjectID != value))
				{
					if (this._PM_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectTaskProjectIDChanging(value);
					this.SendPropertyChanging();
					this._ProjectTaskProjectID = value;
					this.SendPropertyChanged("ProjectTaskProjectID");
					this.OnProjectTaskProjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectTaskMoldCode", DbType="NVarChar(25)")]
		public string ProjectTaskMoldCode
		{
			get
			{
				return this._ProjectTaskMoldCode;
			}
			set
			{
				if ((this._ProjectTaskMoldCode != value))
				{
					this.OnProjectTaskMoldCodeChanging(value);
					this.SendPropertyChanging();
					this._ProjectTaskMoldCode = value;
					this.SendPropertyChanged("ProjectTaskMoldCode");
					this.OnProjectTaskMoldCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectTaskMoldsId", DbType="Int")]
		public System.Nullable<int> ProjectTaskMoldsId
		{
			get
			{
				return this._ProjectTaskMoldsId;
			}
			set
			{
				if ((this._ProjectTaskMoldsId != value))
				{
					if (this._PM_ProjectMold.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectTaskMoldsIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectTaskMoldsId = value;
					this.SendPropertyChanged("ProjectTaskMoldsId");
					this.OnProjectTaskMoldsIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectTaskMoldsFactor", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> ProjectTaskMoldsFactor
		{
			get
			{
				return this._ProjectTaskMoldsFactor;
			}
			set
			{
				if ((this._ProjectTaskMoldsFactor != value))
				{
					this.OnProjectTaskMoldsFactorChanging(value);
					this.SendPropertyChanging();
					this._ProjectTaskMoldsFactor = value;
					this.SendPropertyChanged("ProjectTaskMoldsFactor");
					this.OnProjectTaskMoldsFactorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectTaskDisplayName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string ProjectTaskDisplayName
		{
			get
			{
				return this._ProjectTaskDisplayName;
			}
			set
			{
				if ((this._ProjectTaskDisplayName != value))
				{
					this.OnProjectTaskDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._ProjectTaskDisplayName = value;
					this.SendPropertyChanged("ProjectTaskDisplayName");
					this.OnProjectTaskDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectTaskQuantities", DbType="Int")]
		public System.Nullable<int> ProjectTaskQuantities
		{
			get
			{
				return this._ProjectTaskQuantities;
			}
			set
			{
				if ((this._ProjectTaskQuantities != value))
				{
					this.OnProjectTaskQuantitiesChanging(value);
					this.SendPropertyChanging();
					this._ProjectTaskQuantities = value;
					this.SendPropertyChanged("ProjectTaskQuantities");
					this.OnProjectTaskQuantitiesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectTaskContainHead", DbType="NVarChar(25)")]
		public string ProjectTaskContainHead
		{
			get
			{
				return this._ProjectTaskContainHead;
			}
			set
			{
				if ((this._ProjectTaskContainHead != value))
				{
					this.OnProjectTaskContainHeadChanging(value);
					this.SendPropertyChanging();
					this._ProjectTaskContainHead = value;
					this.SendPropertyChanged("ProjectTaskContainHead");
					this.OnProjectTaskContainHeadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectTaskBottoHob", DbType="NVarChar(25)")]
		public string ProjectTaskBottoHob
		{
			get
			{
				return this._ProjectTaskBottoHob;
			}
			set
			{
				if ((this._ProjectTaskBottoHob != value))
				{
					this.OnProjectTaskBottoHobChanging(value);
					this.SendPropertyChanging();
					this._ProjectTaskBottoHob = value;
					this.SendPropertyChanged("ProjectTaskBottoHob");
					this.OnProjectTaskBottoHobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectTaskChildNote", DbType="NVarChar(255)")]
		public string ProjectTaskChildNote
		{
			get
			{
				return this._ProjectTaskChildNote;
			}
			set
			{
				if ((this._ProjectTaskChildNote != value))
				{
					this.OnProjectTaskChildNoteChanging(value);
					this.SendPropertyChanging();
					this._ProjectTaskChildNote = value;
					this.SendPropertyChanged("ProjectTaskChildNote");
					this.OnProjectTaskChildNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectTaskHorikomi", DbType="NVarChar(25)")]
		public string ProjectTaskHorikomi
		{
			get
			{
				return this._ProjectTaskHorikomi;
			}
			set
			{
				if ((this._ProjectTaskHorikomi != value))
				{
					this.OnProjectTaskHorikomiChanging(value);
					this.SendPropertyChanging();
					this._ProjectTaskHorikomi = value;
					this.SendPropertyChanged("ProjectTaskHorikomi");
					this.OnProjectTaskHorikomiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectTaskPrice", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> ProjectTaskPrice
		{
			get
			{
				return this._ProjectTaskPrice;
			}
			set
			{
				if ((this._ProjectTaskPrice != value))
				{
					this.OnProjectTaskPriceChanging(value);
					this.SendPropertyChanging();
					this._ProjectTaskPrice = value;
					this.SendPropertyChanged("ProjectTaskPrice");
					this.OnProjectTaskPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectTaskThickness", DbType="Int")]
		public System.Nullable<int> ProjectTaskThickness
		{
			get
			{
				return this._ProjectTaskThickness;
			}
			set
			{
				if ((this._ProjectTaskThickness != value))
				{
					this.OnProjectTaskThicknessChanging(value);
					this.SendPropertyChanging();
					this._ProjectTaskThickness = value;
					this.SendPropertyChanged("ProjectTaskThickness");
					this.OnProjectTaskThicknessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectTaskThicknessTotal", DbType="NVarChar(25)")]
		public string ProjectTaskThicknessTotal
		{
			get
			{
				return this._ProjectTaskThicknessTotal;
			}
			set
			{
				if ((this._ProjectTaskThicknessTotal != value))
				{
					this.OnProjectTaskThicknessTotalChanging(value);
					this.SendPropertyChanging();
					this._ProjectTaskThicknessTotal = value;
					this.SendPropertyChanged("ProjectTaskThicknessTotal");
					this.OnProjectTaskThicknessTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectTaskDiameterOut", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> ProjectTaskDiameterOut
		{
			get
			{
				return this._ProjectTaskDiameterOut;
			}
			set
			{
				if ((this._ProjectTaskDiameterOut != value))
				{
					this.OnProjectTaskDiameterOutChanging(value);
					this.SendPropertyChanging();
					this._ProjectTaskDiameterOut = value;
					this.SendPropertyChanged("ProjectTaskDiameterOut");
					this.OnProjectTaskDiameterOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectTaskHardness", DbType="NVarChar(25)")]
		public string ProjectTaskHardness
		{
			get
			{
				return this._ProjectTaskHardness;
			}
			set
			{
				if ((this._ProjectTaskHardness != value))
				{
					this.OnProjectTaskHardnessChanging(value);
					this.SendPropertyChanging();
					this._ProjectTaskHardness = value;
					this.SendPropertyChanged("ProjectTaskHardness");
					this.OnProjectTaskHardnessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectTaskOverlayNum", DbType="NVarChar(25)")]
		public string ProjectTaskOverlayNum
		{
			get
			{
				return this._ProjectTaskOverlayNum;
			}
			set
			{
				if ((this._ProjectTaskOverlayNum != value))
				{
					this.OnProjectTaskOverlayNumChanging(value);
					this.SendPropertyChanging();
					this._ProjectTaskOverlayNum = value;
					this.SendPropertyChanged("ProjectTaskOverlayNum");
					this.OnProjectTaskOverlayNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectTaskHoleNum", DbType="NVarChar(25)")]
		public string ProjectTaskHoleNum
		{
			get
			{
				return this._ProjectTaskHoleNum;
			}
			set
			{
				if ((this._ProjectTaskHoleNum != value))
				{
					this.OnProjectTaskHoleNumChanging(value);
					this.SendPropertyChanging();
					this._ProjectTaskHoleNum = value;
					this.SendPropertyChanged("ProjectTaskHoleNum");
					this.OnProjectTaskHoleNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectTaskBox", DbType="VarChar(3)")]
		public string ProjectTaskBox
		{
			get
			{
				return this._ProjectTaskBox;
			}
			set
			{
				if ((this._ProjectTaskBox != value))
				{
					this.OnProjectTaskBoxChanging(value);
					this.SendPropertyChanging();
					this._ProjectTaskBox = value;
					this.SendPropertyChanged("ProjectTaskBox");
					this.OnProjectTaskBoxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectTaskMaterialsCode", DbType="NVarChar(25)")]
		public string ProjectTaskMaterialsCode
		{
			get
			{
				return this._ProjectTaskMaterialsCode;
			}
			set
			{
				if ((this._ProjectTaskMaterialsCode != value))
				{
					this.OnProjectTaskMaterialsCodeChanging(value);
					this.SendPropertyChanging();
					this._ProjectTaskMaterialsCode = value;
					this.SendPropertyChanged("ProjectTaskMaterialsCode");
					this.OnProjectTaskMaterialsCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectTaskMaterialsRequire", DbType="NVarChar(12)")]
		public string ProjectTaskMaterialsRequire
		{
			get
			{
				return this._ProjectTaskMaterialsRequire;
			}
			set
			{
				if ((this._ProjectTaskMaterialsRequire != value))
				{
					this.OnProjectTaskMaterialsRequireChanging(value);
					this.SendPropertyChanging();
					this._ProjectTaskMaterialsRequire = value;
					this.SendPropertyChanged("ProjectTaskMaterialsRequire");
					this.OnProjectTaskMaterialsRequireChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectTaskDimension", DbType="NVarChar(255)")]
		public string ProjectTaskDimension
		{
			get
			{
				return this._ProjectTaskDimension;
			}
			set
			{
				if ((this._ProjectTaskDimension != value))
				{
					this.OnProjectTaskDimensionChanging(value);
					this.SendPropertyChanging();
					this._ProjectTaskDimension = value;
					this.SendPropertyChanged("ProjectTaskDimension");
					this.OnProjectTaskDimensionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectTaskWeight", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> ProjectTaskWeight
		{
			get
			{
				return this._ProjectTaskWeight;
			}
			set
			{
				if ((this._ProjectTaskWeight != value))
				{
					this.OnProjectTaskWeightChanging(value);
					this.SendPropertyChanging();
					this._ProjectTaskWeight = value;
					this.SendPropertyChanged("ProjectTaskWeight");
					this.OnProjectTaskWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectTaskDeadline", DbType="DateTime")]
		public System.Nullable<System.DateTime> ProjectTaskDeadline
		{
			get
			{
				return this._ProjectTaskDeadline;
			}
			set
			{
				if ((this._ProjectTaskDeadline != value))
				{
					this.OnProjectTaskDeadlineChanging(value);
					this.SendPropertyChanging();
					this._ProjectTaskDeadline = value;
					this.SendPropertyChanged("ProjectTaskDeadline");
					this.OnProjectTaskDeadlineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectTaskTransmit", DbType="DateTime")]
		public System.Nullable<System.DateTime> ProjectTaskTransmit
		{
			get
			{
				return this._ProjectTaskTransmit;
			}
			set
			{
				if ((this._ProjectTaskTransmit != value))
				{
					this.OnProjectTaskTransmitChanging(value);
					this.SendPropertyChanging();
					this._ProjectTaskTransmit = value;
					this.SendPropertyChanged("ProjectTaskTransmit");
					this.OnProjectTaskTransmitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectTaskStatusID", DbType="Int NOT NULL")]
		public int ProjectTaskStatusID
		{
			get
			{
				return this._ProjectTaskStatusID;
			}
			set
			{
				if ((this._ProjectTaskStatusID != value))
				{
					if (this._PM_ProjectTaskStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectTaskStatusIDChanging(value);
					this.SendPropertyChanging();
					this._ProjectTaskStatusID = value;
					this.SendPropertyChanged("ProjectTaskStatusID");
					this.OnProjectTaskStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectTaskPriorityID", DbType="Int NOT NULL")]
		public int ProjectTaskPriorityID
		{
			get
			{
				return this._ProjectTaskPriorityID;
			}
			set
			{
				if ((this._ProjectTaskPriorityID != value))
				{
					if (this._PM_ProjectTaskPriority.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectTaskPriorityIDChanging(value);
					this.SendPropertyChanging();
					this._ProjectTaskPriorityID = value;
					this.SendPropertyChanged("ProjectTaskPriorityID");
					this.OnProjectTaskPriorityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectTaskDescription", DbType="NVarChar(MAX)")]
		public string ProjectTaskDescription
		{
			get
			{
				return this._ProjectTaskDescription;
			}
			set
			{
				if ((this._ProjectTaskDescription != value))
				{
					this.OnProjectTaskDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ProjectTaskDescription = value;
					this.SendPropertyChanged("ProjectTaskDescription");
					this.OnProjectTaskDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectTaskOwnerID", DbType="Int")]
		public System.Nullable<int> ProjectTaskOwnerID
		{
			get
			{
				return this._ProjectTaskOwnerID;
			}
			set
			{
				if ((this._ProjectTaskOwnerID != value))
				{
					if (this._CMS_User2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectTaskOwnerIDChanging(value);
					this.SendPropertyChanging();
					this._ProjectTaskOwnerID = value;
					this.SendPropertyChanged("ProjectTaskOwnerID");
					this.OnProjectTaskOwnerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectTaskCreatedByID", DbType="Int")]
		public System.Nullable<int> ProjectTaskCreatedByID
		{
			get
			{
				return this._ProjectTaskCreatedByID;
			}
			set
			{
				if ((this._ProjectTaskCreatedByID != value))
				{
					if (this._CMS_User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectTaskCreatedByIDChanging(value);
					this.SendPropertyChanging();
					this._ProjectTaskCreatedByID = value;
					this.SendPropertyChanged("ProjectTaskCreatedByID");
					this.OnProjectTaskCreatedByIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectTaskAssignedToUserID", DbType="Int")]
		public System.Nullable<int> ProjectTaskAssignedToUserID
		{
			get
			{
				return this._ProjectTaskAssignedToUserID;
			}
			set
			{
				if ((this._ProjectTaskAssignedToUserID != value))
				{
					if (this._CMS_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectTaskAssignedToUserIDChanging(value);
					this.SendPropertyChanging();
					this._ProjectTaskAssignedToUserID = value;
					this.SendPropertyChanged("ProjectTaskAssignedToUserID");
					this.OnProjectTaskAssignedToUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectTaskProgress", DbType="Int NOT NULL")]
		public int ProjectTaskProgress
		{
			get
			{
				return this._ProjectTaskProgress;
			}
			set
			{
				if ((this._ProjectTaskProgress != value))
				{
					this.OnProjectTaskProgressChanging(value);
					this.SendPropertyChanging();
					this._ProjectTaskProgress = value;
					this.SendPropertyChanged("ProjectTaskProgress");
					this.OnProjectTaskProgressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectTaskHours", DbType="Float NOT NULL")]
		public double ProjectTaskHours
		{
			get
			{
				return this._ProjectTaskHours;
			}
			set
			{
				if ((this._ProjectTaskHours != value))
				{
					this.OnProjectTaskHoursChanging(value);
					this.SendPropertyChanging();
					this._ProjectTaskHours = value;
					this.SendPropertyChanged("ProjectTaskHours");
					this.OnProjectTaskHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectTaskGUID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ProjectTaskGUID
		{
			get
			{
				return this._ProjectTaskGUID;
			}
			set
			{
				if ((this._ProjectTaskGUID != value))
				{
					this.OnProjectTaskGUIDChanging(value);
					this.SendPropertyChanging();
					this._ProjectTaskGUID = value;
					this.SendPropertyChanged("ProjectTaskGUID");
					this.OnProjectTaskGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectTaskLastModified", DbType="DateTime NOT NULL")]
		public System.DateTime ProjectTaskLastModified
		{
			get
			{
				return this._ProjectTaskLastModified;
			}
			set
			{
				if ((this._ProjectTaskLastModified != value))
				{
					this.OnProjectTaskLastModifiedChanging(value);
					this.SendPropertyChanging();
					this._ProjectTaskLastModified = value;
					this.SendPropertyChanged("ProjectTaskLastModified");
					this.OnProjectTaskLastModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectTaskProjectOrder", DbType="Int")]
		public System.Nullable<int> ProjectTaskProjectOrder
		{
			get
			{
				return this._ProjectTaskProjectOrder;
			}
			set
			{
				if ((this._ProjectTaskProjectOrder != value))
				{
					this.OnProjectTaskProjectOrderChanging(value);
					this.SendPropertyChanging();
					this._ProjectTaskProjectOrder = value;
					this.SendPropertyChanged("ProjectTaskProjectOrder");
					this.OnProjectTaskProjectOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectTaskUserOrder", DbType="Int")]
		public System.Nullable<int> ProjectTaskUserOrder
		{
			get
			{
				return this._ProjectTaskUserOrder;
			}
			set
			{
				if ((this._ProjectTaskUserOrder != value))
				{
					this.OnProjectTaskUserOrderChanging(value);
					this.SendPropertyChanging();
					this._ProjectTaskUserOrder = value;
					this.SendPropertyChanged("ProjectTaskUserOrder");
					this.OnProjectTaskUserOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectTaskNotificationSent", DbType="Bit")]
		public System.Nullable<bool> ProjectTaskNotificationSent
		{
			get
			{
				return this._ProjectTaskNotificationSent;
			}
			set
			{
				if ((this._ProjectTaskNotificationSent != value))
				{
					this.OnProjectTaskNotificationSentChanging(value);
					this.SendPropertyChanging();
					this._ProjectTaskNotificationSent = value;
					this.SendPropertyChanged("ProjectTaskNotificationSent");
					this.OnProjectTaskNotificationSentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectTaskIsPrivate", DbType="Bit")]
		public System.Nullable<bool> ProjectTaskIsPrivate
		{
			get
			{
				return this._ProjectTaskIsPrivate;
			}
			set
			{
				if ((this._ProjectTaskIsPrivate != value))
				{
					this.OnProjectTaskIsPrivateChanging(value);
					this.SendPropertyChanging();
					this._ProjectTaskIsPrivate = value;
					this.SendPropertyChanged("ProjectTaskIsPrivate");
					this.OnProjectTaskIsPrivateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectTaskCustomerId", DbType="Int")]
		public System.Nullable<int> ProjectTaskCustomerId
		{
			get
			{
				return this._ProjectTaskCustomerId;
			}
			set
			{
				if ((this._ProjectTaskCustomerId != value))
				{
					if (this._PM_ProjectCustomer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectTaskCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectTaskCustomerId = value;
					this.SendPropertyChanged("ProjectTaskCustomerId");
					this.OnProjectTaskCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectTaskDuKienThoQuaTinh", DbType="DateTime")]
		public System.Nullable<System.DateTime> ProjectTaskDuKienThoQuaTinh
		{
			get
			{
				return this._ProjectTaskDuKienThoQuaTinh;
			}
			set
			{
				if ((this._ProjectTaskDuKienThoQuaTinh != value))
				{
					this.OnProjectTaskDuKienThoQuaTinhChanging(value);
					this.SendPropertyChanging();
					this._ProjectTaskDuKienThoQuaTinh = value;
					this.SendPropertyChanged("ProjectTaskDuKienThoQuaTinh");
					this.OnProjectTaskDuKienThoQuaTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectTaskDuKienTinhQuaQA", DbType="DateTime")]
		public System.Nullable<System.DateTime> ProjectTaskDuKienTinhQuaQA
		{
			get
			{
				return this._ProjectTaskDuKienTinhQuaQA;
			}
			set
			{
				if ((this._ProjectTaskDuKienTinhQuaQA != value))
				{
					this.OnProjectTaskDuKienTinhQuaQAChanging(value);
					this.SendPropertyChanging();
					this._ProjectTaskDuKienTinhQuaQA = value;
					this.SendPropertyChanged("ProjectTaskDuKienTinhQuaQA");
					this.OnProjectTaskDuKienTinhQuaQAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectTaskExpectedThree", DbType="DateTime")]
		public System.Nullable<System.DateTime> ProjectTaskExpectedThree
		{
			get
			{
				return this._ProjectTaskExpectedThree;
			}
			set
			{
				if ((this._ProjectTaskExpectedThree != value))
				{
					this.OnProjectTaskExpectedThreeChanging(value);
					this.SendPropertyChanging();
					this._ProjectTaskExpectedThree = value;
					this.SendPropertyChanged("ProjectTaskExpectedThree");
					this.OnProjectTaskExpectedThreeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectTaskThucTeThoQuaTinh", DbType="DateTime")]
		public System.Nullable<System.DateTime> ProjectTaskThucTeThoQuaTinh
		{
			get
			{
				return this._ProjectTaskThucTeThoQuaTinh;
			}
			set
			{
				if ((this._ProjectTaskThucTeThoQuaTinh != value))
				{
					this.OnProjectTaskThucTeThoQuaTinhChanging(value);
					this.SendPropertyChanging();
					this._ProjectTaskThucTeThoQuaTinh = value;
					this.SendPropertyChanged("ProjectTaskThucTeThoQuaTinh");
					this.OnProjectTaskThucTeThoQuaTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectTaskThucTeTinhQuaQA", DbType="DateTime")]
		public System.Nullable<System.DateTime> ProjectTaskThucTeTinhQuaQA
		{
			get
			{
				return this._ProjectTaskThucTeTinhQuaQA;
			}
			set
			{
				if ((this._ProjectTaskThucTeTinhQuaQA != value))
				{
					this.OnProjectTaskThucTeTinhQuaQAChanging(value);
					this.SendPropertyChanging();
					this._ProjectTaskThucTeTinhQuaQA = value;
					this.SendPropertyChanged("ProjectTaskThucTeTinhQuaQA");
					this.OnProjectTaskThucTeTinhQuaQAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedWhen", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedWhen
		{
			get
			{
				return this._ModifiedWhen;
			}
			set
			{
				if ((this._ModifiedWhen != value))
				{
					this.OnModifiedWhenChanging(value);
					this.SendPropertyChanging();
					this._ModifiedWhen = value;
					this.SendPropertyChanged("ModifiedWhen");
					this.OnModifiedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedByUserId", DbType="Int")]
		public System.Nullable<int> ModifiedByUserId
		{
			get
			{
				return this._ModifiedByUserId;
			}
			set
			{
				if ((this._ModifiedByUserId != value))
				{
					this.OnModifiedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._ModifiedByUserId = value;
					this.SendPropertyChanged("ModifiedByUserId");
					this.OnModifiedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWhen", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedWhen
		{
			get
			{
				return this._CreatedWhen;
			}
			set
			{
				if ((this._CreatedWhen != value))
				{
					this.OnCreatedWhenChanging(value);
					this.SendPropertyChanging();
					this._CreatedWhen = value;
					this.SendPropertyChanged("CreatedWhen");
					this.OnCreatedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserId", DbType="Int")]
		public System.Nullable<int> CreatedByUserId
		{
			get
			{
				return this._CreatedByUserId;
			}
			set
			{
				if ((this._CreatedByUserId != value))
				{
					this.OnCreatedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserId = value;
					this.SendPropertyChanged("CreatedByUserId");
					this.OnCreatedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PM_ProjectTask_PM_ProjectProcess", Storage="_PM_ProjectProcesses", ThisKey="ProjectTaskID", OtherKey="ProcessProjectTaskID")]
		public EntitySet<PM_ProjectProcess> PM_ProjectProcesses
		{
			get
			{
				return this._PM_ProjectProcesses;
			}
			set
			{
				this._PM_ProjectProcesses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PM_ProjectTask_PM_ProjectProcessDetail", Storage="_PM_ProjectProcessDetails", ThisKey="ProjectTaskID", OtherKey="DetailProjectTaskID")]
		public EntitySet<PM_ProjectProcessDetail> PM_ProjectProcessDetails
		{
			get
			{
				return this._PM_ProjectProcessDetails;
			}
			set
			{
				this._PM_ProjectProcessDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PM_ProjectCustomer_PM_ProjectTask", Storage="_PM_ProjectCustomer", ThisKey="ProjectTaskCustomerId", OtherKey="CustomerId", IsForeignKey=true, DeleteRule="CASCADE")]
		public PM_ProjectCustomer PM_ProjectCustomer
		{
			get
			{
				return this._PM_ProjectCustomer.Entity;
			}
			set
			{
				PM_ProjectCustomer previousValue = this._PM_ProjectCustomer.Entity;
				if (((previousValue != value) 
							|| (this._PM_ProjectCustomer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PM_ProjectCustomer.Entity = null;
						previousValue.PM_ProjectTasks.Remove(this);
					}
					this._PM_ProjectCustomer.Entity = value;
					if ((value != null))
					{
						value.PM_ProjectTasks.Add(this);
						this._ProjectTaskCustomerId = value.CustomerId;
					}
					else
					{
						this._ProjectTaskCustomerId = default(Nullable<int>);
					}
					this.SendPropertyChanged("PM_ProjectCustomer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PM_ProjectMold_PM_ProjectTask", Storage="_PM_ProjectMold", ThisKey="ProjectTaskMoldsId", OtherKey="MoldsId", IsForeignKey=true, DeleteRule="CASCADE")]
		public PM_ProjectMold PM_ProjectMold
		{
			get
			{
				return this._PM_ProjectMold.Entity;
			}
			set
			{
				PM_ProjectMold previousValue = this._PM_ProjectMold.Entity;
				if (((previousValue != value) 
							|| (this._PM_ProjectMold.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PM_ProjectMold.Entity = null;
						previousValue.PM_ProjectTasks.Remove(this);
					}
					this._PM_ProjectMold.Entity = value;
					if ((value != null))
					{
						value.PM_ProjectTasks.Add(this);
						this._ProjectTaskMoldsId = value.MoldsId;
					}
					else
					{
						this._ProjectTaskMoldsId = default(Nullable<int>);
					}
					this.SendPropertyChanged("PM_ProjectMold");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CMS_User_PM_ProjectTask", Storage="_CMS_User", ThisKey="ProjectTaskAssignedToUserID", OtherKey="UserID", IsForeignKey=true)]
		public CMS_User CMS_User
		{
			get
			{
				return this._CMS_User.Entity;
			}
			set
			{
				CMS_User previousValue = this._CMS_User.Entity;
				if (((previousValue != value) 
							|| (this._CMS_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CMS_User.Entity = null;
						previousValue.PM_ProjectTasks.Remove(this);
					}
					this._CMS_User.Entity = value;
					if ((value != null))
					{
						value.PM_ProjectTasks.Add(this);
						this._ProjectTaskAssignedToUserID = value.UserID;
					}
					else
					{
						this._ProjectTaskAssignedToUserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("CMS_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CMS_User_PM_ProjectTask1", Storage="_CMS_User1", ThisKey="ProjectTaskCreatedByID", OtherKey="UserID", IsForeignKey=true)]
		public CMS_User CMS_User1
		{
			get
			{
				return this._CMS_User1.Entity;
			}
			set
			{
				CMS_User previousValue = this._CMS_User1.Entity;
				if (((previousValue != value) 
							|| (this._CMS_User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CMS_User1.Entity = null;
						previousValue.PM_ProjectTasks1.Remove(this);
					}
					this._CMS_User1.Entity = value;
					if ((value != null))
					{
						value.PM_ProjectTasks1.Add(this);
						this._ProjectTaskCreatedByID = value.UserID;
					}
					else
					{
						this._ProjectTaskCreatedByID = default(Nullable<int>);
					}
					this.SendPropertyChanged("CMS_User1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CMS_User_PM_ProjectTask2", Storage="_CMS_User2", ThisKey="ProjectTaskOwnerID", OtherKey="UserID", IsForeignKey=true)]
		public CMS_User CMS_User2
		{
			get
			{
				return this._CMS_User2.Entity;
			}
			set
			{
				CMS_User previousValue = this._CMS_User2.Entity;
				if (((previousValue != value) 
							|| (this._CMS_User2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CMS_User2.Entity = null;
						previousValue.PM_ProjectTasks2.Remove(this);
					}
					this._CMS_User2.Entity = value;
					if ((value != null))
					{
						value.PM_ProjectTasks2.Add(this);
						this._ProjectTaskOwnerID = value.UserID;
					}
					else
					{
						this._ProjectTaskOwnerID = default(Nullable<int>);
					}
					this.SendPropertyChanged("CMS_User2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PM_ProjectTaskPriority_PM_ProjectTask", Storage="_PM_ProjectTaskPriority", ThisKey="ProjectTaskPriorityID", OtherKey="TaskPriorityID", IsForeignKey=true)]
		public PM_ProjectTaskPriority PM_ProjectTaskPriority
		{
			get
			{
				return this._PM_ProjectTaskPriority.Entity;
			}
			set
			{
				PM_ProjectTaskPriority previousValue = this._PM_ProjectTaskPriority.Entity;
				if (((previousValue != value) 
							|| (this._PM_ProjectTaskPriority.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PM_ProjectTaskPriority.Entity = null;
						previousValue.PM_ProjectTasks.Remove(this);
					}
					this._PM_ProjectTaskPriority.Entity = value;
					if ((value != null))
					{
						value.PM_ProjectTasks.Add(this);
						this._ProjectTaskPriorityID = value.TaskPriorityID;
					}
					else
					{
						this._ProjectTaskPriorityID = default(int);
					}
					this.SendPropertyChanged("PM_ProjectTaskPriority");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PM_Project_PM_ProjectTask", Storage="_PM_Project", ThisKey="ProjectTaskProjectID", OtherKey="ProjectID", IsForeignKey=true)]
		public PM_Project PM_Project
		{
			get
			{
				return this._PM_Project.Entity;
			}
			set
			{
				PM_Project previousValue = this._PM_Project.Entity;
				if (((previousValue != value) 
							|| (this._PM_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PM_Project.Entity = null;
						previousValue.PM_ProjectTasks.Remove(this);
					}
					this._PM_Project.Entity = value;
					if ((value != null))
					{
						value.PM_ProjectTasks.Add(this);
						this._ProjectTaskProjectID = value.ProjectID;
					}
					else
					{
						this._ProjectTaskProjectID = default(Nullable<int>);
					}
					this.SendPropertyChanged("PM_Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PM_ProjectTaskStatus_PM_ProjectTask", Storage="_PM_ProjectTaskStatus", ThisKey="ProjectTaskStatusID", OtherKey="TaskStatusID", IsForeignKey=true)]
		public PM_ProjectTaskStatus PM_ProjectTaskStatus
		{
			get
			{
				return this._PM_ProjectTaskStatus.Entity;
			}
			set
			{
				PM_ProjectTaskStatus previousValue = this._PM_ProjectTaskStatus.Entity;
				if (((previousValue != value) 
							|| (this._PM_ProjectTaskStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PM_ProjectTaskStatus.Entity = null;
						previousValue.PM_ProjectTasks.Remove(this);
					}
					this._PM_ProjectTaskStatus.Entity = value;
					if ((value != null))
					{
						value.PM_ProjectTasks.Add(this);
						this._ProjectTaskStatusID = value.TaskStatusID;
					}
					else
					{
						this._ProjectTaskStatusID = default(int);
					}
					this.SendPropertyChanged("PM_ProjectTaskStatus");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PM_ProjectProcesses(PM_ProjectProcess entity)
		{
			this.SendPropertyChanging();
			entity.PM_ProjectTask = this;
		}
		
		private void detach_PM_ProjectProcesses(PM_ProjectProcess entity)
		{
			this.SendPropertyChanging();
			entity.PM_ProjectTask = null;
		}
		
		private void attach_PM_ProjectProcessDetails(PM_ProjectProcessDetail entity)
		{
			this.SendPropertyChanging();
			entity.PM_ProjectTask = this;
		}
		
		private void detach_PM_ProjectProcessDetails(PM_ProjectProcessDetail entity)
		{
			this.SendPropertyChanging();
			entity.PM_ProjectTask = null;
		}
	}
}
#pragma warning restore 1591
