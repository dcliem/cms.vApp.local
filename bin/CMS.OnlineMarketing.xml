<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CMS.OnlineMarketing</name>
    </assembly>
    <members>
        <member name="T:CMS.OnlineMarketing.ABTestInfo">
            <summary>
            ABTestInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABTestInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfo.#ctor">
            <summary>
            Constructor - Creates an empty ABTestInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new ABTestInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestInfo.ABTestGUID">
            <summary>
            Unique test identifier.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestInfo.ABTestName">
            <summary>
            Test name.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestInfo.ABTestDisplayName">
            <summary>
            Test display name.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestInfo.ABTestOpenTo">
            <summary>
            End date for test.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestInfo.ABTestOpenFrom">
            <summary>
            Start date for test.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestInfo.ABTestCulture">
            <summary>
            Test culture.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestInfo.ABTestID">
            <summary>
            Test ID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestInfo.ABTestSiteID">
            <summary>
            Site ID of test.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestInfo.ABTestOriginalPage">
            <summary>
            Original page for test.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestInfo.ABTestConversions">
            <summary>
            Current number of conversions.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestInfo.ABTestTargetConversionType">
            <summary>
            Conversion type of test.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestInfo.ABTestMaxConversions">
            <summary>
            Target number of convesrions.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestInfo.ABTestLastModified">
            <summary>
            Last modification of test.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestInfo.ABTestDescription">
            <summary>
            Test description.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestInfo.ABTestEnabled">
            <summary>
            Indicates whether test is enabled.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ABTestInfoProvider">
            <summary>
            Class providing ABTestInfo management.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABTestInfoProvider.CACHE_MINUTES">
            <summary>
            Caching is set to 24 hours.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABTestInfoProvider.mRandomGenerator">
            <summary>
            Random generator for choosing variant.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABTestInfoProvider.abTestsById">
            <summary>
            Ab tests indexed by ABTestID.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABTestInfoProvider.abTestsByNameSite">
            <summary>
            Ab tests indexed by key in format [ABTestName]_[ABTestSiteID].
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABTestInfoProvider.tableLock">
            <summary>
            Table lock for loading.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfoProvider.ABTestingEnabled(System.String)">
            <summary>
            Returns true if AB testing is enabled.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfoProvider.ContainsABTest(System.String,System.Int32,System.String)">
            <summary>
            Determines whether a document contains an AB test.
            </summary>
            <param name="path">The path</param>
            <param name="siteId">The site id</param>
            <param name="cultureCode">The culture code</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfoProvider.GetABTestPageInfo(CMS.PortalEngine.PageInfo)">
            <summary>
            Returns the page info object for specified original pageinfo with dependence on corresponding AB test.
            </summary>
            <param name="originalPageInfo">Page info object</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfoProvider.RenameABTestStatistics(System.String,System.String,System.Int32)">
            <summary>
            Renames A/B test statistics data when changed code name
            </summary>
            <param name="oldName">Old code name</param>
            <param name="newName">New code name</param>
            <param name="siteID">Test site ID </param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfoProvider.GetABTestVariant(CMS.OnlineMarketing.ABTestInfo)">
            <summary>
            Returns variant for specified ABTest object.
            </summary>
            <param name="abTest">ABTest info object</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfoProvider.ContainsVariants(CMS.OnlineMarketing.ABTestInfo)">
            <summary>
            Determines whether the specified AB test contains variants.
            </summary>
            <param name="abTest">The ab test</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfoProvider.ABTestIsRunning(CMS.OnlineMarketing.ABTestInfo)">
            <summary>
            Returns true if specified ab test is running.
            </summary>
            <param name="abtest">AB test info object</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfoProvider.ABTestIsRunning(CMS.OnlineMarketing.ABTestInfo,CMS.OnlineMarketing.ABTestStatusEnum@)">
            <summary>
            Returns true if specified ab test is running.
            </summary>
            <param name="abtest">AB test info object</param>
            <param name="status">Out status</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfoProvider.GetABTestStatus(CMS.OnlineMarketing.ABTestInfo)">
            <summary>
            Returns status of A/B test.
            </summary>
            <param name="info">A/B test info</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfoProvider.IncreaseConversions(System.String,System.String,System.String,System.Int32)">
            <summary>
            Increases number of conversions in ABTest and ABVariant.
            </summary>
            <param name="abTestName">ABTest name</param>
            <param name="abVariantName">ABVariant name</param>
            <param name="siteName">Site name</param>
            <param name="hits">Hits count</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfoProvider.GetABTestInfo(System.Int32)">
            <summary>
            Returns AB test with specified ID.
            </summary>
            <param name="abTestId">Ab test ID</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfoProvider.GetABTestInfo(System.String,System.String)">
            <summary>
            Returns AB test with specified name.
            </summary>
            <param name="abTestName">Ab test name</param>                
            <param name="siteName">Site name</param>                
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfoProvider.GetABTests">
            <summary>
            Returns dataset of all AB tests.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfoProvider.GetABTests(System.String,System.String,System.Int32,System.String,CMS.SettingsProvider.QueryDataParameters)">
            <summary>
            Returns dataset of all AB tests matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>
            <param name="columns">Columns to be selected</param>
            <param name="parameters">Query parameters for the given where condition</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfoProvider.SetABTestInfo(CMS.OnlineMarketing.ABTestInfo)">
            <summary>
            Sets (updates or inserts) specified AB test.
            </summary>
            <param name="abTestObj">Ab test to be set</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfoProvider.DeleteABTestInfo(CMS.OnlineMarketing.ABTestInfo)">
            <summary>
            Deletes specified AB test.
            </summary>
            <param name="abTestObj">Ab test to be deleted</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfoProvider.DeleteABTestInfo(System.Int32)">
            <summary>
            Deletes AB test with specified ID.
            </summary>
            <param name="abTestId">Ab test ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfoProvider.GetABTestID(System.String,System.String)">
            <summary>
            Returns ID of the specified test.
            </summary>
            <param name="siteName">Site name</param>
            <param name="abTestName">Test name</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfoProvider.Clear(System.Boolean)">
            <summary>
            Clears the hashtables.
            </summary>
            <param name="logTasks">If true, the clear tasks are logged</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfoProvider.GetABStatusString(CMS.OnlineMarketing.ABTestStatusEnum)">
            <summary>
            Converts status enum value to string.
            </summary>
            <param name="status">Status to convert</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfoProvider.GetABStatusEnum(System.String)">
            <summary>
            Converts status enum value to string.
            </summary>
            <param name="status">Status to convert</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfoProvider.GetRunningCondition(CMS.OnlineMarketing.ABTestInfo,CMS.SettingsProvider.QueryDataParameters@)">
            <summary>
            Gets a where condition which is used for determining whether there is another AB test for a document already running.
            When this WHERE condition is applied, the query returns number of AB tests already running for a specified document
            (Please note: there is only one running AB test allowed at the same time for a document, time and culture).
            </summary>
            <param name="abTestObj">The ab test obj</param>
            <param name="parameters">Returns query parameters for the given where condition</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfoProvider.GetRunningCondition(System.Int32,System.String,System.Int32,System.String,System.DateTime,System.DateTime,CMS.SettingsProvider.QueryDataParameters@)">
            <summary>
            Gets a where condition which is used for determining whether there is another AB test for a document already running.
            When this WHERE condition is applied, the query returns number of AB tests already running for a specified document
            (Please note: there is only one running AB test allowed at the same time for a document, time and culture).
            </summary>
            <param name="testId">Test id</param>
            <param name="testPage">Test page</param>
            <param name="testSiteId">Test site id</param>
            <param name="testCulture">Test culture</param>
            <param name="openFrom">Test open from</param>
            <param name="openTo">Test open to</param>
            <param name="parameters">Returns query parameters for the given where condition</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfoProvider.GetABTestInfoInternal(System.Int32)">
            <summary>
            Returns AB test with specified ID.
            </summary>
            <param name="abTestId">Ab test ID</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfoProvider.GetAbTestInfoFromDBInternal(System.Int32)">
            <summary>
            Returns AB test with specified ID from database.
            </summary>
            <param name="abTestId">Ab test ID</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfoProvider.GetABTestInfoInternal(System.String,System.String)">
            <summary>
            Returns AB test with specified name.
            </summary>
            <param name="abTestName">Ab test name</param>                
            <param name="siteName">Site name</param>         
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfoProvider.GetABTestInfoFromDBInternal(System.String,System.String)">
            <summary>
            Returns AB test with specified name from database.
            </summary>
            <param name="abTestName">Ab test name</param>                
            <param name="siteName">Site name</param>         
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfoProvider.GetABTestsInternal(System.String,System.String,System.Int32,System.String,CMS.SettingsProvider.QueryDataParameters)">
            <summary>
            Returns dataset of all AB tests matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>
            <param name="columns">Columns to be selected</param>
            <param name="parameters">Query parameters for the given where condition</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfoProvider.SetABTestInfoInternal(CMS.OnlineMarketing.ABTestInfo)">
            <summary>
            Sets (updates or inserts) specified AB test.
            </summary>
            <param name="abTestObj">Ab test to be set</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfoProvider.DeleteABTestInfoInternal(CMS.OnlineMarketing.ABTestInfo)">
            <summary>
            Deletes specified AB test.
            </summary>
            <param name="abTestObj">Ab test to be deleted</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfoProvider.RemoveDataFromWebAnalytics(CMS.OnlineMarketing.ABTestInfo)">
            <summary>
            Delete A/B test data from web analytics
            </summary>
            <param name="abTestObj">A/B test info object</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfoProvider.RemoveObjectDependencies(CMS.OnlineMarketing.ABTestInfo)">
            <summary>
            Removes dependencies from the specified AB test.
            </summary>
            <param name="infoObj">Ab test the dependencies should be removed from</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfoProvider.GetABTestIDInternal(System.String,System.String)">
            <summary>
            Returns ID of the specified test.
            </summary>
            <param name="siteName">Site name</param>
            <param name="abTestName">Test name</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfoProvider.LoadABTests">
            <summary>
            Loads AB tests into hashtables.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfoProvider.GetRunningABTestPageInfo(System.Int32,System.String,System.String,System.Boolean@)">
            <summary>
            Returns the page info object for specified original pageinfo with dependence on corresponding AB test.
            </summary>
            <param name="siteId">The site id</param>
            <param name="path">The path</param>
            <param name="cultureCode">The culture code</param>
            <param name="abTestExists">Indicates whether the AB test was found</param>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestInfoProvider.RandomGenerator">
            <summary>
            Gets random generator for choosing variant.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ABTestStatusEnum">
            <summary>
            A/B test status enumeration.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABTestStatusEnum.None">
            <summary>
            None status - task hasn't been started yet or is disabled.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABTestStatusEnum.Running">
            <summary>
            Running status - task is running.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABTestStatusEnum.Finished">
            <summary>
            Finished status - task has finished.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ABVariantInfo">
            <summary>
            ABVariantInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABVariantInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantInfo.#ctor">
            <summary>
            Constructor - Creates an empty ABVariantInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new ABVariantInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="P:CMS.OnlineMarketing.ABVariantInfo.ABVariantPath">
            <summary>
            Variant path		.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABVariantInfo.ABVariantLastModified">
            <summary>
            Last modification of variant		.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABVariantInfo.ABVariantTestID">
            <summary>
            Variant's test ID		.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABVariantInfo.ABVariantName">
            <summary>
            Variant code name		.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABVariantInfo.ABVariantConversions">
            <summary>
            Count of variant's conversions		.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABVariantInfo.ABVariantDisplayName">
            <summary>
            Variant display name		.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABVariantInfo.ABVariantID">
            <summary>
            Variant ID		.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABVariantInfo.ABVariantViews">
            <summary>
            Count of variant's visits		.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABVariantInfo.ABVariantGUID">
            <summary>
            Variant GUID		.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABVariantInfo.ABVariantSiteID">
            <summary>
            Site ID of test variant.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ABVariantInfoProvider">
            <summary>
            Class providing ABVariantInfo management.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABVariantInfoProvider.variantsById">
            <summary>
            Variants indexed by ABVariantID.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABVariantInfoProvider.variantsByNameSiteTest">
            <summary>
            Variants indexed by key in format [ABVariantName]_[ABVariantSiteID]_[ABVariantTestID].
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABVariantInfoProvider.tableLock">
            <summary>
            Table lock for loading.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantInfoProvider.GetVariantsForTest(CMS.OnlineMarketing.ABTestInfo)">
            <summary>
            Returns variants for ABTest.
            </summary>
            <param name="abTest">AB test info object</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantInfoProvider.IsABVariantValid(System.String,System.String,System.String)">
            <summary>
            Checks whether AB variant is assigned to the specified AB test and AB test is running. 
            </summary>
            <param name="abTestName">ABTest name</param>
            <param name="abVariantName">ABVariant name</param>
            <param name="siteName">Site name</param>
            <returns>Returns true if variant is valid</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantInfoProvider.GetABVariantInfo(System.Int32)">
            <summary>
            Returns Variant with specified ID.
            </summary>
            <param name="variantId">Variant ID</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantInfoProvider.GetABVariantInfo(System.String,System.String,System.String)">
            <summary>
            Returns Variant with specified name.
            </summary>
            <param name="variantName">Variant name</param>     
            <param name="abTestName">A/B test name</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantInfoProvider.GetVariants">
            <summary>
            Returns dataset of all Variants.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantInfoProvider.GetVariants(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all Variants matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantInfoProvider.SetABVariantInfo(CMS.OnlineMarketing.ABVariantInfo)">
            <summary>
            Sets (updates or inserts) specified Variant.
            </summary>
            <param name="variantObj">Variant to be set</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantInfoProvider.DeleteABVariantInfo(CMS.OnlineMarketing.ABVariantInfo)">
            <summary>
            Deletes specified Variant.
            </summary>
            <param name="variantObj">Variant to be deleted</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantInfoProvider.DeleteABVariantInfo(System.Int32)">
            <summary>
            Deletes Variant with specified ID.
            </summary>
            <param name="variantId">Variant ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantInfoProvider.Clear(System.Boolean)">
            <summary>
            Clears the hashtables.
            </summary>
            <param name="logTasks">If true, the clear tasks are logged</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantInfoProvider.GetABVariantInfoInternal(System.Int32)">
            <summary>
            Returns Variant with specified ID.
            </summary>
            <param name="variantId">Variant ID</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantInfoProvider.GetABVariantInfoFromDBInternal(System.Int32)">
            <summary>
            Returns VariantInfo with specified ID from database.
            </summary>
            <param name="variantId">Variant ID</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantInfoProvider.GetABVariantInfoInternal(System.String,System.String,System.String)">
            <summary>
            Returns Variant with specified name.
            </summary>
            <param name="variantName">Variant name</param>                
            <param name="siteName">Site name</param>  
            <param name="abTestName">AB test name</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantInfoProvider.GetABVariantInfoFromDBInternal(System.String,System.String,System.String)">
            <summary>
            Returns Variant with specified name from database.
            </summary>
            <param name="abTestName">ABTest name</param>
            <param name="variantName">Variant name</param>                
            <param name="siteName">Site name</param>         
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantInfoProvider.GetVariantsInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all Variants matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantInfoProvider.SetABVariantInfoInternal(CMS.OnlineMarketing.ABVariantInfo)">
            <summary>
            Sets (updates or inserts) specified Variant.
            </summary>
            <param name="variantObj">Variant to be set</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantInfoProvider.DeleteABVariantInfoInternal(CMS.OnlineMarketing.ABVariantInfo)">
            <summary>
            Deletes specified Variant.
            </summary>
            <param name="variantObj">Variant to be deleted</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantInfoProvider.LoadVariants">
            <summary>
            Loads Variants into hashtables.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABTestListInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestListInfo.#ctor">
            <summary>
            Constructor - Creates an empty ABTestListInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestListInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new ABTestListInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestListInfo.GetData(CMS.SettingsProvider.QueryDataParameters,System.String,System.String,System.Int32,System.String,System.Boolean,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns the data according to the set of input parameters.
            </summary>
            <param name="parameters">Query parameters</param>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
            <param name="topN">Specifies number of returned records</param>        
            <param name="columns">Data columns to return</param>
            <param name="binaryData">If true, binary data are returned in the result (not applied)</param>
            <param name="offset">Index of first record to get</param>
            <param name="maxRecords">Maximum number of records to get. If maxRecords is zero or less, all records are returned (no paging is used)</param>
            <param name="totalRecords">Returns total number of available records</param>       
        </member>
        <member name="T:CMS.OnlineMarketing.AccountContactListInfo">
            <summary>
            Account-Contact relation class used for listing.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.AccountContactListInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountContactListInfo.#ctor">
            <summary>
            Constructor - Creates an empty AccountContactListInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountContactListInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new AccountContactListInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountContactListInfo.GetData(CMS.SettingsProvider.QueryDataParameters,System.String,System.String,System.Int32,System.String,System.Boolean,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns the data according to the set of input parameters.
            </summary>
            <param name="parameters">Query parameters</param>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
            <param name="topN">Specifies number of returned records</param>        
            <param name="columns">Data columns to return</param>
            <param name="binaryData">If true, binary data are returned in the result (not applied)</param>
            <param name="offset">Index of first record to get</param>
            <param name="maxRecords">Maximum number of records to get. If maxRecords is zero or less, all records are returned (no paging is used)</param>
            <param name="totalRecords">Returns total number of available records</param>       
        </member>
        <member name="P:CMS.OnlineMarketing.AccountContactListInfo.ColumnNames">
            <summary>
            Columns in appropriate SQL view.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.AccountContactInfo">
            <summary>
            AccountContactInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.AccountContactInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountContactInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountContactInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountContactInfo.#ctor">
            <summary>
            Constructor - Creates an empty AccountContactInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountContactInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new AccountContactInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="P:CMS.OnlineMarketing.AccountContactInfo.AccountContactID">
            <summary>
            Primary key - ID of relation.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.AccountContactInfo.AccountID">
            <summary>
            Gets or sets the ID of the account.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.AccountContactInfo.ContactID">
            <summary>
            Gets or sets the ID of the contact.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.AccountContactInfo.ContactRoleID">
            <summary>
            Gets or sets the ID of the contact's role.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.AccountContactInfoProvider">
            <summary>
            Class providing AccountContactInfo management.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountContactInfoProvider.GetRelationships(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all relationships between accounts and contacts matching the specified criteria.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountContactInfoProvider.GetRelationships(System.String,System.String)">
            <summary>
            Returns dataset of all relationships between accounts and contacts matching the specified criteria.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountContactInfoProvider.GetAccountContactInfo(System.Int32,System.Int32)">
            <summary>
            Returns relationship between specified account and contact.
            </summary>
            <param name="accountId">Account ID</param>
            <param name="contactId">Contact ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountContactInfoProvider.GetAccountContactInfo(System.Int32)">
            <summary>
            Returns relationship by ID.
            </summary>
            <param name="accountContactId">AccountContactID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountContactInfoProvider.SetAccountContactInfo(CMS.OnlineMarketing.AccountContactInfo)">
            <summary>
            Sets relationship between specified account and contact.
            </summary>
            <param name="infoObj">Account-contact relationship to be set</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountContactInfoProvider.DeleteAccountContactInfo(CMS.OnlineMarketing.AccountContactInfo)">
            <summary>
            Deletes relationship between specified account and contact.
            </summary>
            <param name="infoObj">Account-contact relationship to be deleted</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountContactInfoProvider.DeleteAccountContactInfo(System.Int32,System.Int32)">
            <summary>
            Deletes relationship between specified account and contact.
            </summary>
            <param name="accountId">Account ID</param>
            <param name="contactId">Contact ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountContactInfoProvider.DeleteAccountContactInfo(System.Int32)">
            <summary>
            Deletes relationship with specific AccountContactID.
            </summary>
            <param name="accountContactId">AccountContactID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountContactInfoProvider.DeleteAllAccountContacts(System.String)">
            <summary>
            Deletes relationships between specified accounts and contacts defined in where condition.
            </summary>
            <param name="where">Where condition</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountContactInfoProvider.UpdateContactRole(System.Int32,System.String)">
            <summary>
            Updates contact role of relationships between accounts and contacts.
            </summary>
            <param name="roleId">New contact role ID</param>
            <param name="where">Where condition</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountContactInfoProvider.ResetAccountMainContacts(System.Int32,System.Int32,System.String)">
            <summary>
            Resets main contact IDs of account(s) to NULL if any of the contacts, specified by where-condition, was set as primary or secondary contact.
            </summary>
            <param name="accountId">Account ID - required if called from specific account</param>
            <param name="contactId">Contact ID - required if called from specific contact</param>
            <param name="where">Where condition</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountContactInfoProvider.SetContactsIntoAccount(System.Int32,System.String,System.Int32)">
            <summary>
            Sets relationship between specified account and contact.
            </summary>
            <param name="accountID">Account to be set</param>
            <param name="where">WHERE condition specifying contacts to be set</param>
            <param name="roleID">Account-contact role to be set</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountContactInfoProvider.SetAccountsIntoContact(System.Int32,System.String,System.Int32)">
            <summary>
            Sets relationship between specified account and contact.
            </summary>
            <param name="contactID">Contact to be set</param>
            <param name="where">WHERE condition specifying contacts to be set</param>
            <param name="roleID">Account-contact role to be set</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountContactInfoProvider.GetRelationshipsInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all relationships between accounts and contacts matching the specified criteria.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountContactInfoProvider.GetAccountContactInfoInternal(System.Int32)">
            <summary>
            Returns relationship by AccountContactID.
            </summary>
            <param name="accountContactId">AccountContactID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountContactInfoProvider.GetAccountContactInfoInternal(System.Int32,System.Int32)">
            <summary>
            Returns relationship between specified account and contact.
            </summary>
            <param name="accountId">Account ID</param>
            <param name="contactId">Contact ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountContactInfoProvider.SetAccountContactInfoInternal(CMS.OnlineMarketing.AccountContactInfo)">
            <summary>
            Sets relationship between specified account and contact.
            </summary>
            <param name="infoObj">Account-contact relationship to be set</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountContactInfoProvider.DeleteAccountContactInfoInternal(CMS.OnlineMarketing.AccountContactInfo)">
            <summary>
            Deletes relationship between specified account and contact.
            </summary>
            <param name="infoObj">Account-contact relationship to be deleted</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountContactInfoProvider.DeleteAllAccountContactsInternal(System.String)">
            <summary>
            Deletes realtionships between specified accounts and contacts defined in where condition.
            </summary>
            <param name="where">Where condition</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountContactInfoProvider.UpdateContactRoleInternal(System.Int32,System.String)">
            <summary>
            Updates contact role of relationships between accounts and contacts.
            </summary>
            <param name="roleId">New contact role ID</param>
            <param name="where">Where condition</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountContactInfoProvider.ResetAccountMainContactsInternal(System.Int32,System.Int32,System.String)">
            <summary>
            Resets main contact IDs of account(s) to NULL if any of the contacts, specified by where-condition, was set as primary or secondary contact.
            </summary>
            <param name="accountId">Account ID - required if called from specific account</param>
            <param name="contactId">Contact ID - required if called from specific contact</param>
            <param name="where">Where condition</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountContactInfoProvider.SetContactsIntoAccountInternal(System.Int32,System.String,System.Int32)">
            <summary>
            Sets relationship between specified account and contact.
            </summary>
            <param name="accountID">Account to be set</param>
            <param name="where">WHERE condition specifying contacts to be set</param>
            <param name="roleID">Account-contact role to be set</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountContactInfoProvider.SetAccountsIntoContactInternal(System.Int32,System.String,System.Int32)">
            <summary>
            Sets relationship between specified account and contact.
            </summary>
            <param name="contactID">Contact to be set</param>
            <param name="where">WHERE condition specifying contacts to be set</param>
            <param name="roleID">Account-contact role to be set</param>
        </member>
        <member name="T:CMS.OnlineMarketing.AccountInfo">
            <summary>
            AccountInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.AccountInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountInfo.#ctor">
            <summary>
            Constructor - Creates an empty AccountInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new AccountInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountInfo.CheckPermissions(CMS.SettingsProvider.PermissionsEnum,System.String,CMS.SettingsProvider.IUserInfo)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
        </member>
        <member name="P:CMS.OnlineMarketing.AccountInfo.AccountStateID">
            <summary>
            Gets or sets the account's state ID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.AccountInfo.AccountEmail">
            <summary>
            Gets or sets the account's email address.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.AccountInfo.AccountCreated">
            <summary>
            Gets or sets the date and time when the account was created.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.AccountInfo.AccountNotes">
            <summary>
            Gets or sets the notes for this account.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.AccountInfo.AccountOwnerUserID">
            <summary>
            Gets or sets the user that owns this account.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.AccountInfo.AccountAddress2">
            <summary>
            Gets or sets the second line of the account's address.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.AccountInfo.AccountCity">
            <summary>
            Gets or sets the account's city.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.AccountInfo.AccountFax">
            <summary>
            Gets or sets the account's fax number.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.AccountInfo.AccountGlobalAccountID">
            <summary>
            Gets or sets the ID of the account's current related global account.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.AccountInfo.AccountSecondaryContactID">
            <summary>
            Gets or sets the account's secondary contact ID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.AccountInfo.AccountMergedWithAccountID">
            <summary>
            Gets or sets the ID of the account that was merged to create this one.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.AccountInfo.AccountID">
            <summary>
            Gets or sets the account's ID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.AccountInfo.AccountPhone">
            <summary>
            Gets or sets the account's phone number.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.AccountInfo.AccountPrimaryContactID">
            <summary>
            Gets or sets the account's primary contact ID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.AccountInfo.AccountName">
            <summary>
            Gets or sets the account's name.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.AccountInfo.AccountLastModified">
            <summary>
            Gets or sets the date and time when the account was last modified.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.AccountInfo.AccountStatusID">
            <summary>
            Gets or sets the account's status ID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.AccountInfo.AccountAddress1">
            <summary>
            Gets or sets the first line of the account's address.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.AccountInfo.AccountWebSite">
            <summary>
            Gets or sets the account's web site URL.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.AccountInfo.AccountSubsidiaryOfID">
            <summary>
            Gets or sets the account that is a parent account to this one.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.AccountInfo.AccountGUID">
            <summary>
            Gets or sets the account's GUID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.AccountInfo.AccountCountryID">
            <summary>
            Gets or sets the account's country ID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.AccountInfo.AccountSiteID">
            <summary>
            Gets or sets the account's site ID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.AccountInfo.AccountZIP">
            <summary>
            Gets or sets the account's postal code.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.AccountInfoProvider">
            <summary>
            Class providing AccountInfo management.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.AccountInfoProvider.SQL_TIMEOUT">
            <summary>
            Set timeout to 20 hours.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountInfoProvider.GetAccounts(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all accounts matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountInfoProvider.GetAccounts(System.String,System.String)">
            <summary>
            Returns dataset of all accounts matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountInfoProvider.GetAccountInfo(System.Int32)">
            <summary>
            Returns account with specified ID.
            </summary>
            <param name="accountId">Account ID</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.AccountInfoProvider.GetAccountInfo(System.String,System.String)">
            <summary>
            Returns account with specified name.
            </summary>
            <param name="accountName">Account name</param>                
            <param name="siteName">Site name</param>                
        </member>
        <member name="M:CMS.OnlineMarketing.AccountInfoProvider.GetAccountInfo(System.Guid,System.String)">
            <summary>
            Returns account with specified GUID.
            </summary>
            <param name="accountGuid">Account GUID</param>                
            <param name="siteName">Site name</param>                
        </member>
        <member name="M:CMS.OnlineMarketing.AccountInfoProvider.SetAccountInfo(CMS.OnlineMarketing.AccountInfo)">
            <summary>
            Sets (updates or inserts) specified account.
            </summary>
            <param name="accountObj">Account to be set</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountInfoProvider.DeleteAccountInfo(CMS.OnlineMarketing.AccountInfo)">
            <summary>
            Deletes specified account.
            </summary>
            <param name="accountObj">Account to be deleted</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountInfoProvider.DeleteAccountInfo(System.Int32)">
            <summary>
            Deletes account with specified ID.
            </summary>
            <param name="accountId">Account ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountInfoProvider.DeleteAccountInfos(System.String,System.Boolean)">
            <summary>
            Deletes accounts by specified WHERE condition.
            </summary>
            <param name="where">SQL WHERE condition</param>
            <param name="deleteSubsidiaries">Delete subsidiaries</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountInfoProvider.GetAccounts(System.String,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Returns dataset of all accounts for specified site matching the specified parameters.
            </summary>       
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
            <param name="siteId">Site ID</param>        		
        </member>
        <member name="M:CMS.OnlineMarketing.AccountInfoProvider.GetAccounts(System.Int32)">
            <summary>
            Returns dataset of all accounts for specified site.
            </summary>
            <param name="siteId">Site ID</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.AccountInfoProvider.UpdateAccountHQ(System.Int32,System.String)">
            <summary>
            Updates HQ ID of specified accounts.
            </summary>
            <param name="subsidiaryOfID">HQ ID</param>
            <param name="where">Where condition</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountInfoProvider.UpdateAccountStatus(System.Int32,System.String)">
            <summary>
            Updates account status ID of specified accounts.
            </summary>
            <param name="statusId">Account status ID</param>
            <param name="where">Where condition</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountInfoProvider.GetAccountsInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all accounts matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountInfoProvider.GetAccountInfoInternal(System.Int32)">
            <summary>
            Returns account with specified ID.
            </summary>
            <param name="accountId">Account ID</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.AccountInfoProvider.GetAccountInfoInternal(System.String,System.String)">
            <summary>
            Returns account with specified name.
            </summary>
            <param name="accountName">Account name</param>                
            <param name="siteName">Site name</param>         
        </member>
        <member name="M:CMS.OnlineMarketing.AccountInfoProvider.GetAccountInfoInternal(System.Guid,System.String)">
            <summary>
            Returns account with specified GUID.
            </summary>
            <param name="accountGuid">Account GUID</param>                
            <param name="siteName">Site name</param>         
        </member>
        <member name="M:CMS.OnlineMarketing.AccountInfoProvider.SetAccountInfoInternal(CMS.OnlineMarketing.AccountInfo)">
            <summary>
            Sets (updates or inserts) specified account.
            </summary>
            <param name="accountObj">Account to be set</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.AccountInfoProvider.DeleteAccountInfoInternal(CMS.OnlineMarketing.AccountInfo)">
            <summary>
            Deletes specified account.
            </summary>
            <param name="accountObj">Account to be deleted</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.AccountInfoProvider.DeleteAccountInfosInternal(System.String,System.Boolean)">
            <summary>
            Deletes accounts by WHERE condition
            </summary>
            <param name="where">SQL WHERE condition to specify deleted accounts</param>        
            <param name="deleteSubsidiaries">Indicates if subsidiaries should be deleted</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.AccountInfoProvider.GetAccountsInternal(System.String,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Returns dataset of all accounts for specified site matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
            <param name="siteId">Site ID</param> 
        </member>
        <member name="M:CMS.OnlineMarketing.AccountInfoProvider.UpdateAccountHQInternal(System.Int32,System.String)">
            <summary>
            Updates HQ ID of specified accounts.
            </summary>
            <param name="subsidiaryOfID">HQ account ID</param>
            <param name="where">Where condition</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountInfoProvider.UpdateAccountStatusInternal(System.Int32,System.String)">
            <summary>
            Updates account status ID of specified accounts.
            </summary>
            <param name="statusId">Account status ID</param>
            <param name="where">Where condition</param>
        </member>
        <member name="T:CMS.OnlineMarketing.AccountListInfo">
            <summary>
            "Virtual" object for loading data from contact view.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.AccountListInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountListInfo.#ctor">
            <summary>
            Constructor - Creates an empty AccountListInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountListInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new AccountListInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountListInfo.GetData(CMS.SettingsProvider.QueryDataParameters,System.String,System.String,System.Int32,System.String,System.Boolean,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns the data according to the set of input parameters.
            </summary>
            <param name="parameters">Query parameters</param>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
            <param name="topN">Specifies number of returned records</param>        
            <param name="columns">Data columns to return</param>
            <param name="binaryData">If true, binary data are returned in the result (not applied)</param>
            <param name="offset">Index of first record to get</param>
            <param name="maxRecords">Maximum number of records to get. If maxRecords is zero or less, all records are returned (no paging is used)</param>
            <param name="totalRecords">Returns total number of available records</param>       
        </member>
        <member name="P:CMS.OnlineMarketing.AccountListInfo.ColumnNames">
            <summary>
            Gets the list of column names
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.AccountMembershipListInfo">
            <summary>
            "Virtual" object for loading data from account-membership view.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.AccountMembershipListInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountMembershipListInfo.#ctor">
            <summary>
            Constructor - Creates an empty AccountListInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountMembershipListInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new AccountListInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountMembershipListInfo.GetData(CMS.SettingsProvider.QueryDataParameters,System.String,System.String,System.Int32,System.String,System.Boolean,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns the data according to the set of input parameters.
            </summary>
            <param name="parameters">Query parameters</param>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
            <param name="topN">Specifies number of returned records</param>        
            <param name="columns">Data columns to return</param>
            <param name="binaryData">If true, binary data are returned in the result (not applied)</param>
            <param name="offset">Index of first record to get</param>
            <param name="maxRecords">Maximum number of records to get. If maxRecords is zero or less, all records are returned (no paging is used)</param>
            <param name="totalRecords">Returns total number of available records</param>       
        </member>
        <member name="P:CMS.OnlineMarketing.AccountMembershipListInfo.ColumnNames">
            <summary>
            Gets the list of column names
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ActivityListInfo">
            <summary>
            "Virtual" object for loading activities for particular contact (not merged).
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ActivityListInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityListInfo.#ctor">
            <summary>
            Constructor - Creates an empty ActivityListInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityListInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new ActivityListInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityListInfo.GetData(CMS.SettingsProvider.QueryDataParameters,System.String,System.String,System.Int32,System.String,System.Boolean,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns the data according to the set of input parameters.
            </summary>
            <param name="parameters">Query parameters</param>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
            <param name="topN">Specifies number of returned records</param>        
            <param name="columns">Data columns to return</param>
            <param name="binaryData">If true, binary data are returned in the result (not applied)</param>
            <param name="offset">Index of first record to get</param>
            <param name="maxRecords">Maximum number of records to get. If maxRecords is zero or less, all records are returned (no paging is used)</param>
            <param name="totalRecords">Returns total number of available records</param>       
        </member>
        <member name="P:CMS.OnlineMarketing.ActivityListInfo.ColumnNames">
            <summary>
            Gets the list of column names
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ActivityContactListInfo">
            <summary>
            "Virtual" object for loading activities for particular contact (not merged).
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ActivityContactListInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityContactListInfo.#ctor">
            <summary>
            Constructor - Creates an empty ActivityContactListInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityContactListInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new ActivityContactListInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityContactListInfo.GetData(CMS.SettingsProvider.QueryDataParameters,System.String,System.String,System.Int32,System.String,System.Boolean,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns the data according to the set of input parameters.
            </summary>
            <param name="parameters">Query parameters</param>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
            <param name="topN">Specifies number of returned records</param>        
            <param name="columns">Data columns to return</param>
            <param name="binaryData">If true, binary data are returned in the result (not applied)</param>
            <param name="offset">Index of first record to get</param>
            <param name="maxRecords">Maximum number of records to get. If maxRecords is zero or less, all records are returned (no paging is used)</param>
            <param name="totalRecords">Returns total number of available records</param>       
        </member>
        <member name="P:CMS.OnlineMarketing.ActivityContactListInfo.ColumnNames">
            <summary>
            Gets the list of column names
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ActivityContactMergedListInfo">
            <summary>
            "Virtual" object for loading activities for particular contact (not merged).
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ActivityContactMergedListInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityContactMergedListInfo.#ctor">
            <summary>
            Constructor - Creates an empty ActivityContactMergedListInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityContactMergedListInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new ActivityContactMergedListInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityContactMergedListInfo.GetData(CMS.SettingsProvider.QueryDataParameters,System.String,System.String,System.Int32,System.String,System.Boolean,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns the data according to the set of input parameters.
            </summary>
            <param name="parameters">Query parameters</param>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
            <param name="topN">Specifies number of returned records</param>        
            <param name="columns">Data columns to return</param>
            <param name="binaryData">If true, binary data are returned in the result (not applied)</param>
            <param name="offset">Index of first record to get</param>
            <param name="maxRecords">Maximum number of records to get. If maxRecords is zero or less, all records are returned (no paging is used)</param>
            <param name="totalRecords">Returns total number of available records</param>       
        </member>
        <member name="P:CMS.OnlineMarketing.ActivityContactMergedListInfo.ColumnNames">
            <summary>
            Gets the list of column names
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ActivityContactGlobalListInfo">
            <summary>
            "Virtual" object for loading activities for particular contact (not merged).
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ActivityContactGlobalListInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityContactGlobalListInfo.#ctor">
            <summary>
            Constructor - Creates an empty ActivityContactGlobalListInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityContactGlobalListInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new ActivityContactGlobalListInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityContactGlobalListInfo.GetData(CMS.SettingsProvider.QueryDataParameters,System.String,System.String,System.Int32,System.String,System.Boolean,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns the data according to the set of input parameters.
            </summary>
            <param name="parameters">Query parameters</param>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
            <param name="topN">Specifies number of returned records</param>        
            <param name="columns">Data columns to return</param>
            <param name="binaryData">If true, binary data are returned in the result (not applied)</param>
            <param name="offset">Index of first record to get</param>
            <param name="maxRecords">Maximum number of records to get. If maxRecords is zero or less, all records are returned (no paging is used)</param>
            <param name="totalRecords">Returns total number of available records</param>       
        </member>
        <member name="P:CMS.OnlineMarketing.ActivityContactGlobalListInfo.ColumnNames">
            <summary>
            Gets the list of column names
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ContactGroupStatusEnum">
            <summary>
            Types of contact group status used by ContactGroupInfo object.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContactGroupStatusEnum.Unspecified">
            <summary>
            Unspecified
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContactGroupStatusEnum.Ready">
            <summary>
            Ready
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContactGroupStatusEnum.Rebuilding">
            <summary>
            Rebuilding
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContactGroupStatusEnum.ConditionChanged">
            <summary>
            Condition changed - rebuild is required
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ContactScoreListInfo">
            <summary>
            Contact-Score relation table.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContactScoreListInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactScoreListInfo.#ctor">
            <summary>
            Constructor - Creates an empty ContactScoreListInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactScoreListInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new ContactScoreListInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactScoreListInfo.GetData(CMS.SettingsProvider.QueryDataParameters,System.String,System.String,System.Int32,System.String,System.Boolean,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns the data according to the set of input parameters.
            </summary>
            <param name="parameters">Query parameters</param>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
            <param name="topN">Specifies number of returned records</param>        
            <param name="columns">Data columns to return</param>
            <param name="binaryData">If true, binary data are returned in the result (not applied)</param>
            <param name="offset">Index of first record to get</param>
            <param name="maxRecords">Maximum number of records to get. If maxRecords is zero or less, all records are returned (no paging is used)</param>
            <param name="totalRecords">Returns total number of available records</param>       
        </member>
        <member name="P:CMS.OnlineMarketing.ContactScoreListInfo.ColumnNames">
            <summary>
            Columns of appropriate SQL view.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ScoreHelper">
            <summary>
            Helper class for score groups
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreHelper.RecalculateScoreGroups(System.Int32,System.Int32)">
            <summary>
            Recalculates all score groups for specified contact.
            </summary>
            <param name="contactID">Contact ID.</param>
            <param name="siteID">Site ID.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreHelper.RecalculateScoreGroup(System.Int32,System.Nullable{System.Int32})">
            <summary>
            Recalculates score group for all contacts or for single contact.
            </summary>
            <param name="scoreID">Score ID</param>
            <param name="contactID">Optional. Contact ID.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreHelper.StartScoreRecalculation(CMS.OnlineMarketing.ScoreInfo,System.Nullable{System.Int32})">
            <summary>
            Starts recalculation process.
            </summary>
            <param name="si">Score info object</param>
            <param name="contactID">Optional. Contact ID.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreHelper.MarkScoreAsReady(CMS.OnlineMarketing.ScoreInfo)">
            <summary>
            Marks score object as ready.
            </summary>
            <param name="si">Score info object</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreHelper.MarkScoreAsRecalculating(CMS.OnlineMarketing.ScoreInfo)">
            <summary>
            Check that score info is not already recalculated and mark it as being recalculated.
            </summary>
            <param name="si">Score info object</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreHelper.RecalculateScoreRule(CMS.OnlineMarketing.RuleInfo,CMS.SettingsProvider.QueryDataParameters)">
            <summary>
            Recalulcate rule for given score.
            </summary>
            <param name="ri">Rule info</param>
            <param name="parameters">Query parameters</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreHelper.SendNotification(CMS.OnlineMarketing.ScoreInfo)">
            <summary>
            Sends notification e-mails to contacts who exceeded score limit.
            </summary>
            <param name="score">Score info object</param>
        </member>
        <member name="T:CMS.OnlineMarketing.DynamicConditionEvaluator">
            <summary>
            Is able to evaluate Contact group's dynamic condition in asynchronous thread or synchronously.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.DynamicConditionEvaluator.mWindowsIdentity">
            <summary>
            Windows identity.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.DynamicConditionEvaluator.threadLock">
            <summary>
            Thread lock for contact group update.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.DynamicConditionEvaluator.contactCache">
            <summary>
            Cached contacts which were recently processed.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.DynamicConditionEvaluator.RunAsync(System.Security.Principal.WindowsIdentity)">
            <summary>
            Run asynchronous evaluation.
            </summary>
            <param name="wi">Windows identity</param>
        </member>
        <member name="M:CMS.OnlineMarketing.DynamicConditionEvaluator.Run">
            <summary>
            Run contact group evaluation, this is not asynchronous execution.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.DynamicConditionEvaluator.ActivityForAllGroups(System.String[])">
            <summary>
            Evaluates all contact group conditions and assignes contact to those which conditions are met.
            Doesn't run in separate thread as it is called from task for processing activities.
            InvalidateCache method must be called after all activities are processed.
            </summary>
            <param name="values">Values which were used to create activity</param>
        </member>
        <member name="M:CMS.OnlineMarketing.DynamicConditionEvaluator.ActivityForAllGroups(CMS.OnlineMarketing.ActivityInfo)">
            <summary>
            Evaluates all contact group conditions and assignes contact to those which conditions are met.
            Doesn't run in separate thread as it is called from task for processing activities.
            InvalidateCache method must be called after all activities are processed.
            </summary>
            <param name="ai">Activity info</param>
        </member>
        <member name="M:CMS.OnlineMarketing.DynamicConditionEvaluator.InvalidateCache">
            <summary>
            Invalidates contacts which were used in last mass operation. Must be deleted after every mass 
            operation to prevend difference between DB and cache.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.DynamicConditionEvaluator.EvaluateCondition(CMS.OnlineMarketing.ContactInfo,CMS.OnlineMarketing.ContactGroupInfo,CMS.OnlineMarketing.ActivityInfo)">
            <summary>
            Evaluates contact group's dynamic condition according to specified contact and activity.
            </summary>
            <param name="contact">Current contact</param>
            <param name="contactGroup">Current contact group</param>
            <param name="activity">Current activity</param>
        </member>
        <member name="P:CMS.OnlineMarketing.DynamicConditionEvaluator.contact">
            <summary>
            Contact which caused activity.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.DynamicConditionEvaluator.contactGroup">
            <summary>
            Current group which is being evalueated.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.DynamicConditionEvaluator.activity">
            <summary>
            Activity which caues evaluation.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.MemberAddedHowEnum">
            <summary>
            Possible types of how can be contact added to contact group.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MemberAddedHowEnum.Dynamic">
            <summary>
            Contact is added through dynamic macro evaluation.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MemberAddedHowEnum.Account">
            <summary>
            Contact is added through account which is member of contact group.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MemberAddedHowEnum.Manual">
            <summary>
            Contact is manually added.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ConfigurationHelper">
            <summary>
            Class providing configuration helping methods.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ConfigurationHelper.AuthorizedReadConfiguration(System.Int32,System.Boolean)">
            <summary>
            Indicates if current user is authorized for configuration.
            </summary>
            <param name="siteID">SiteID of an configuration</param>
            <param name="noPermissionRedirect">Indicates if redirect should be done when not enough permissions</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ConfigurationHelper.AuthorizedReadConfiguration(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Indicates if current user is authorized for configuration.
            </summary>
            <param name="siteID">SiteID of an configuration</param>
            <param name="noPermissionRedirect">Indicates if redirect should be done when not enough permissions</param>
            <param name="isSiteManager">Indicates if current context is in site manager</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ConfigurationHelper.AuthorizedModifyConfiguration(System.Int32,System.Boolean)">
            <summary>
            Returns if current user is authorized to modify configuration.
            </summary>
            <param name="siteID">SiteID of an configuration</param>
            <param name="noPermissionRedirect">Indicates if redirect should be done when not enough permissions</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ConfigurationHelper.AuthorizedModifyConfiguration(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Returns if current user is authorized to modify configuration.
            </summary>
            <param name="siteID">SiteID of an configuration</param>
            <param name="noPermissionRedirect">Indicates if redirect should be done when not enough permissions</param>
            <param name="isSiteManager">Indicates if current context is in site manager</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ConfigurationHelper.ObjectSiteID(System.Object)">
            <summary>
            Returns Site ID of configuration.
            </summary>
            <param name="configuration">AccountStatusInfo or ContactStatusInfo or ContactRoleInfo</param>
            <returns>Returns site ID. Returns -1 when conversion of object fails.</returns>
        </member>
        <member name="T:CMS.OnlineMarketing.ContactGroupHelper">
            <summary>
            Class used for group helper methods.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupHelper.AuthorizedReadContactGroup(System.Int32,System.Boolean)">
            <summary>
            Indicates if current user is authorized for site CG.
            </summary>
            <param name="siteID">SiteID of an CG</param>
            <param name="noPermissionRedirect">Indicates if redirect should be done when not enough permissions</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupHelper.AuthorizedReadContactGroup(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Indicates if current user is authorized for site CG.
            </summary>
            <param name="siteID">SiteID of an CG</param>
            <param name="noPermissionRedirect">Indicates if redirect should be done when not enough permissions</param>
            <param name="isSiteManager">Indicates if current context is in site manager</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupHelper.AuthorizedModifyContactGroup(System.Int32,System.Boolean)">
            <summary>
            Returns if current user is authorized to modify CG.
            </summary>
            <param name="siteID">SiteID of an CG</param>
            <param name="noPermissionRedirect">Indicates if redirect should be done when not enough permissions</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupHelper.AuthorizedModifyContactGroup(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Returns if current user is authorized to modify CG.
            </summary>
            <param name="siteID">SiteID of an CG</param>
            <param name="noPermissionRedirect">Indicates if redirect should be done when not enough permissions</param>
            <param name="isSiteManager">Indicates if current context is in site manager</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupHelper.ObjectSiteID(System.Object)">
            <summary>
            Returns Site ID of CG.
            </summary>
            <param name="contactGroup">CG info</param>
            <returns>Returns site ID. Returns -1 when conversion of object fails.</returns>
        </member>
        <member name="T:CMS.OnlineMarketing.CMControlsHelper">
            <summary>
            Class providing helper methods for controls in Contact Management module.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.CMControlsHelper.UniGridOnExternalDataBound(System.Object,System.String,System.Object)">
            <summary>
            Unigrid's OnExternalDataBoundEvent providing common Contact Management columns' transformations.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.CMSContactManagementAccountsPage">
            <summary>
            Base page for CMS ContactManagement - Accounts page.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.CMSContactManagementPage">
            <summary>
            Base contact management page.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.CMSContactManagementPage.GetSiteID(System.String)">
            <summary>
            Gets valid site id for current user.
            </summary>
            <param name="queryStringSiteId">Site id from querystring</param>
        </member>
        <member name="M:CMS.OnlineMarketing.CMSContactManagementPage.OnInit(System.EventArgs)">
            <summary>
            Page OnInit event handler.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.CMSContactManagementPage.CheckPermissions(System.Boolean)">
            <summary>
            Checks if contact management is available on site.
            </summary>
            <param name="redirectOnError">If set to <c>true</c> then redirect to error permission page when not authorised</param>
        </member>
        <member name="M:CMS.OnlineMarketing.CMSContactManagementPage.AddSiteQuery(System.String,System.Nullable{System.Int32})">
            <summary>
            Adds querystring parameters 'isSiteManager' and 'siteid' to provided URL. Applied only in sitemanager.
            </summary>
            <param name="url">Existing url</param>
            <param name="currentSiteID">Current site ID</param>
            <returns>Returns modified URL</returns>
        </member>
        <member name="P:CMS.OnlineMarketing.CMSContactManagementPage.SiteID">
            <summary>
            Returns correct site id for current user.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.CMSContactManagementPage.IsSiteManager">
            <summary>
            Returns TRUE if current site is being displayed in Site Manager.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.CMSContactManagementAccountsPage.GetSiteID(System.String)">
            <summary>
            Gets valid site id for current user.
            </summary>
            <param name="queryStringSiteId">Site id from querystring</param>
        </member>
        <member name="M:CMS.OnlineMarketing.CMSContactManagementAccountsPage.OnInit(System.EventArgs)">
            <summary>
            OnInit event handler.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.CMSContactManagementAccountsPage.CheckReadPermission(System.Int32)">
            <summary>
            Checks "read" permission of site/global account for current user.
            </summary>
            <param name="siteId">Account site ID</param>
        </member>
        <member name="P:CMS.OnlineMarketing.CMSContactManagementAccountsPage.AuthorizedForGlobalAccounts">
            <summary>
            Indicates if current user is authorized for reading global accounts.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.CMSContactManagementAccountsPage.AuthorizedForSiteAccounts">
            <summary>
            Indicates if current user is authorized for reading site accounts.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.CMSContactManagementAccountStatusPage">
            <summary>
            Base page for CMS ContactManagement - Configuration page - account status.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.CMSContactManagementConfigurationPage">
            <summary>
            Base page for CMS ContactManagement - Configuration page.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.CMSContactManagementConfigurationPage.GetSiteID(System.String)">
            <summary>
            Gets valid site id for current user.
            </summary>
            <param name="queryStringSiteId">Site id from querystring</param>
        </member>
        <member name="M:CMS.OnlineMarketing.CMSContactManagementConfigurationPage.OnInit(System.EventArgs)">
            <summary>
            OnInit event handler.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.CMSContactManagementConfigurationPage.GetSiteFilter(System.String)">
            <summary>
            Returns SQL WHERE condition for current site.
            </summary>
            <param name="siteColumn">Name of site column.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.CMSContactManagementConfigurationPage.CheckReadPermission(System.Int32)">
            <summary>
            Checks "read" permission of site/global object for current user.
            </summary>
            <param name="siteId">Account site ID</param>
        </member>
        <member name="P:CMS.OnlineMarketing.CMSContactManagementConfigurationPage.AuthorizedForGlobalConfiguration">
            <summary>
            Gets a value indicating if current user is authorized for reading global configuration.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.CMSContactManagementConfigurationPage.AuthorizedForSiteConfiguration">
            <summary>
            Gets a value indicating if current user is authorized for reading site configuration.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.CMSContactManagementConfigurationPage.ModifyGlobalConfiguration">
            <summary>
            Gets value indicating if current user is authorized for modyfying global configuration objects.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.CMSContactManagementConfigurationPage.ModifySiteConfiguration">
            <summary>
            Gets value indicating if current user is authorized for modyfying site configuration objects.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.CMSContactManagementConfigurationPage.UnifiedSiteID">
            <summary>
            Gets current site ID for CMS Desk or selected site ID for Site Manager.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.CMSContactManagementAccountStatusPage.OnInit(System.EventArgs)">
            <summary>
            OnInit event handler.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.CMSContactManagementActivitiesPage">
            <summary>
            Base page for CMS ContactManagement - Contacts page.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.CMSContactManagementActivitiesPage.OnInit(System.EventArgs)">
            <summary>
            OnInit event handler.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.CMSContactManagementContactGroupsPage">
            <summary>
            Base page for CMS ContactManagement - Contact groups page.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.CMSContactManagementContactGroupsPage.GetSiteID(System.String)">
            <summary>
            Gets valid site id for current user.
            </summary>
            <param name="queryStringSiteId">Site id from querystring</param>
        </member>
        <member name="M:CMS.OnlineMarketing.CMSContactManagementContactGroupsPage.OnInit(System.EventArgs)">
            <summary>
            OnInit event handler.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.CMSContactManagementContactGroupsPage.CheckReadPermission(System.Int32)">
            <summary>
            Checks "read" permission of site/global object for current user.
            </summary>
            <param name="siteId">Contact group site ID</param>
        </member>
        <member name="P:CMS.OnlineMarketing.CMSContactManagementContactGroupsPage.AuthorizedForGlobalContactGroups">
            <summary>
            Indicates if current user is authorized for reading global contact groups.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.CMSContactManagementContactGroupsPage.AuthorizedForSiteContactGroups">
            <summary>
            Indicates if current user is authorized for reading site contact groups.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.CMSContactManagementContactRolePage">
            <summary>
            Base page for CMS ContactManagement - Configuration page - contact role.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.CMSContactManagementContactRolePage.OnInit(System.EventArgs)">
            <summary>
            OnInit event handler.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.CMSContactManagementContactsPage">
            <summary>
            Base page for CMS ContactManagement - Contacts page.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.CMSContactManagementContactsPage.GetSiteID(System.String)">
            <summary>
            Gets valid site id for current user.
            </summary>
            <param name="queryStringSiteId">Site id from querystring</param>
        </member>
        <member name="M:CMS.OnlineMarketing.CMSContactManagementContactsPage.OnInit(System.EventArgs)">
            <summary>
            OnInit event handler.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.CMSContactManagementContactsPage.CheckReadPermission(System.Int32)">
            <summary>
            Checks "read" permission of site/global contact for current user.
            </summary>
            <param name="siteId">Contact site ID</param>
        </member>
        <member name="P:CMS.OnlineMarketing.CMSContactManagementContactsPage.AuthorizedForGlobalContacts">
            <summary>
            Indicates if current user is authorized for reading global contacts.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.CMSContactManagementContactsPage.AuthorizedForSiteContacts">
            <summary>
            Indicates if current user is authorized for reading site contacts.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.CMSContactManagementContactStatusPage">
            <summary>
            Base page for CMS ContactManagement - Configuration page - contact status.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.CMSContactManagementContactStatusPage.OnInit(System.EventArgs)">
            <summary>
            OnInit event handler.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.CMSRulePage">
            <summary>
            Base class for score - rule pages.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.CMSScorePage">
            <summary>
            Base class for scoring pages.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.CMSScorePage.OnInit(System.EventArgs)">
            <summary>
            Page OnInit event handler.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.CMSScorePage.Score">
            <summary>
            Score object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.CMSRulePage.OnInit(System.EventArgs)">
            <summary>
            Page OnInit event handler.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.CMSRulePage.Rule">
            <summary>
            Edited Rule.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.IPGlobalListInfo">
            <summary>
            "Virtual" object for loading contact-ip relation data (for merged contacts).
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.IPGlobalListInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.IPGlobalListInfo.#ctor">
            <summary>
            Constructor - Creates an empty MembershipUserListInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.IPGlobalListInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new MembershipUserListInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.OnlineMarketing.IPGlobalListInfo.GetData(CMS.SettingsProvider.QueryDataParameters,System.String,System.String,System.Int32,System.String,System.Boolean,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns the data according to the set of input parameters.
            </summary>
            <param name="parameters">Query parameters</param>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
            <param name="topN">Specifies number of returned records</param>        
            <param name="columns">Data columns to return</param>
            <param name="binaryData">If true, binary data are returned in the result (not applied)</param>
            <param name="offset">Index of first record to get</param>
            <param name="maxRecords">Maximum number of records to get. If maxRecords is zero or less, all records are returned (no paging is used)</param>
            <param name="totalRecords">Returns total number of available records</param>       
        </member>
        <member name="P:CMS.OnlineMarketing.IPGlobalListInfo.ColumnNames">
            <summary>
            Gets the list of column names
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.MembershipGlobalCustomerListInfo">
            <summary>
            "Virtual" object for loading contact-customer relation data (for merged contact).
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MembershipGlobalCustomerListInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MembershipGlobalCustomerListInfo.#ctor">
            <summary>
            Constructor - Creates an empty MembershipMergedCustomerListInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MembershipGlobalCustomerListInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new MembershipMergedCustomerListInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MembershipGlobalCustomerListInfo.GetData(CMS.SettingsProvider.QueryDataParameters,System.String,System.String,System.Int32,System.String,System.Boolean,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns the data according to the set of input parameters.
            </summary>
            <param name="parameters">Query parameters</param>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
            <param name="topN">Specifies number of returned records</param>        
            <param name="columns">Data columns to return</param>
            <param name="binaryData">If true, binary data are returned in the result (not applied)</param>
            <param name="offset">Index of first record to get</param>
            <param name="maxRecords">Maximum number of records to get. If maxRecords is zero or less, all records are returned (no paging is used)</param>
            <param name="totalRecords">Returns total number of available records</param>       
        </member>
        <member name="P:CMS.OnlineMarketing.MembershipGlobalCustomerListInfo.ColumnNames">
            <summary>
            Gets the list of column names
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.MembershipGlobalSubscriberListInfo">
            <summary>
            "Virtual" object for loading contact-subscriber relation data (for merged contact).
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MembershipGlobalSubscriberListInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MembershipGlobalSubscriberListInfo.#ctor">
            <summary>
            Constructor - Creates an empty MembershipGlobalSubscriberListInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MembershipGlobalSubscriberListInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new MembershipGlobalSubscriberListInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MembershipGlobalSubscriberListInfo.GetData(CMS.SettingsProvider.QueryDataParameters,System.String,System.String,System.Int32,System.String,System.Boolean,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns the data according to the set of input parameters.
            </summary>
            <param name="parameters">Query parameters</param>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
            <param name="topN">Specifies number of returned records</param>        
            <param name="columns">Data columns to return</param>
            <param name="binaryData">If true, binary data are returned in the result (not applied)</param>
            <param name="offset">Index of first record to get</param>
            <param name="maxRecords">Maximum number of records to get. If maxRecords is zero or less, all records are returned (no paging is used)</param>
            <param name="totalRecords">Returns total number of available records</param>       
        </member>
        <member name="P:CMS.OnlineMarketing.MembershipGlobalSubscriberListInfo.ColumnNames">
            <summary>
            Gets the list of column names
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.MembershipGlobalUserListInfo">
            <summary>
            "Virtual" object for loading contact-user relation data (for merged contact).
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MembershipGlobalUserListInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MembershipGlobalUserListInfo.#ctor">
            <summary>
            Constructor - Creates an empty MembershipGlobalUserListInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MembershipGlobalUserListInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new MembershipGlobalUserListInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MembershipGlobalUserListInfo.GetData(CMS.SettingsProvider.QueryDataParameters,System.String,System.String,System.Int32,System.String,System.Boolean,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns the data according to the set of input parameters.
            </summary>
            <param name="parameters">Query parameters</param>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
            <param name="topN">Specifies number of returned records</param>        
            <param name="columns">Data columns to return</param>
            <param name="binaryData">If true, binary data are returned in the result (not applied)</param>
            <param name="offset">Index of first record to get</param>
            <param name="maxRecords">Maximum number of records to get. If maxRecords is zero or less, all records are returned (no paging is used)</param>
            <param name="totalRecords">Returns total number of available records</param>       
        </member>
        <member name="P:CMS.OnlineMarketing.MembershipGlobalUserListInfo.ColumnNames">
            <summary>
            Gets the list of column names
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.IPMergedListInfo">
            <summary>
            "Virtual" object for loading contact-ip relation data (for merged contacts).
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.IPMergedListInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.IPMergedListInfo.#ctor">
            <summary>
            Constructor - Creates an empty MembershipUserListInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.IPMergedListInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new MembershipUserListInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.OnlineMarketing.IPMergedListInfo.GetData(CMS.SettingsProvider.QueryDataParameters,System.String,System.String,System.Int32,System.String,System.Boolean,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns the data according to the set of input parameters.
            </summary>
            <param name="parameters">Query parameters</param>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
            <param name="topN">Specifies number of returned records</param>        
            <param name="columns">Data columns to return</param>
            <param name="binaryData">If true, binary data are returned in the result (not applied)</param>
            <param name="offset">Index of first record to get</param>
            <param name="maxRecords">Maximum number of records to get. If maxRecords is zero or less, all records are returned (no paging is used)</param>
            <param name="totalRecords">Returns total number of available records</param>       
        </member>
        <member name="P:CMS.OnlineMarketing.IPMergedListInfo.ColumnNames">
            <summary>
            Gets the list of column names
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.IPListInfo">
            <summary>
            "Virtual" object for loading contact-user relation data.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.IPListInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.IPListInfo.#ctor">
            <summary>
            Constructor - Creates an empty IPListInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.IPListInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new IPListInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.OnlineMarketing.IPListInfo.GetData(CMS.SettingsProvider.QueryDataParameters,System.String,System.String,System.Int32,System.String,System.Boolean,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns the data according to the set of input parameters.
            </summary>
            <param name="parameters">Query parameters</param>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
            <param name="topN">Specifies number of returned records</param>        
            <param name="columns">Data columns to return</param>
            <param name="binaryData">If true, binary data are returned in the result (not applied)</param>
            <param name="offset">Index of first record to get</param>
            <param name="maxRecords">Maximum number of records to get. If maxRecords is zero or less, all records are returned (no paging is used)</param>
            <param name="totalRecords">Returns total number of available records</param>       
        </member>
        <member name="P:CMS.OnlineMarketing.IPListInfo.ColumnNames">
            <summary>
            Gets the list of column names
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.MembershipMergedCustomerListInfo">
            <summary>
            "Virtual" object for loading contact-customer relation data (for merged contact).
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MembershipMergedCustomerListInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MembershipMergedCustomerListInfo.#ctor">
            <summary>
            Constructor - Creates an empty MembershipMergedCustomerListInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MembershipMergedCustomerListInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new MembershipMergedCustomerListInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MembershipMergedCustomerListInfo.GetData(CMS.SettingsProvider.QueryDataParameters,System.String,System.String,System.Int32,System.String,System.Boolean,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns the data according to the set of input parameters.
            </summary>
            <param name="parameters">Query parameters</param>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
            <param name="topN">Specifies number of returned records</param>        
            <param name="columns">Data columns to return</param>
            <param name="binaryData">If true, binary data are returned in the result (not applied)</param>
            <param name="offset">Index of first record to get</param>
            <param name="maxRecords">Maximum number of records to get. If maxRecords is zero or less, all records are returned (no paging is used)</param>
            <param name="totalRecords">Returns total number of available records</param>       
        </member>
        <member name="P:CMS.OnlineMarketing.MembershipMergedCustomerListInfo.ColumnNames">
            <summary>
            Gets the list of column names
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.MembershipMergedSubscriberListInfo">
            <summary>
            "Virtual" object for loading contact-subscriber relation data (for merged contact).
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MembershipMergedSubscriberListInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MembershipMergedSubscriberListInfo.#ctor">
            <summary>
            Constructor - Creates an empty AccountListInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MembershipMergedSubscriberListInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new AccountListInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MembershipMergedSubscriberListInfo.GetData(CMS.SettingsProvider.QueryDataParameters,System.String,System.String,System.Int32,System.String,System.Boolean,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns the data according to the set of input parameters.
            </summary>
            <param name="parameters">Query parameters</param>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
            <param name="topN">Specifies number of returned records</param>        
            <param name="columns">Data columns to return</param>
            <param name="binaryData">If true, binary data are returned in the result (not applied)</param>
            <param name="offset">Index of first record to get</param>
            <param name="maxRecords">Maximum number of records to get. If maxRecords is zero or less, all records are returned (no paging is used)</param>
            <param name="totalRecords">Returns total number of available records</param>       
        </member>
        <member name="P:CMS.OnlineMarketing.MembershipMergedSubscriberListInfo.ColumnNames">
            <summary>
            Gets the list of column names
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.MembershipMergedUserListInfo">
            <summary>
            "Virtual" object for loading contact-user relation data (for merged contact).
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MembershipMergedUserListInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MembershipMergedUserListInfo.#ctor">
            <summary>
            Constructor - Creates an empty MembershipMergedUserListInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MembershipMergedUserListInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new MembershipMergedUserListInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MembershipMergedUserListInfo.GetData(CMS.SettingsProvider.QueryDataParameters,System.String,System.String,System.Int32,System.String,System.Boolean,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns the data according to the set of input parameters.
            </summary>
            <param name="parameters">Query parameters</param>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
            <param name="topN">Specifies number of returned records</param>        
            <param name="columns">Data columns to return</param>
            <param name="binaryData">If true, binary data are returned in the result (not applied)</param>
            <param name="offset">Index of first record to get</param>
            <param name="maxRecords">Maximum number of records to get. If maxRecords is zero or less, all records are returned (no paging is used)</param>
            <param name="totalRecords">Returns total number of available records</param>       
        </member>
        <member name="P:CMS.OnlineMarketing.MembershipMergedUserListInfo.ColumnNames">
            <summary>
            Gets the list of column names
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.MembershipSubscriberListInfo">
            <summary>
            "Virtual" object for loading contact-subscriber relation data.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MembershipSubscriberListInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MembershipSubscriberListInfo.#ctor">
            <summary>
            Constructor - Creates an empty MembershipSubscriberListInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MembershipSubscriberListInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new MembershipSubscriberListInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MembershipSubscriberListInfo.GetData(CMS.SettingsProvider.QueryDataParameters,System.String,System.String,System.Int32,System.String,System.Boolean,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns the data according to the set of input parameters.
            </summary>
            <param name="parameters">Query parameters</param>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
            <param name="topN">Specifies number of returned records</param>        
            <param name="columns">Data columns to return</param>
            <param name="binaryData">If true, binary data are returned in the result (not applied)</param>
            <param name="offset">Index of first record to get</param>
            <param name="maxRecords">Maximum number of records to get. If maxRecords is zero or less, all records are returned (no paging is used)</param>
            <param name="totalRecords">Returns total number of available records</param>       
        </member>
        <member name="P:CMS.OnlineMarketing.MembershipSubscriberListInfo.ColumnNames">
            <summary>
            Gets the list of column names
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.MembershipCustomerListInfo">
            <summary>
            "Virtual" object for loading contact-customer relation data.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MembershipCustomerListInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MembershipCustomerListInfo.#ctor">
            <summary>
            Constructor - Creates an empty MembershipCustomerListInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MembershipCustomerListInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new MembershipCustomerListInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MembershipCustomerListInfo.GetData(CMS.SettingsProvider.QueryDataParameters,System.String,System.String,System.Int32,System.String,System.Boolean,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns the data according to the set of input parameters.
            </summary>
            <param name="parameters">Query parameters</param>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
            <param name="topN">Specifies number of returned records</param>        
            <param name="columns">Data columns to return</param>
            <param name="binaryData">If true, binary data are returned in the result (not applied)</param>
            <param name="offset">Index of first record to get</param>
            <param name="maxRecords">Maximum number of records to get. If maxRecords is zero or less, all records are returned (no paging is used)</param>
            <param name="totalRecords">Returns total number of available records</param>       
        </member>
        <member name="P:CMS.OnlineMarketing.MembershipCustomerListInfo.ColumnNames">
            <summary>
            Gets the list of column names
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.MembershipUserListInfo">
            <summary>
            "Virtual" object for loading contact-user relation data.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MembershipUserListInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MembershipUserListInfo.#ctor">
            <summary>
            Constructor - Creates an empty MembershipUserListInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MembershipUserListInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new MembershipUserListInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MembershipUserListInfo.GetData(CMS.SettingsProvider.QueryDataParameters,System.String,System.String,System.Int32,System.String,System.Boolean,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns the data according to the set of input parameters.
            </summary>
            <param name="parameters">Query parameters</param>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
            <param name="topN">Specifies number of returned records</param>        
            <param name="columns">Data columns to return</param>
            <param name="binaryData">If true, binary data are returned in the result (not applied)</param>
            <param name="offset">Index of first record to get</param>
            <param name="maxRecords">Maximum number of records to get. If maxRecords is zero or less, all records are returned (no paging is used)</param>
            <param name="totalRecords">Returns total number of available records</param>       
        </member>
        <member name="P:CMS.OnlineMarketing.MembershipUserListInfo.ColumnNames">
            <summary>
            Gets the list of column names
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.MemberTypeEnum">
            <summary>
            Type of membership relation.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MemberTypeEnum.CmsUser">
            <summary>
            User
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MemberTypeEnum.EcommerceCustomer">
            <summary>
            Customer
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MemberTypeEnum.NewsletterSubscriber">
            <summary>
            Newsletter subscriber
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.RuleActivityInfo">
            <summary>
            Represents activity rule definition.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.RuleItem">
            <summary>
            RuleItem class.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleItem.Clone">
            <summary>
            Clones current object and returns copy of it.
            </summary>
            <returns>Returns clone of either RuleAttributeInfo or RuleActivityInfo depending on current object</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleItem.GetXmlNode(System.Xml.XmlDocument)">
            <summary>
            Returns XML representation of current object.
            </summary>
            <param name="doc">XML document with other items</param>
            <returns>Returns XmlNode</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleActivityInfo.ToString">
            <summary>
            Returns activity type name.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleActivityInfo.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleActivityInfo.#ctor(System.Xml.XmlNode)">
            <summary>
            Constructor, initializes the activity rule info instance from the given XML node.
            </summary>
            <param name="ruleNode">XML node with the rule data</param>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleActivityInfo.Clone">
            <summary>
            Clones the object.
            </summary>
            <returns>Returns RuleAttributeInfo</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleActivityInfo.GetXmlNode(System.Xml.XmlDocument)">
            <summary>
            Returns the XML node representing the RuleActivityInfo object.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.RuleActivityInfo.ActivityName">
            <summary>
            Activity type name.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.RuleActivityInfo.Fields">
            <summary>
            Returns the list of activity fields' definitions.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.RuleActivityInfo.RuleActivityField">
            <summary>
            Represents field definition of an activity rule.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleActivityInfo.RuleActivityField.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleActivityInfo.RuleActivityField.#ctor(System.String,System.String)">
            <summary>
            Constructor, initializes the activity field info instance from given properties.
            </summary>
            <param name="name">Field name</param>
            <param name="value">Field value</param>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleActivityInfo.RuleActivityField.#ctor(System.Xml.XmlNode)">
            <summary>
            Constructor, initializes the activity field info instance from the given XML node.
            </summary>
            <param name="fieldNode">XML node with the field data</param>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleActivityInfo.RuleActivityField.ToString">
            <summary>
            Returns activity field name.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleActivityInfo.RuleActivityField.Clone">
            <summary>
            Clones the object.
            </summary>
            <returns>Returns RuleActivityField</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleActivityInfo.RuleActivityField.GetXmlNode(System.Xml.XmlDocument)">
            <summary>
            Returns the XML node representing the RuleActivityField object.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.RuleActivityInfo.RuleActivityField.Name">
            <summary>
            Activity field name.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.RuleActivityInfo.RuleActivityField.Value">
            <summary>
            Activity field value.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.RuleActivityInfo.RuleActivityField.Parameters">
            <summary>
            Parameters pairs (hastable).
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.RuleAttributeInfo">
            <summary>
            Represents attribute rule definition.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleAttributeInfo.ToString">
            <summary>
            Returns attribute name.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleAttributeInfo.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleAttributeInfo.#ctor(System.Xml.XmlNode)">
            <summary>
            Constructor, initializes the attribute rule info instance from the given XML node.
            </summary>
            <param name="ruleNode">XML node with the rule data</param>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleAttributeInfo.Clone">
            <summary>
            Clones the object.
            </summary>
            <returns>Returns RuleAttributeInfo</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleAttributeInfo.GetXmlNode(System.Xml.XmlDocument)">
            <summary>
            Returns the XML node representing the RuleAttributeInfo object.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.RuleAttributeInfo.Name">
            <summary>
            Attribute name.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.RuleAttributeInfo.Value">
            <summary>
            Attribute value.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.RuleAttributeInfo.Parameters">
            <summary>
            Parameters pairs (hastable).
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.RuleCondition">
            <summary>
            Ensures management of XML file that represents the rule condition.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.RuleCondition.xml">
            <summary>
            XML document representing RuleCondition.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.RuleCondition.mItemsList">
            <summary>
            Items array list.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleCondition.#ctor(System.String)">
            <summary>
            Constructor, creates the rule condition structure and loads speficied rule definition.
            </summary>
            <param name="ruleCondition">XML definition of the rule condition</param>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleCondition.GetXmlDefinition">
            <summary>
            Returns rule condition definition in xml.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleCondition.Clone">
            <summary>
            Clones the object.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.RuleCondition.ItemsList">
            <summary>
            Returns the list of all RuleAttributeInfos or RuleActivityInfos.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.RuleCondition.WhereCondition">
            <summary>
            Gets or sets where condition of the rule.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.RuleHelper">
            <summary>
            Class providing rule helper methods.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.RuleHelper.attLock">
            <summary>
            Table lock for attRuleInfos.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.RuleHelper.actLock">
            <summary>
            Table lock for actRuleInfos.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.RuleHelper.attRuleInfos">
            <summary>
            Cached RuleInfo objects grouped by attribute name.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.RuleHelper.actRuleInfos">
            <summary>
            Cached RuleInfo objects grouped by activity name.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleHelper.GetConditionFromData(CMS.SettingsProvider.IDataContainer,System.String,CMS.OnlineMarketing.RuleTypeEnum,System.String)">
            <summary>
            Returns rule condition in XML format based on specific data and rule type.
            </summary>
            <param name="row">Data row container with rule information</param>
            <param name="whereCondition">Where condition</param>
            <param name="ruleType">Rule type</param>
            <param name="activityType">Activity type name in case the rule type is activity</param>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleHelper.GetDataFromCondition(CMS.OnlineMarketing.RuleInfo,System.Data.DataTable,System.String@)">
            <summary>
            Returns datarow container initialized with data from rule conditin if the table definition contains column named as rule item name.
            If there is no column named as rule item name then empty datarow container is returned.
            </summary>
            <param name="rule">RuleInfo object</param>
            <param name="table">Table definition</param>
            <param name="activityTypeName">Activity type name is returned via this parameter if it is activity rule</param>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleHelper.GetRuleInfos(System.String,CMS.OnlineMarketing.RuleTypeEnum,System.Int32)">
            <summary>
            Returns RuleInfo objects based on item name (attribute or activity name) and site ID.
            </summary>
            <param name="itemName">Item name</param>
            <param name="ruleType">Item type - attribute or activity</param>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleHelper.LoadRuleInfosByItemName(System.String,CMS.OnlineMarketing.RuleTypeEnum,System.Int32)">
            <summary>
            Returns RuleInfo objects based on item name (attribute or activity name).
            </summary>
            <param name="itemName">Item name</param>
            <param name="ruleType">Item type - attribute or activity</param>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleHelper.Clear(System.Boolean)">
            <summary>
            Clear dictionaries with RuleInfo objects.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleHelper.GetValue(CMS.SettingsProvider.IDataContainer,System.String)">
            <summary>
            Returns value in DB culture (en-us).
            </summary>
            <param name="row">Data source</param>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleHelper.SetValue(CMS.SettingsProvider.DataRowContainer,System.String,System.Object)">
            <summary>
            Sets value (in en-us format) into data container in current culture format.
            </summary>
            <param name="row">Data container</param>
            <param name="columnName">Column name</param>
            <param name="value">Value</param>
        </member>
        <member name="T:CMS.OnlineMarketing.RuleInfo">
            <summary>
            RuleInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.RuleInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleInfo.ClearWhereCondition">
            <summary>
            Clears RuleWhereCondition property - it is used in SetRuleInfo method reset the property.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleInfo.#ctor">
            <summary>
            Constructor - Creates an empty RuleInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new RuleInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleInfo.#ctor(CMS.OnlineMarketing.RuleInfo,System.Boolean)">
            <summary>
            Constructor - Creates a new RuleInfo object from the given DataClass.
            </summary>
            <param name="ruleObj">Source RuleInfo object</param>
            <param name="keepSourceData">If true, source data are kept in the object</param>
        </member>
        <member name="P:CMS.OnlineMarketing.RuleInfo.RuleValue">
            <summary>
            Rule value.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.RuleInfo.RuleGUID">
            <summary>
            Unique identifier.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.RuleInfo.RuleDisplayName">
            <summary>
            Rule display name.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.RuleInfo.RuleValidity">
            <summary>
            Specifies time periods - minute, hour, day, week, month, year.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.RuleInfo.RuleLastModified">
            <summary>
            Last modification time.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.RuleInfo.RuleValidFor">
            <summary>
            Number of time periods the rule is valid for.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.RuleInfo.RuleName">
            <summary>
            Rule code name.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.RuleInfo.RuleScoreID">
            <summary>
            FK to Score (OM_ContactGroup table).
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.RuleInfo.RuleID">
            <summary>
            RuleID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.RuleInfo.RuleType">
            <summary>
            Indicates rule type - activity type or attribut.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.RuleInfo.RuleCondition">
            <summary>
            Rule condition in XML format.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.RuleInfo.RuleIsRecurring">
            <summary>
            Indicates if the rule is recurring.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.RuleInfo.RuleMaxPoints">
            <summary>
            Limits number of recurrences of the rule.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.RuleInfo.RuleParameter">
            <summary>
            Name of the rule type - activity type name or attribut name.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.RuleInfo.RuleValidUntil">
            <summary>
            Specific day until the rule is valid.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.RuleInfo.RuleWhereCondition">
            <summary>
            Gets string representation of the where condition.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.RuleInfo.RuleSiteID">
            <summary>
            FK to Site (CMS_Site table).
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.RuleInfoProvider">
            <summary>
            Class providing RuleInfo management.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleInfoProvider.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleInfoProvider.GetRules(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all rules matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleInfoProvider.GetRules(System.String,System.String)">
            <summary>
            Returns dataset of all rules matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleInfoProvider.GetRuleInfo(System.Int32)">
            <summary>
            Returns rule with specified ID.
            </summary>
            <param name="ruleId">Rule ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleInfoProvider.GetRuleInfo(System.String,System.Int32)">
            <summary>
            Returns rule with specified name.
            </summary>
            <param name="ruleName">Rule name</param>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleInfoProvider.GetRuleInfo(System.Guid)">
            <summary>
            Returns rule with specified GUID.
            </summary>
            <param name="ruleGuid">Rule GUID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleInfoProvider.SetRuleInfo(CMS.OnlineMarketing.RuleInfo)">
            <summary>
            Sets (updates or inserts) specified rule.
            </summary>
            <param name="ruleObj">Rule to be set</param>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleInfoProvider.DeleteRuleInfo(CMS.OnlineMarketing.RuleInfo)">
            <summary>
            Deletes specified rule.
            </summary>
            <param name="ruleObj">Rule to be deleted</param>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleInfoProvider.DeleteRuleInfo(System.Int32)">
            <summary>
            Deletes rule with specified ID.
            </summary>
            <param name="ruleId">Rule ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleInfoProvider.Clear(System.Boolean)">
            <summary>
            Clears hashtables.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleInfoProvider.GetRulesInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all rules matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleInfoProvider.GetRuleInfoInternal(System.Int32)">
            <summary>
            Returns rule with specified ID.
            </summary>
            <param name="ruleId">Rule ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleInfoProvider.GetRuleInfoInternal(System.String,System.Int32)">
            <summary>
            Returns rule with specified name.
            </summary>
            <param name="ruleName">Rule name</param>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleInfoProvider.GetRuleInfoInternal(System.Guid)">
            <summary>
            Returns rule with specified GUID.
            </summary>
            <param name="ruleGuid">Rule GUID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleInfoProvider.SetRuleInfoInternal(CMS.OnlineMarketing.RuleInfo)">
            <summary>
            Sets (updates or inserts) specified rule.
            </summary>
            <param name="ruleObj">Rule to be set</param>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleInfoProvider.DeleteRuleInfoInternal(CMS.OnlineMarketing.RuleInfo)">
            <summary>
            Deletes specified rule.
            </summary>
            <param name="ruleObj">Rule to be deleted</param>
        </member>
        <member name="T:CMS.OnlineMarketing.RuleTypeEnum">
            <summary>
            Rule type.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.RuleTypeEnum.Activity">
            <summary>
            Activity type.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.RuleTypeEnum.Attribute">
            <summary>
            Attribute type.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ScoreContactRuleListInfo">
            <summary>
            Support class for view of contacts in scoring
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ScoreContactRuleListInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreContactRuleListInfo.#ctor">
            <summary>
            Constructor - Creates an empty ScoreContactRuleListInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreContactRuleListInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new ScoreContactRuleListInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreContactRuleListInfo.GetData(CMS.SettingsProvider.QueryDataParameters,System.String,System.String,System.Int32,System.String,System.Boolean,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns the data according to the set of input parameters.
            </summary>
            <param name="parameters">Query parameters</param>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
            <param name="topN">Specifies number of returned records</param>        
            <param name="columns">Data columns to return</param>
            <param name="binaryData">If true, binary data are returned in the result (not applied)</param>
            <param name="offset">Index of first record to get</param>
            <param name="maxRecords">Maximum number of records to get. If maxRecords is zero or less, all records are returned (no paging is used)</param>
            <param name="totalRecords">Returns total number of available records</param>       
        </member>
        <member name="T:CMS.OnlineMarketing.ScoreInfo">
            <summary>
            ScoreInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ScoreInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreInfo.#ctor">
            <summary>
            Constructor - Creates an empty ScoreInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new ScoreInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="P:CMS.OnlineMarketing.ScoreInfo.ScoreDisplayName">
            <summary>
            Gets or sets the display name of the score.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ScoreInfo.ScoreDescription">
            <summary>
            Gets or sets the description of the score.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ScoreInfo.ScoreID">
            <summary>
            Gets or sets the ID of the score.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ScoreInfo.ScoreSiteID">
            <summary>
            Gets or sets the site ID for this score.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ScoreInfo.ScoreName">
            <summary>
            Gets or sets the name of the score.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ScoreInfo.ScoreEnabled">
            <summary>
            Gets or sets if the score is enabled.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ScoreInfo.ScoreEmailAtScore">
            <summary>
            Gets or sets score value at which notification e-mail should be sent.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ScoreInfo.ScoreNotificationEmail">
            <summary>
            Gets or sets notification e-mail.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ScoreInfo.ScoreLastModified">
            <summary>
            Gets or sets the date and time when the score was last modified.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ScoreInfo.ScoreGUID">
            <summary>
            Gets or sets the score's unique identifier.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ScoreInfo.ScoreScheduledTaskID">
            <summary>
            Gets or sets the ID of scheduled task for recalculation.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ScoreInfo.ScoreStatus">
            <summary>
            Gets or sets status of the score.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ScoreInfoProvider">
            <summary>
            Class providing ScoreInfo management.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreInfoProvider.#ctor">
            <summary>
            Constructor using ID and codename Hashtables.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreInfoProvider.GetScores(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all scores matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreInfoProvider.GetScores(System.String,System.String)">
            <summary>
            Returns dataset of all scores matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreInfoProvider.GetScoreInfo(System.Int32)">
            <summary>
            Returns score with specified ID.
            </summary>
            <param name="scoreId">Score ID</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreInfoProvider.GetScoreInfo(System.String,System.String)">
            <summary>
            Returns score with specified name.
            </summary>
            <param name="scoreName">Score name</param>                
            <param name="siteName">Site name</param>                
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreInfoProvider.SetScoreInfo(CMS.OnlineMarketing.ScoreInfo)">
            <summary>
            Sets (updates or inserts) specified score.
            </summary>
            <param name="scoreObj">Score to be set</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreInfoProvider.DeleteScoreInfo(CMS.OnlineMarketing.ScoreInfo)">
            <summary>
            Deletes specified score.
            </summary>
            <param name="scoreObj">Score to be deleted</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreInfoProvider.DeleteScoreInfo(System.Int32)">
            <summary>
            Deletes score with specified ID.
            </summary>
            <param name="scoreId">Score ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreInfoProvider.GetScores(System.String,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Returns dataset of all scores for specified site matching the specified parameters.
            </summary>       
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
            <param name="siteId">Site ID</param>        		
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreInfoProvider.GetScores(System.Int32)">
            <summary>
            Returns dataset of all scores for specified site.
            </summary>
            <param name="siteId">Site ID</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreInfoProvider.DeleteAllScores(System.String)">
            <summary>
            Deletes scores specified by where condition.
            </summary>
            <param name="where">Where condition</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreInfoProvider.RecalculateScores(System.String,CMS.OnlineMarketing.RuleTypeEnum,System.Nullable{System.Int32},System.Int32)">
            <summary>
            Recalculate scores for the given item name and rule type (and contact if contact ID is specified).
            </summary>
            <param name="itemName">Item name (attribute name, activity name)</param>
            <param name="ruleType">Rule type</param>
            <param name="contactId">ContactID (optional)</param>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreInfoProvider.DeleteScoreContactRule(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Deletes score-contact-rule relation.
            </summary>
            <param name="scoreId">Score ID</param>
            <param name="contactId">Contact ID</param>
            <param name="ruleId">Rule ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreInfoProvider.GetContactsWithMinimumScore(System.Int32,System.Int32)">
            <summary>
            Returns IDs of contacts who gained more than minumum score value in specific score.
            </summary>
            <param name="scoreId">Score ID</param>
            <param name="minScoreValue">Minimum score value</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreInfoProvider.CheckScoringLimits(CMS.OnlineMarketing.ContactInfo,System.Data.DataSet)">
            <summary>
            Checks scores where specified contact gained enough points to send notification e-mail.
            </summary>
            <param name="contact">Contact info object</param>
            <param name="overLimitScores">Dataset with score IDs where the contact reached limit before recalculation</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreInfoProvider.GetScoresWhereContactExceededLimit(System.Int32)">
            <summary>
            Returns IDs of scores where specified contact exceeded score limit. The second column contains total score of the contact. Used to send notification e-mails.
            </summary>
            <param name="contactId">Contact ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreInfoProvider.GetScoresInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all scores matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreInfoProvider.GetScoreInfoInternal(System.Int32)">
            <summary>
            Returns score with specified ID.
            </summary>
            <param name="scoreId">Score ID</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreInfoProvider.GetScoreInfoInternal(System.String,System.String)">
            <summary>
            Returns score with specified name.
            </summary>
            <param name="scoreName">Score name</param>                
            <param name="siteName">Site name</param>         
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreInfoProvider.SetScoreInfoInternal(CMS.OnlineMarketing.ScoreInfo)">
            <summary>
            Sets (updates or inserts) specified score.
            </summary>
            <param name="scoreObj">Score to be set</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreInfoProvider.DeleteScoreInfoInternal(CMS.OnlineMarketing.ScoreInfo)">
            <summary>
            Deletes specified score.
            </summary>
            <param name="scoreObj">Score to be deleted</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreInfoProvider.GetScoresInternal(System.String,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Returns dataset of all scores for specified site matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
            <param name="siteId">Site ID</param> 
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreInfoProvider.DeleteAllScoresInternal(System.String)">
            <summary>
            Deletes scores specified by where condition.
            </summary>
            <param name="where">Where condition</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreInfoProvider.GetContactsWithMinimumScoreInternal(System.Int32,System.Int32)">
            <summary>
            Returns IDs of contacts who gained more than minumum score value in specific score. Used to send notification e-mails.
            </summary>
            <param name="scoreId">Score ID</param>
            <param name="minScoreValue">Minimum score value</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreInfoProvider.CheckScoringLimitsInternal(CMS.OnlineMarketing.ContactInfo,System.Data.DataSet)">
            <summary>
            Checks scores where specified contact gained enough points to send notification e-mail.
            </summary>
            <param name="contact">Contact info object</param>
            <param name="overLimitScores">Dataset with score IDs where the contact reached limit before recalculation; optional</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreInfoProvider.GetScoresWhereContactExceededLimitInternal(System.Int32)">
            <summary>
            Returns IDs of scores where specified contact exceeded score limit. The second column contains total score of the contact. Used to send notification e-mails.
            </summary>
            <param name="contactId">Contact ID</param>
        </member>
        <member name="T:CMS.OnlineMarketing.ScoreStatusEnum">
            <summary>
            Types of score status used by ScoreInfo object.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ScoreStatusEnum.Unspecified">
            <summary>
            Unspecified
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ScoreStatusEnum.Ready">
            <summary>
            Ready
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ScoreStatusEnum.Recalculating">
            <summary>
            Recalculating
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ScoreStatusEnum.New">
            <summary>
            New, recalculation required
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ContactGroupEvaluator">
            <summary>
            Task for evaluation of dynamic contact group. Runs in separate thread.
            Contacts' (site or all for global contact group) membership to a contact group depends on meeting the dynamic condition.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContactGroupEvaluator.mWindowsIdentity">
            <summary>
            Windows identity.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupEvaluator.Execute(CMS.Scheduler.TaskInfo)">
            <summary>
             Evaluates the membership of contacts to given contact group.
            </summary>
            <param name="task">Task to process</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupEvaluator.Run">
            <summary>
            Sends all e-mails one by one in one thread.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactGroupEvaluator.ContactGroupID">
            <summary>
            Contact group ID. Optional, should be set if this class is used outside the scheduler.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ScoreEvaluator">
            <summary>
            Task for score recalculation. Runs in separate thread.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ScoreEvaluator.mWindowsIdentity">
            <summary>
            Windows identity.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreEvaluator.Execute(CMS.Scheduler.TaskInfo)">
            <summary>
             Evaluates the membership of contacts to given contact group.
            </summary>
            <param name="task">Task to process</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreEvaluator.Run">
            <summary>
            Score recalculation
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ScoreEvaluator.ScoreID">
            <summary>
            Score ID. Optional, should be set if this class is used outside the scheduler.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ContentPersonalizationVariantInfo">
            <summary>
            ContentPersonalizationVariant data container class.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContentPersonalizationVariantInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContentPersonalizationVariantInfo.TYPEINFO_DOCUMENT">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfo.CheckUniqueValues(System.String[])">
            <summary>
            Checks if a record with the same column values already exists in the database. Returns true if the set of values is unique.
            </summary>
            <param name="columns">Columns to check</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfo.#ctor">
            <summary>
            Constructor - Creates an empty ContentPersonalizationVariant object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new ContentPersonalizationVariant object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data.</param>
        </member>
        <member name="P:CMS.OnlineMarketing.ContentPersonalizationVariantInfo.VariantInstanceGUID">
            <summary>
            Personalization variant instance GUID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContentPersonalizationVariantInfo.VariantPosition">
            <summary>
            Personalization variant position.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContentPersonalizationVariantInfo.VariantDisplayCondition">
            <summary>
            Personalization variant display condition.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContentPersonalizationVariantInfo.VariantWebParts">
            <summary>
            Personalization variant web parts.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContentPersonalizationVariantInfo.VariantLastModified">
            <summary>
            Personalization variant last modified.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContentPersonalizationVariantInfo.VariantName">
            <summary>
            Personalization variant code name.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContentPersonalizationVariantInfo.VariantID">
            <summary>
            Personalization variant id.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContentPersonalizationVariantInfo.VariantDescription">
            <summary>
            Personalization variant description.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContentPersonalizationVariantInfo.VariantDisplayName">
            <summary>
            Personalization variant display name.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContentPersonalizationVariantInfo.VariantEnabled">
            <summary>
            Personalization variant enabled.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContentPersonalizationVariantInfo.VariantDocumentID">
            <summary>
            Personalization variant document id.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContentPersonalizationVariantInfo.VariantPageTemplateID">
            <summary>
            Personalization variant page template id.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContentPersonalizationVariantInfo.VariantZoneID">
            <summary>
            Personalization variant zone id.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContentPersonalizationVariantInfo.VariantGUID">
            <summary>
            Personalization variant GUID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContentPersonalizationVariantInfo.WebPartInstance">
            <summary>
            Variant web part/widget instance containing data built from this info object.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContentPersonalizationVariantInfo.WebPartZoneInstance">
            <summary>
            Variant zone instance containing data built from this info object.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContentPersonalizationVariantInfo.TypeInfo">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider">
            <summary>
            Class providing ContentPersonalizationVariant management.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.GetContentPersonalizationVariants(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all content personalization variants matching the specified parameters.
            </summary>
            <param name="where">Where condition.</param>
            <param name="orderBy">Order by expression.</param>
            <param name="topN">Number of records to be selected.</param>        
            <param name="columns">Columns to be selected.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.GetContentPersonalizationVariants(System.String,System.String)">
            <summary>
            Returns dataset of all content personalization variants matching the specified parameters.
            </summary>
            <param name="where">Where condition.</param>
            <param name="orderBy">Order by expression.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.GetContentPersonalizationVariants(System.Int32)">
            <summary>
            Gets all the Content personalization variants for the specified template.
            </summary>
            <param name="pageTemplateId">The page template id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.GetContentPersonalizationVariant(System.Int32)">
            <summary>
            Returns content personalization variant with specified ID.
            </summary>
            <param name="variantId">Content personalization variant ID.</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.GetContentPersonalizationVariant(System.String)">
            <summary>
            Returns content personalization variant with specified name.
            </summary>
            <param name="variantName">Content personalization variant name.</param>                
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.SetContentPersonalizationVariant(CMS.OnlineMarketing.ContentPersonalizationVariantInfo)">
            <summary>
            Sets (updates or inserts) specified content personalization variant.
            </summary>
            <param name="variantObj">Content personalization variant to be set.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.DeleteContentPersonalizationVariant(CMS.OnlineMarketing.ContentPersonalizationVariantInfo)">
            <summary>
            Deletes specified content personalization variant.
            </summary>
            <param name="variantObj">Content personalization variant to be deleted.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.DeleteContentPersonalizationVariant(System.Int32)">
            <summary>
            Deletes content personalization variant with specified ID.
            </summary>
            <param name="variantId">Content personalization variant ID.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.Clear(System.Boolean)">
            <summary>
            Clears hashtables.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.CombineWithPersonalization(CMS.PortalEngine.PageInfo,CMS.PortalEngine.PageTemplateInstance,CMS.PortalEngine.ViewModeEnum)">
            <summary>
            Combines the specified page template instance with Content personalization variants.
            </summary>
            <param name="pi">The page info</param>
            <param name="instance">The page template instance</param>
            <param name="viewMode">The current view mode</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.ContentPersonalizationEnabled(System.String)">
            <summary>
            Indicates whether the content personalization is enabled.
            </summary>
            <param name="siteName">Name of the site</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.GetContentPersonalizationVariants(System.Int32,System.String,System.Guid,System.Int32)">
            <summary>
            Gets the Content personalization variants for a web part/zone/widget.
            </summary>
            <param name="pageTemplateId">The page template id</param>
            <param name="zoneId">The zone id</param>
            <param name="instanceGuid">The instance GUID</param>
            <param name="documentId">The document id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.SaveVariant(System.Int32,System.String,System.String,System.String,System.Boolean,System.String,System.String,System.Guid,System.Int32,System.Int32,System.Xml.XmlNode)">
            <summary>
            Saves the variant.
            </summary>
            <param name="variantId">The variant id</param>
            <param name="variantName">Name of the variant</param>
            <param name="variantDisplayName">Display name of the variant</param>
            <param name="variantDescription">The variant description</param>
            <param name="variantEnabled">Indicates whether the variant is enabled</param>
            <param name="variantDisplayCondition">The variant display condition</param>
            <param name="zoneId">The zone id</param>
            <param name="instanceGuid">The instance GUID</param>
            <param name="pageTemplateId">The page template id</param>
            <param name="documentId">The document id</param>
            <param name="xmlWebParts">Web parts xml</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.SaveVariantWebparts(System.Int32,System.Xml.XmlNode)">
            <summary>
            Saves the variant properties.
            </summary>
            <param name="variantId">The variant id</param>
            <param name="xmlWebParts">Web parts xml</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.UpdateWebPartVariants(System.Int32,System.String,System.Guid,System.String)">
            <summary>
            Updates the web part variants with a new zone id.
            </summary>
            <param name="pageTemplateId">The page template id</param>
            <param name="zoneId">The zone id.</param>
            <param name="instanceGuid">The instance GUID</param>
            <param name="newZoneId">The new zone id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.RemoveWebPartsVariants(System.Collections.ArrayList)">
            <summary>
            Removes the variants of the selected web parts.
            </summary>
            <param name="webParts">The web parts</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.DeleteWidgetVariants(System.String,System.Int32,System.Int32)">
            <summary>
            Deletes all variants of all widgets in the document.
            </summary>
            <param name="zoneId">The zone id</param>
            <param name="templateId">The template id</param>
            <param name="documentId">The document id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.MoveVariantUp(System.Int32)">
            <summary>
            Moves the variant up in the position sequence (up = smaller VariantPosition = soooner in the navigation)
            </summary>
            <param name="variantId">The variant id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.MoveVariantDown(System.Int32)">
            <summary>
            Moves the variant down in the position sequence (down = larger VariantPosition = later in the navigation)
            </summary>
            <param name="variantId">The variant id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.GetContentPersonalizationVariantId(System.Int32,System.String)">
            <summary>
            Returns the Content personalization variant id for the specified template and code name.
            </summary>
            <param name="pageTemplateId">The page template id</param>
            <param name="variantName">The variant code name</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.LoadContentPersonalizationVariants(System.Object,System.Boolean)">
            <summary>
            Loads the Content personalization variants for the specified instance (web part/zone/widget).
            </summary>
            <param name="instance">The instance</param>
            <param name="isZone">Indicates if the parameter instance object is a zone</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.CloneTemplateVariants(System.Int32,System.Int32)">
            <summary>
            Clones all the Content personalization variants of the specific page template.
            </summary>
            <param name="originalTemplateId">The original template id</param>
            <param name="newTemplateId">The new template id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.GetContentPersonalizationVariantsInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all content personalization variants matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.GetContentPersonalizationVariantInternal(System.Int32)">
            <summary>
            Returns content personalization variant with specified ID.
            </summary>
            <param name="variantId">Content personalization variant ID</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.GetContentPersonalizationVariantInternal(System.String)">
            <summary>
            Returns content personalization variant with specified name.
            </summary>
            <param name="variantName">Content personalization variant name.</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.SetContentPersonalizationVariantInternal(CMS.OnlineMarketing.ContentPersonalizationVariantInfo)">
            <summary>
            Sets (updates or inserts) specified content personalization variant.
            </summary>
            <param name="variantObj">Content personalization variant to be set.</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.DeleteContentPersonalizationVariantInternal(CMS.OnlineMarketing.ContentPersonalizationVariantInfo)">
            <summary>
            Deletes specified content personalization variant.
            </summary>
            <param name="variantObj">Content personalization variant to be deleted.</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.CombineWithPersonalizationInternal(CMS.PortalEngine.PageInfo,CMS.PortalEngine.PageTemplateInstance,CMS.PortalEngine.ViewModeEnum)">
            <summary>
            Combines the specified page template instance with content personalization variants.
            </summary>
            <param name="pi">The page info</param>
            <param name="instance">The page template instance</param>
            <param name="viewMode">The view mode</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.GetContentPersonalizationVariantsInternal(System.Int32)">
            <summary>
            Gets all the Content personalization variants for the specified template.
            </summary>
            <param name="pageTemplateId">The page template id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.GetContentPersonalizationVariantsInternal(System.Int32,System.String,System.Guid,System.Int32)">
            <summary>
            Gets the Content personalization variants for a web part/zone/widget.
            </summary>
            <param name="pageTemplateId">The page template id</param>
            <param name="zoneId">The zone id</param>
            <param name="instanceGuid">The instance GUID</param>
            <param name="documentId">The document id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.SaveVariantInternal(System.Int32,System.String,System.String,System.String,System.Boolean,System.String,System.String,System.Guid,System.Int32,System.Int32,System.Xml.XmlNode)">
            <summary>
            Saves the variant and generates new combinations if the variant is new.
            </summary>
            <param name="variantId">The variant id</param>
            <param name="variantName">Name of the variant</param>
            <param name="variantDisplayName">Display name of the variant</param>
            <param name="variantDescription">The variant description</param>
            <param name="variantEnabled">Indicates whether the variant is enabled</param>
            <param name="variantDisplayCondition">The variant display condition</param>
            <param name="zoneId">The zone id</param>
            <param name="instanceGuid">The instance GUID</param>
            <param name="pageTemplateId">The page template id</param>
            <param name="documentId">The document id</param>
            <param name="xmlWebParts">Web parts xml</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.SaveVariantWebpartsInternal(System.Int32,System.Xml.XmlNode)">
            <summary>
            Saves the variant properties.
            </summary>
            <param name="variantId">The variant id.</param>
            <param name="xmlWebParts">Web parts xml</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.UpdateWebPartVariantsInternal(System.Int32,System.String,System.Guid,System.String)">
            <summary>
            Updates the web part variants with a new zone id.
            </summary>
            <param name="pageTemplateId">The page template id</param>
            <param name="zoneId">The zone id.</param>
            <param name="instanceGuid">The instance GUID</param>
            <param name="newZoneId">The new zone id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.RemoveWebPartsVariantsInternal(System.Collections.ArrayList)">
            <summary>
            Removes the variants of the selected web parts.
            </summary>
            <param name="webParts">The web parts</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.DeleteWidgetVariantsInternal(System.String,System.Int32,System.Int32)">
            <summary>
            Deletes all variants of all widgets in the document.
            </summary>
            <param name="zoneId">The zone id</param>
            <param name="pageTemplateId">The page template id</param>
            <param name="documentId">The document id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.InitVariantOrder(System.Int32,System.String,System.Guid)">
            <summary>
            Initialize variant position order.
            </summary>
            <param name="pageTemplateId">The page template id</param>
            <param name="zoneId">The zone id</param>
            <param name="instanceGuid">The instance GUID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.MoveVariantUpInternal(System.Int32)">
            <summary>
            Moves task up in the order sequence (up = smaller VariantPosition = soooner in the navigation)
            </summary>
            <param name="variantId">The variant id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.MoveVariantDownInternal(System.Int32)">
            <summary>
            Moves task down in the order sequence (down = larger VariantPosition = later in the navigation)
            </summary>
            <param name="variantId">The variant id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.GetMatchingZoneInstance(CMS.PortalEngine.WebPartZoneInstance,System.Int32,CMS.PortalEngine.ViewModeEnum,System.Collections.Hashtable)">
            <summary>
            Returns the zone instance variant which fulfil its display condition. If no variant found, return the original zone.
            </summary>
            <param name="originalZone">The original zone instance</param>
            <param name="templateId">The template id</param>
            <param name="viewMode">The view mode</param>
            <param name="chosenVariants">The hash table contaning chosen variants</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.GetMatchingWebPartInstance(CMS.PortalEngine.WebPartInstance,System.Int32,CMS.PortalEngine.ViewModeEnum,System.Collections.Hashtable)">
            <summary>
            Returns the web part instance variant which fulfil its display condition. If no variant found, return the original web part.
            </summary>
            <param name="originalWebPart">The original web part</param>
            <param name="templateId">The template id</param>
            <param name="viewMode">The view mode</param>
            <param name="chosenVariants">The hash table contaning chosen variants</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.GetContentPersonalizationVariantIdInternal(System.Int32,System.String)">
            <summary>
            Returns the Content personalization variant id for the specified template and code name.
            </summary>
            <param name="pageTemplateId">The page template id</param>
            <param name="variantName">The variant code name</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.LoadContentPersonalizationVariantsInternal(System.Object,System.Boolean)">
            <summary>
            Loads the Content personalization variants for the specified instance (web part/zone/widget).
            </summary>
            <param name="instance">The instance</param>
            <param name="isZone">Indicates if the parameter instance object is a zone</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.CloneTemplateVariantsInternal(System.Int32,System.Int32)">
            <summary>
            Clones all the Content personalization variants of the specific page template.
            </summary>
            <param name="originalTemplateId">The original template id</param>
            <param name="newTemplateId">The new template id</param>
        </member>
        <member name="T:CMS.OnlineMarketing.VariantTypeEnum">
            <summary>
            Variant type enumeration.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.VariantTypeEnum.Zone">
            <summary>
            Zone
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.VariantTypeEnum.WebPart">
            <summary>
            Web part
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.VariantTypeEnum.Widget">
            <summary>
            Widget
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.VariantTypeFunctions">
            <summary>
            Helper functions for webpart/zone/widget variant type enum.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.VariantTypeFunctions.GetVariantTypeEnum(System.String)">
            <summary>
            Returns VariantTypeEnum enum.
            </summary>
            <param name="variantType">The variant type</param>
        </member>
        <member name="M:CMS.OnlineMarketing.VariantTypeFunctions.GetVariantTypeString(CMS.OnlineMarketing.VariantTypeEnum)">
            <summary>
            Returns VariantType string.
            </summary>
            <param name="variantType">The variant type</param>
        </member>
        <member name="T:CMS.OnlineMarketing.OnlineMarketingContext">
            <summary>
            Contact context method and variables.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingContext.#ctor">
            <summary>
            Private constructor.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingContext.GetProperty(System.String)">
            <summary>
            Gets the context property.
            </summary>
            <param name="name">Property name</param>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingContext.SetProperty(System.String,System.Object)">
            <summary>
            Sets the context property.
            </summary>
            <param name="name">Property name</param>
            <param name="value">Property value</param>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingContext.GetCurrentContact">
            <summary>
            Returns current contact
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingContext.CheckPermissions(CMS.OnlineMarketing.VariantTypeEnum)">
            <summary>
            Check permissions for MVT or CP. 
            </summary>
            <param name="variantType">Type of editing object (widget, webpart, zone)</param>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingContext.GetCurrentContact(CMS.CMSHelper.CurrentUserInfo,System.Boolean)">
            <summary>
            Returns current contact
            </summary>
            <param name="currentUser">User info</param>
            <param name="isLogin">Indicates if current operation requesting CurrentContact is user login</param>
            <returns>Returns current contact</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingContext.UpdateContactInformation(System.String)">
            <summary>
            Updates IP and User Agent information for current contact.
            </summary>
            <param name="siteName">Current site name</param>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingContext.SetCurrentContact(CMS.OnlineMarketing.ContactInfo)">
            <summary>
            Stores contact in request items, session or cookies.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingContext.GetContactFromSession">
            <summary>
            Tries to get current contact from request items, session or from cookies.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingContext.GetUserContact(CMS.OnlineMarketing.ContactInfo,CMS.CMSHelper.CurrentUserInfo,System.Boolean)">
            <summary>
            Tries to find contact for current user.
            </summary>
            <param name="contactFromSession">Current contact from session or cookie.</param>
            <param name="currentUser">Current user.</param>
            <param name="isLogin">Indicates if current operation requesting contact is a login operation</param>
            <returns>Returns ContactInfo of contact assigned to given user</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingContext.AssingUserToContact(CMS.OnlineMarketing.ContactInfo,CMS.CMSHelper.CurrentUserInfo,System.Boolean)">
            <summary>
            Assignes provided contact to current user. If contact is anonymous then it fills in information from user 
            and changed anonymous contact to regular contact.
            </summary>
            <param name="contact">Contact to be assigned to current user</param>
            <param name="user">Current user</param>
            <param name="isLogin">Indicates if current operation requesting contact is a login operation</param>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingContext.RecognizeContact">
            <summary>
            Tries to determine contact from available information about visitor.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingContext.SelectContactForVisitor(System.Data.DataSet)">
            <summary>
            Returns single contact determined for current visitor by settings 'When a visitor has more Contacts, use'.
            </summary>
            <param name="foundContacts">DataSet with found contacts</param>
            <returns>ContactInfo of selected contact</returns>
        </member>
        <member name="P:CMS.OnlineMarketing.OnlineMarketingContext.ContextObject">
            <summary>
            Context object.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.OnlineMarketingContext.Properties">
            <summary>
            Properties available through the context.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.OnlineMarketingContext.CurrentContact">
            <summary>
            Current contact info        
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.OnlineMarketingContext.CurrentContactID">
            <summary>
            Current contact ID
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContactGroupAccountListInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupAccountListInfo.#ctor">
            <summary>
            Constructor - Creates an empty ContactGroupAccountListInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupAccountListInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new ContactGroupAccountListInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupAccountListInfo.GetData(CMS.SettingsProvider.QueryDataParameters,System.String,System.String,System.Int32,System.String,System.Boolean,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns the data according to the set of input parameters.
            </summary>
            <param name="parameters">Query parameters</param>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
            <param name="topN">Specifies number of returned records</param>        
            <param name="columns">Data columns to return</param>
            <param name="binaryData">If true, binary data are returned in the result (not applied)</param>
            <param name="offset">Index of first record to get</param>
            <param name="maxRecords">Maximum number of records to get. If maxRecords is zero or less, all records are returned (no paging is used)</param>
            <param name="totalRecords">Returns total number of available records</param>       
        </member>
        <member name="F:CMS.OnlineMarketing.ContactGroupContactListInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupContactListInfo.#ctor">
            <summary>
            Constructor - Creates an empty ContactGroupContactListInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupContactListInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new ContactGroupContactListInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupContactListInfo.GetData(CMS.SettingsProvider.QueryDataParameters,System.String,System.String,System.Int32,System.String,System.Boolean,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns the data according to the set of input parameters.
            </summary>
            <param name="parameters">Query parameters</param>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
            <param name="topN">Specifies number of returned records</param>        
            <param name="columns">Data columns to return</param>
            <param name="binaryData">If true, binary data are returned in the result (not applied)</param>
            <param name="offset">Index of first record to get</param>
            <param name="maxRecords">Maximum number of records to get. If maxRecords is zero or less, all records are returned (no paging is used)</param>
            <param name="totalRecords">Returns total number of available records</param>       
        </member>
        <member name="T:CMS.OnlineMarketing.ContactGroupMemberTypeEnum">
            <summary>
            Types of contact group members used by ContactGroupInfo object.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContactGroupMemberTypeEnum.Contact">
            <summary>
            Contact
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContactGroupMemberTypeEnum.Account">
            <summary>
            Account
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ContactAccountListInfo">
            <summary>
            Contact-Account relation table.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContactAccountListInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactAccountListInfo.#ctor">
            <summary>
            Constructor - Creates an empty ContactAccountListInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactAccountListInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new ContactAccountListInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactAccountListInfo.GetData(CMS.SettingsProvider.QueryDataParameters,System.String,System.String,System.Int32,System.String,System.Boolean,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns the data according to the set of input parameters.
            </summary>
            <param name="parameters">Query parameters</param>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
            <param name="topN">Specifies number of returned records</param>        
            <param name="columns">Data columns to return</param>
            <param name="binaryData">If true, binary data are returned in the result (not applied)</param>
            <param name="offset">Index of first record to get</param>
            <param name="maxRecords">Maximum number of records to get. If maxRecords is zero or less, all records are returned (no paging is used)</param>
            <param name="totalRecords">Returns total number of available records</param>       
        </member>
        <member name="P:CMS.OnlineMarketing.ContactAccountListInfo.ColumnNames">
            <summary>
            Columns of appropriate SQL view.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ContactMembershipListInfo">
            <summary>
            "Virtual" object for loading data from contact-membership view.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContactMembershipListInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactMembershipListInfo.#ctor">
            <summary>
            Constructor - Creates an empty AccountListInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactMembershipListInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new AccountListInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactMembershipListInfo.GetData(CMS.SettingsProvider.QueryDataParameters,System.String,System.String,System.Int32,System.String,System.Boolean,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns the data according to the set of input parameters.
            </summary>
            <param name="parameters">Query parameters</param>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
            <param name="topN">Specifies number of returned records</param>        
            <param name="columns">Data columns to return</param>
            <param name="binaryData">If true, binary data are returned in the result (not applied)</param>
            <param name="offset">Index of first record to get</param>
            <param name="maxRecords">Maximum number of records to get. If maxRecords is zero or less, all records are returned (no paging is used)</param>
            <param name="totalRecords">Returns total number of available records</param>       
        </member>
        <member name="P:CMS.OnlineMarketing.ContactMembershipListInfo.ColumnNames">
            <summary>
            Gets the list of column names
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.AccountHelper">
            <summary>
            Helper class for merging, splitting and deleting accounts.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.AccountHelper.MERGED">
            <summary>
            Prefix for accounts created from merging.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountHelper.Merge(CMS.OnlineMarketing.AccountInfo,System.Data.DataSet,System.Collections.Hashtable,System.Collections.Hashtable)">
            <summary>
            Will merge accounts into another account. If accounts are from different sites then new global account will be created.
            </summary>
            <param name="mergeInto">Optional. If not specified then new account will be created</param>
            <param name="mergeAccounts">Dataset of AccountInfo objects to be merged</param>
            <param name="ACcollisionResult">Optional. Hashtable containing result of account-contact collision results. Contains 'ContactID' keys and 'ContactRoleID' values.</param>
            <param name="CGresult">Optional. Hashtable containing result of contact groups which should be added to parent contact.</param>
            <returns>If merged accounts are from different sites then newly created account will be returned. Otherwise account passed as mergeInto parameter will be returned.</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountHelper.Merge(CMS.OnlineMarketing.AccountInfo,System.Collections.Generic.List{CMS.OnlineMarketing.AccountInfo},System.Collections.Hashtable,System.Collections.Hashtable)">
            <summary>
            Will merge accounts into another account. If accounts are from different sites then new global account will be created.
            </summary>
            <param name="mergeInto">Optional. If not specified then new account will be created.</param>
            <param name="mergeAccounts">List of AccountInfo objects to be merged</param>
            <param name="ACcollisionResult">Optional. Hashtable containing result of account-contact collision results. Contains 'ContactID' keys and 'ContactRoleID' values.</param>
            <param name="CGresult">Optional. Hashtable containing result of contact groups which should be added to parent contact.</param>
            <returns>If merged accounts are from different sites then newly created account will be returned. Otherwise account passed as mergeInto parameter will be returned.</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountHelper.Merge(CMS.OnlineMarketing.AccountInfo,CMS.OnlineMarketing.AccountInfo,System.Collections.Hashtable,System.Collections.Hashtable)">
            <summary>
            Merges one account into another account. Accounts must be on the same site (or global).
            </summary>
            <param name="mergeInto">Will be merging into this account. Must be on same site as 'mergeFrom' account or global.</param>
            <param name="mergeFrom">Will be merged. Must be on the same site as 'mergeInto' account or global if 'mergeInto' is global.</param>
            <param name="ACcollisionResult">Optional. Hashtable containing result of account-contact collision results. Contains 'ContactID' keys and 'ContactRoleID' values.</param>
            <param name="CGresult">Optional. Hashtable containing result of contact groups which should be added to parent contact.</param>
            <returns>Returns TRUE if merging was successful.</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountHelper.MergeIntoGlobalAccount(CMS.OnlineMarketing.AccountInfo,CMS.OnlineMarketing.AccountInfo,System.Collections.Hashtable,System.Collections.Hashtable)">
            <summary>
            Merging into global account.
            </summary>
            <param name="mergeInto">Must be a global account</param>
            <param name="mergeFrom">Must be site account</param>
            <param name="ACcollisionResult">Optional. Hashtable containing result of account-contact collision results. Contains 'ContactID' keys and 'ContactRoleID' values.</param>
            <param name="CGresult">Optional. Hashtable containing result of contact groups which should be added to parent contact.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountHelper.MergeIntoSiteAccount(CMS.OnlineMarketing.AccountInfo,CMS.OnlineMarketing.AccountInfo,System.Collections.Hashtable,System.Collections.Hashtable)">
            <summary>
            Merging two accounts from the same site.
            </summary>
            <param name="mergeInto">Merging into this account. Must be a site account</param>
            <param name="mergeFrom">Merging this account. Must be a site account</param>
            <param name="ACcollisionResult">Optional. Hashtable containing result of account-contact collision results. Contains 'ContactID' keys and 'ContactRoleID' values.</param>
            <param name="CGresult">Optional. Hashtable containing result of contact groups which should be added to parent contact.</param>
            <returns>Returns TRUE if merging was successful.</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountHelper.MergeContactGroupRelations(CMS.OnlineMarketing.AccountInfo,CMS.OnlineMarketing.AccountInfo,System.Collections.Hashtable)">
            <summary>
            Changes active account for all Account-ContactGroup relations into 'mergeFrom' account.
            </summary>
            <param name="mergeInto">Account-ContactGroup relation will be assigned to this account</param>
            <param name="mergeFrom">Account-ContactGroup relations from this account will be changed</param>
            <param name="CGresult">Optional. Hashtable containing result of contact groups which should be added to parent contact.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountHelper.CreateContactGroupMemberRelation(System.Int32,System.Int32)">
            <summary>
            Creates new ContactGroup - Contact relation.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountHelper.MergeAccountContactRelations(CMS.OnlineMarketing.AccountInfo,CMS.OnlineMarketing.AccountInfo,System.Collections.Hashtable)">
            <summary>
            Changes all Account - Contact relations assigned to 'mergeFrom' to be newly assigned to 'mergeInto'.
            </summary>
            <param name="mergeInto">Account - Contact relations will be assigned to this account</param>
            <param name="mergeFrom">Relations of this account will be changed</param>
            <param name="ACcollisionResult">Optional. Hashtable containing result of account-contact collision results. Contains 'ContactID' keys and 'ContactRoleID' values.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountHelper.CreateAccountContactRelation(System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates new Account - Contact relation.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountHelper.UpdateAccountContactRelation(System.Data.DataRow,System.Int32)">
            <summary>
            Updates Account - Contact relation.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountHelper.MergeSubsidiaryOfRelations(CMS.OnlineMarketing.AccountInfo,CMS.OnlineMarketing.AccountInfo)">
            <summary>
            Changes accounts' subsidiaryOf account where 'mergeFrom' account is used.
            </summary>
            <param name="mergeInto">Accounts' subsidiaryOf relation is changed to point to this account</param>
            <param name="mergeFrom">Accounts' subsidiaryOf relation are pointing to this account</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountHelper.GetMergedName">
            <summary>
            Returns original name for newly created merged account.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountHelper.Split(CMS.OnlineMarketing.AccountInfo,System.Collections.ArrayList,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Splits accounts from parent.
            </summary>
            <param name="parentAccount">Parent account from which accounts are being splitted</param>
            <param name="accounts">List of accounts to split</param>
            <param name="copyMissingFields">Indicates if empty fields on account to split should be filled with fields from merged account</param>
            <param name="removeContacts">Indicates if contacts related to splitted account should be removed from parent account</param>
            <param name="removeContactGroups">Indicates if contact groups related to splitted account should be removed from parent account</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountHelper.Split(CMS.OnlineMarketing.AccountInfo,System.Data.DataSet,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Splits accounts from parent.
            </summary>
            <param name="parentAccount">Parent account from which accounts are being splitted</param>
            <param name="accounts">List of accounts to split</param>
            <param name="copyMissingFields">Indicates if empty fields on account to split should be filled with fields from merged account</param>
            <param name="removeContacts">Indicates if contacts related to splitted account should be removed from parent account</param>
            <param name="removeContactGroups">Indicates if contact groups related to splitted account should be removed from parent account</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountHelper.Split(CMS.OnlineMarketing.AccountInfo,System.Collections.Generic.List{CMS.OnlineMarketing.AccountInfo},System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Splits accounts from parent.
            </summary>
            <param name="parentAccount">Parent account from which accounts are being splitted</param>
            <param name="accounts">List of accounts to split</param>
            <param name="copyMissingFields">Indicates if empty fields on account to split should be filled with fields from merged account</param>
            <param name="removeContacts">Indicates if contacts related to splitted account should be removed from parent account</param>
            <param name="removeContactGroups">Indicates if contact groups related to splitted account should be removed from parent account</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountHelper.SplitFromAccount(CMS.OnlineMarketing.AccountInfo,CMS.OnlineMarketing.AccountInfo,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Splits merged account from another account.
            </summary>
            <param name="parentAccount">Parent account under which is account merged</param>
            <param name="mergedAccount">Merged account</param>
            <param name="copyMissingFields">Indicates if fields which are empty on merged account should be filled with data from parent account</param>
            <param name="removeContacts">Indicates if contacts related to splitted account should be removed from parent account</param>
            <param name="removeContactGroups">Indicates if contact groups related to splitted account should be removed from parent account</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountHelper.CopyMissingFields(CMS.OnlineMarketing.AccountInfo,CMS.OnlineMarketing.AccountInfo)">
            <summary>
            Copies fields which are filled in parent account and are empty in merged account.
            </summary>
            <param name="parentAccount">Source of data</param>
            <param name="mergedAccount">Fields are filled in this account</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountHelper.CopyField(System.Object,System.Object,CMS.FormEngine.FormFieldDataTypeEnum)">
            <summary>
            Copy field specified by its data type.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountHelper.CopyStringField(System.String,System.String)">
            <summary>
            Copies string field content.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountHelper.CopyIntegerField(System.Int32,System.Int32)">
            <summary>
            Copies integer field content.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountHelper.SplitRecords(CMS.OnlineMarketing.AccountInfo,CMS.OnlineMarketing.AccountInfo)">
            <summary>
            Recursively loops through all accounts merged into 'parentAccount' and changes all records to point to 'splitAccount'.
            </summary>
            <param name="mergedAccount">Account placed under 'splitAccount' will be modified</param>
            <param name="splitAccount">Account being splitted from parent account</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountHelper.SplitGroupRelations(CMS.OnlineMarketing.AccountInfo,CMS.OnlineMarketing.AccountInfo)">
            <summary>
            Loops through all Account-ContactGroup relations created for 'mergedAccount' account and changes active account to be 'splitAccount' account.
            </summary>
            <param name="mergedAccount">Account which is merged under 'splitAccount'</param>
            <param name="splitAccount">Account being splitted</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountHelper.DeleteAccountContactRelations(CMS.OnlineMarketing.AccountInfo,CMS.OnlineMarketing.AccountInfo)">
            <summary>
            Removes all Account - Contact relations.
            </summary>
            <param name="parentAccount">Parent account</param>
            <param name="mergedAccount">Child account being splitted</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountHelper.DeleteContactGroupRelations(CMS.OnlineMarketing.AccountInfo,CMS.OnlineMarketing.AccountInfo)">
            <summary>
            Remove contact group - account relations from parent account when relation to contact group is on merged account as well.
            </summary>
            <param name="parent">Parent account</param>
            <param name="merged">Account being splitted</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountHelper.Delete(CMS.OnlineMarketing.AccountInfo,System.Boolean,System.Boolean)">
            <summary>
            Deletes account. All related records are moved to parent account or deleted.
            </summary>
            <param name="account">Account to be deleted</param>
            <param name="deleteMerged">Indicates if merged child accounts should be deleted as well or will be splitted before deleting parent account.</param>
            <param name="deleteSubsidiaries">Indicates if subsidiary accounts should be deleted as well.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountHelper.GetAccounListInfos(CMS.SettingsProvider.QueryDataParameters,System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns ccounListInfos for specified parameters.
            </summary>
            <param name="parameters">Query parameters</param>
            <param name="where">SQL WHERE condition</param>
            <param name="orderBy">SQL ORDER BY parameters</param>
            <param name="topN">SQL TOP N parameters</param>
            <param name="columns">Selected columns</param>
            <returns>Returns DataSet</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountHelper.GetNewAccount(System.String,System.Int32)">
            <summary>
            Creates and returns new  account.
            </summary>
            <returns>Returns new AccountInfo</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountHelper.GetName(System.String,System.Int32)">
            <summary>
            Returns name for newly created account
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountHelper.AuthorizedReadAccount(System.Int32,System.Boolean)">
            <summary>
            Indicates if current user is authorized for site accounts.
            </summary>
            <param name="siteID">SiteID of an contact</param>
            <param name="noPermissionRedirect">Indicates if redirect should be done when not enough permissions</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountHelper.AuthorizedReadAccount(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Indicates if current user is authorized for site accounts.
            </summary>
            <param name="siteID">SiteID of an contact</param>
            <param name="noPermissionRedirect">Indicates if redirect should be done when not enough permissions</param>
            <param name="isSiteManager">Indicates if current context is in site manager</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountHelper.AuthorizedModifyAccount(System.Int32,System.Boolean)">
            <summary>
            Returns if current user is authorized to modify contact.
            </summary>
            <param name="siteID">SiteID of an contact</param>
            <param name="noPermissionRedirect">Indicates if redirect should be done when not enough permissions</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountHelper.AuthorizedModifyAccount(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Returns if current user is authorized to modify contact.
            </summary>
            <param name="siteID">SiteID of an contact</param>
            <param name="noPermissionRedirect">Indicates if redirect should be done when not enough permissions</param>
            <param name="isSiteManager">Indicates if current context is in site manager</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountHelper.ObjectSiteID(System.Object)">
            <summary>
            Returns Site ID of account.
            </summary>
            <param name="account">Account info</param>
            <returns>Returns site ID. Returns -1 when conversion of object fails.</returns>
        </member>
        <member name="T:CMS.OnlineMarketing.AccountStatusInfo">
            <summary>
            AccountStatusInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.AccountStatusInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountStatusInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountStatusInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountStatusInfo.#ctor">
            <summary>
            Constructor - Creates an empty AccountStatusInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountStatusInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new AccountStatusInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountStatusInfo.CheckPermissions(CMS.SettingsProvider.PermissionsEnum,System.String,CMS.SettingsProvider.IUserInfo)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
        </member>
        <member name="P:CMS.OnlineMarketing.AccountStatusInfo.AccountStatusDisplayName">
            <summary>
            Gets or sets the account status display name.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.AccountStatusInfo.AccountStatusID">
            <summary>
            Gets or sets the account status ID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.AccountStatusInfo.AccountStatusSiteID">
            <summary>
            Gets or sets the account status site ID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.AccountStatusInfo.AccountStatusName">
            <summary>
            Gets or sets the account status name.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.AccountStatusInfo.AccountStatusDescription">
            <summary>
            Gets or sets the account status description.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.AccountStatusInfoProvider">
            <summary>
            Class providing AccountStatusInfo management.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountStatusInfoProvider.#ctor">
            <summary>
            Constructor using ID and codename Hashtables.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountStatusInfoProvider.GetAccountStatuses(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all account statuses matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountStatusInfoProvider.GetAccountStatuses(System.String,System.String)">
            <summary>
            Returns dataset of all account statuses matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountStatusInfoProvider.GetAccountStatusInfo(System.Int32)">
            <summary>
            Returns account status with specified ID.
            </summary>
            <param name="statusId">Account status ID</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.AccountStatusInfoProvider.GetAccountStatusInfo(System.String,System.String)">
            <summary>
            Returns account status with specified name.
            </summary>
            <param name="statusName">Account status name</param>                
            <param name="siteName">Site name</param>                
        </member>
        <member name="M:CMS.OnlineMarketing.AccountStatusInfoProvider.SetAccountStatusInfo(CMS.OnlineMarketing.AccountStatusInfo)">
            <summary>
            Sets (updates or inserts) specified account status.
            </summary>
            <param name="statusObj">Account status to be set</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountStatusInfoProvider.DeleteAccountStatusInfo(CMS.OnlineMarketing.AccountStatusInfo)">
            <summary>
            Deletes specified account status.
            </summary>
            <param name="statusObj">Account status to be deleted</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountStatusInfoProvider.DeleteAccountStatusInfo(System.Int32)">
            <summary>
            Deletes account status with specified ID.
            </summary>
            <param name="statusId">Account status ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountStatusInfoProvider.GetAccountStatuses(System.String,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Returns dataset of all account statuses for specified site matching the specified parameters.
            </summary>       
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
            <param name="siteId">Site ID</param>        		
        </member>
        <member name="M:CMS.OnlineMarketing.AccountStatusInfoProvider.GetAccountStatuses(System.Int32)">
            <summary>
            Returns dataset of all account statuses for specified site.
            </summary>
            <param name="siteId">Site ID</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.AccountStatusInfoProvider.GetAccountStatusesInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all account statuses matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountStatusInfoProvider.GetAccountStatusInfoInternal(System.Int32)">
            <summary>
            Returns account status with specified ID.
            </summary>
            <param name="statusId">Account status ID</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.AccountStatusInfoProvider.GetAccountStatusInfoInternal(System.String,System.String)">
            <summary>
            Returns account status with specified name.
            </summary>
            <param name="statusName">Account status name</param>                
            <param name="siteName">Site name</param>         
        </member>
        <member name="M:CMS.OnlineMarketing.AccountStatusInfoProvider.SetAccountStatusInfoInternal(CMS.OnlineMarketing.AccountStatusInfo)">
            <summary>
            Sets (updates or inserts) specified account status.
            </summary>
            <param name="statusObj">Account status to be set</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.AccountStatusInfoProvider.DeleteAccountStatusInfoInternal(CMS.OnlineMarketing.AccountStatusInfo)">
            <summary>
            Deletes specified account status.
            </summary>
            <param name="statusObj">Account status to be deleted</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.AccountStatusInfoProvider.GetAccountStatusesInternal(System.String,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Returns dataset of all account statuses for specified site matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
            <param name="siteId">Site ID</param> 
        </member>
        <member name="T:CMS.OnlineMarketing.ActivityDetail">
            <summary>
            Activity detail user control.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityDetail.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityDetail.LoadData(CMS.OnlineMarketing.ActivityInfo)">
            <summary>
            Loads data to control. Returns false if data not found.
            </summary>
            <param name="ai">Activity info object</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityDetail.EncodeLabel(System.Web.UI.WebControls.Label,System.String)">
            <summary>
            Encodes and assigns text to label.
            </summary>
            <param name="lbl">Label</param>
            <param name="text">Text</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityDetail.GetDocumentByNodeID(System.Int32,System.String)">
            <summary>
            Rerturns document for the given document node ID.
            </summary>
            <param name="nodeId">Docuemnt node ID</param>
            <param name="culture">Culture</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityDetail.GetURL(CMS.TreeEngine.TreeNode)">
            <summary>
            Returns URL to CMSDesk for the given document.
            </summary>
            <param name="tn"></param>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityDetail.GetLink(System.String,System.String)">
            <summary>
            Returns link.
            </summary>
            <param name="url">URL</param>
            <param name="content">Link text (will be HTML encoded)</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityDetail.GetUserName(System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            Joins user name consisting of first, middle, last and e-mail address in one string.
            </summary>
            <param name="first">First name</param>
            <param name="middle">Middle name</param>
            <param name="last">Last name</param>
            <param name="emailAddress">E-mail address</param>
            <param name="userName">User name</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityDetail.GetLinkForDocument(System.Int32,System.String)">
            <summary>
            Returns link for given document node ID to CMSDesk.
            </summary>
            <param name="nodeId">Document node ID</param>
            <param name="culture">Docuemnt culture</param>
        </member>
        <member name="T:CMS.OnlineMarketing.ActivityInfo">
            <summary>
            ActivityInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ActivityInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityInfo.#ctor">
            <summary>
            Constructor - Creates an empty ActivityInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new ActivityInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityInfo.CheckPermissions(CMS.SettingsProvider.PermissionsEnum,System.String,CMS.SettingsProvider.IUserInfo)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
        </member>
        <member name="P:CMS.OnlineMarketing.ActivityInfo.ActivityCampaign">
            <summary>
            Gets or sets the campaign code name for this activity.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ActivityInfo.ActivityItemDetailID">
            <summary>
            Gets or sets the ID othe item detail that relates to this activity.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ActivityInfo.ActivityID">
            <summary>
            Gets or sets the activity ID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ActivityInfo.ActivityActiveContactID">
            <summary>
            Gets or sets the ID of the active contact for this activity.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ActivityInfo.ActivityNodeID">
            <summary>
            Gets or sets the node ID that relates to this activity.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ActivityInfo.ActivityGUID">
            <summary>
            Gets or sets the activity's unique identifier.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ActivityInfo.ActivityTitle">
            <summary>
            Gets or sets the activity title.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ActivityInfo.ActivityOriginalContactID">
            <summary>
            Gets or sets the ID of the original contact for this activity.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ActivityInfo.ActivityType">
            <summary>
            Gets or sets the type of the activity.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ActivityInfo.ActivityValue">
            <summary>
            Gets or sets the value of this activity.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ActivityInfo.ActivityURL">
            <summary>
            Gets or sets the URL of this activity.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ActivityInfo.ActivityCreated">
            <summary>
            Gets or sets the date and time the activity was created.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ActivityInfo.ActivitySiteID">
            <summary>
            Gets or sets the site ID for this activity.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ActivityInfo.ActivityItemID">
            <summary>
            Gets or sets the ID of the item that relates to this activity.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ActivityInfo.ActivityIPAddress">
            <summary>
            Gets or sets user host IP address.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ActivityInfo.ActivityURLReferrer">
            <summary>
            Gets or sets URL referrer.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ActivityInfo.ActivityComment">
            <summary>
            Gets or set additional comment.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ActivityInfo.ActivityCulture">
            <summary>
            Gets or sets the document culture where activity occurred.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ActivityInfoProvider">
            <summary>
            Class providing ActivityInfo management.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityInfoProvider.GetActivities(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all activities matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityInfoProvider.GetActivities(System.String,System.String)">
            <summary>
            Returns dataset of all activities matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityInfoProvider.GetActivityInfo(System.Int32)">
            <summary>
            Returns activity with specified ID.
            </summary>
            <param name="activityId">Activity ID</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityInfoProvider.GetActivityInfo(System.Guid,System.String)">
            <summary>
            Returns activity with specified GUID.
            </summary>
            <param name="activityGuid">Activity GUID</param>                
            <param name="siteName">Site name</param>                
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityInfoProvider.SetActivityInfo(CMS.OnlineMarketing.ActivityInfo)">
            <summary>
            Sets (updates or inserts) specified activity.
            </summary>
            <param name="activityObj">Activity to be set</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityInfoProvider.DeleteActivityInfo(CMS.OnlineMarketing.ActivityInfo)">
            <summary>
            Deletes specified activity.
            </summary>
            <param name="activityObj">Activity to be deleted</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityInfoProvider.DeleteActivityInfo(System.Int32)">
            <summary>
            Deletes activity with specified ID.
            </summary>
            <param name="activityId">Activity ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityInfoProvider.GetActivities(System.String,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Returns dataset of all activities for specified site matching the specified parameters.
            </summary>       
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
            <param name="siteId">Site ID</param>        		
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityInfoProvider.GetActivities(System.Int32)">
            <summary>
            Returns dataset of all activities for specified site.
            </summary>
            <param name="siteId">Site ID</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityInfoProvider.GetPreviousNext(System.Int32,System.String,System.String,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Returns the previous and next activity IDs of the given activity in the order specified by ORDER BY parameter matching the WHERE criteria.
            </summary>
            <param name="activityId">ID of the activity relative to which the previous and next activities are returned</param>
            <param name="where">WHERE condition</param>
            <param name="orderBy">ORDER BY columns</param>
            <param name="contactId">Contact ID (optional)</param>
            <param name="isMerged">True if contact (specified by contact ID) is merged</param>
            <param name="isGlobal">True if contact (specified by contact ID) is global</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityInfoProvider.GetContactsLastActivity(System.Int32,System.String)">
            <summary>
            Returns last contact's activity, may be restricted to specific activity type.
            </summary>
            <param name="contactId">Contact ID</param>
            <param name="activityType">Activity type - optional</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityInfoProvider.GetContactsFirstActivity(System.Int32,System.String)">
            <summary>
            Returns first contact's activity, may be restricted to specific activity type.
            </summary>
            <param name="contactId">Contact ID</param>
            <param name="activityType">Activity type - optional</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityInfoProvider.GetActivitiesInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all activities matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityInfoProvider.GetActivityInfoInternal(System.Int32)">
            <summary>
            Returns activity with specified ID.
            </summary>
            <param name="activityId">Activity ID</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityInfoProvider.GetActivityInfoInternal(System.Guid,System.String)">
            <summary>
            Returns activity with specified GUID.
            </summary>
            <param name="activityGuid">Activity GUID</param>                
            <param name="siteName">Site name</param>         
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityInfoProvider.SetActivityInfoInternal(CMS.OnlineMarketing.ActivityInfo)">
            <summary>
            Sets (updates or inserts) specified activity.
            </summary>
            <param name="activityObj">Activity to be set</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityInfoProvider.DeleteActivityInfoInternal(CMS.OnlineMarketing.ActivityInfo)">
            <summary>
            Deletes specified activity.
            </summary>
            <param name="activityObj">Activity to be deleted</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityInfoProvider.GetActivitiesInternal(System.String,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Returns dataset of all activities for specified site matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
            <param name="siteId">Site ID</param> 
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityInfoProvider.GetContactsActivityInternal(System.Int32,System.String,System.String)">
            <summary>
            Returns TOP 1 contact's activity depending on 'order by' and 'activity type' parameters.
            </summary>
            <param name="contactId">Contact ID</param>
            <param name="activityType">Activity type - optional</param>
            <param name="orderBy">Order by</param>
        </member>
        <member name="T:CMS.OnlineMarketing.ActivityHelper">
            <summary>
            Helper for activity manipulation.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityHelper.DuplicateActivity(CMS.OnlineMarketing.ActivityInfo,CMS.OnlineMarketing.ContactInfo)">
            <summary>
            Duplicates record in Activity table and all related tables if required. Keeps ActivityGUID same.
            </summary>
            <param name="ai">Duplicate this activity</param>
            <param name="contact">Optional. Contact which will be used for ActivityActiveContactID and ActivityOriginalContactID. If not specified then original values will remain</param>
            <returns>Duplicated activity</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityHelper.AuthorizedReadActivity(System.Int32,System.Boolean)">
            <summary>
            Indicates if current user is authorized for activities.
            </summary>
            <param name="siteID">SiteID of an activity</param>
            <param name="noPermissionRedirect">Indicates if redirect should be done when not enough permissions</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityHelper.AuthorizedManageActivity(System.Int32,System.Boolean)">
            <summary>
            Returns if current user is authorized to manage activities.
            </summary>
            <param name="siteID">SiteID of an activity</param>
            <param name="noPermissionRedirect">Indicates if redirect should be done when not enough permissions</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityHelper.AuthorizedManageActivity(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Returns if current user is authorized to manage activities.
            </summary>
            <param name="siteID">SiteID of an activity</param>
            <param name="noPermissionRedirect">Indicates if redirect should be done when not enough permissions</param>
            <param name="isSiteManager">Indicates if activities are managed in Site Manager</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityHelper.LogLandingPage(System.Int32,System.String,CMS.PortalEngine.PageInfo)">
            <summary>
            Logs landing page according to current context data.
            </summary>
            <param name="contactId">Contact ID</param>
            <param name="siteName">Current site name. Optional.</param>
            <param name="currentPage">Current page. Optional.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityHelper.LogExternalSearch(System.Int32,System.String,CMS.PortalEngine.PageInfo)">
            <summary>
            Logs external search.
            </summary>
            <param name="contactId">ContactID</param>
            <param name="siteName">Current site name. Optional.</param>
            <param name="currentPage">Current page. Optional.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityHelper.LogPageVisit(System.Int32,System.String,CMS.PortalEngine.PageInfo)">
            <summary>
            Logs page visit.
            </summary>
            <param name="contactId">Contact ID</param>
            <param name="siteName">Current site name. Optional.</param>
            <param name="currentPage">Current page. Optional.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityHelper.LogLogin(CMS.SiteProvider.UserInfo)">
            <summary>
            Logs login activity
            </summary>
            <param name="ui">User info</param>
        </member>
        <member name="T:CMS.OnlineMarketing.ActivityHelper.ActivityParamsList">
            <summary>
            List for storing additional parameters for activity.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityHelper.ActivityParamsList.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityHelper.ActivityParamsList.Add(System.String,System.String)">
            <summary>
            Appends parameter and its valu to list.
            </summary>
            <param name="key">Key</param>
            <param name="value">Value</param>
        </member>
        <member name="P:CMS.OnlineMarketing.ActivityHelper.ActivityParamsList.Count">
            <summary>
            Gets the number of parameters.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ActivityHelper.ActivityParamsList.Item(System.String)">
            <summary>
            Returns value of particular parameter or null if parameter does not exist.
            </summary>
            <param name="key">Key (name of the parameter)</param>
        </member>
        <member name="T:CMS.OnlineMarketing.ContactGroupInfo">
            <summary>
            ContactGroupInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContactGroupInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupInfo.#ctor">
            <summary>
            Constructor - Creates an empty ContactGroupInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new ContactGroupInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupInfo.CheckPermissions(CMS.SettingsProvider.PermissionsEnum,System.String,CMS.SettingsProvider.IUserInfo)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactGroupInfo.ContactGroupDisplayName">
            <summary>
            Gets or sets the display name of the contact group.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactGroupInfo.ContactGroupDescription">
            <summary>
            Gets or sets the description of the contact group.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactGroupInfo.ContactGroupID">
            <summary>
            Gets or sets the ID of the contact group.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactGroupInfo.ContactGroupSiteID">
            <summary>
            Gets or sets the site ID for this contact group.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactGroupInfo.ContactGroupName">
            <summary>
            Gets or sets the name of the contact group.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactGroupInfo.ContactGroupDynamicCondition">
            <summary>
            Gets or sets the macro condition of given group.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactGroupInfo.ContactGroupScheduledTaskID">
            <summary>
            Gets or sets the ID of scheduled task for re-evaluaiton if the group is dynamic.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactGroupInfo.ContactGroupEnabled">
            <summary>
            Gets or sets if the contact group is enabled.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactGroupInfo.ContactGroupLastModified">
            <summary>
            Gets or sets the date and time when the contact group was last modified.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactGroupInfo.ContactGroupGUID">
            <summary>
            Gets or sets the contact group's unique identifier.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactGroupInfo.ContactGroupStatus">
            <summary>
            Gets or sets status of dynamic contact group.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ContactGroupInfoProvider">
            <summary>
            Class providing ContactGroupInfo management.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupInfoProvider.#ctor">
            <summary>
            Constructor using ID and codename Hashtables.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupInfoProvider.GetContactGroups(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all contact groups matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupInfoProvider.GetContactGroups(System.String,System.String)">
            <summary>
            Returns dataset of all contact groups matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupInfoProvider.GetContactGroupInfo(System.Int32)">
            <summary>
            Returns contact group with specified ID.
            </summary>
            <param name="groupId">Contact group ID</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupInfoProvider.GetContactGroupInfo(System.String,System.String)">
            <summary>
            Returns contact group with specified name.
            </summary>
            <param name="groupName">Contact group name</param>                
            <param name="siteName">Site name</param>                
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupInfoProvider.SetContactGroupInfo(CMS.OnlineMarketing.ContactGroupInfo)">
            <summary>
            Sets (updates or inserts) specified contact group.
            </summary>
            <param name="groupObj">Contact group to be set</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupInfoProvider.DeleteContactGroupInfo(CMS.OnlineMarketing.ContactGroupInfo)">
            <summary>
            Deletes specified contact group.
            </summary>
            <param name="groupObj">Contact group to be deleted</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupInfoProvider.DeleteContactGroupInfo(System.Int32)">
            <summary>
            Deletes contact group with specified ID.
            </summary>
            <param name="groupId">Contact group ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupInfoProvider.GetContactGroups(System.String,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Returns dataset of all contact groups for specified site matching the specified parameters.
            </summary>       
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
            <param name="siteId">Site ID</param>        		
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupInfoProvider.GetContactGroups(System.Int32)">
            <summary>
            Returns dataset of all contact groups for specified site.
            </summary>
            <param name="siteId">Site ID</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupInfoProvider.GetContactGroupsInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all contact groups matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupInfoProvider.GetContactGroupInfoInternal(System.Int32)">
            <summary>
            Returns contact group with specified ID.
            </summary>
            <param name="groupId">Contact group ID</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupInfoProvider.GetContactGroupInfoInternal(System.String,System.String)">
            <summary>
            Returns contact group with specified name.
            </summary>
            <param name="groupName">Contact group name</param>                
            <param name="siteName">Site name</param>         
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupInfoProvider.SetContactGroupInfoInternal(CMS.OnlineMarketing.ContactGroupInfo)">
            <summary>
            Sets (updates or inserts) specified contact group.
            </summary>
            <param name="groupObj">Contact group to be set</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupInfoProvider.DeleteContactGroupInfoInternal(CMS.OnlineMarketing.ContactGroupInfo)">
            <summary>
            Deletes specified contact group.
            </summary>
            <param name="groupObj">Contact group to be deleted</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupInfoProvider.GetContactGroupsInternal(System.String,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Returns dataset of all contact groups for specified site matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
            <param name="siteId">Site ID</param> 
        </member>
        <member name="T:CMS.OnlineMarketing.ContactGroupMemberInfo">
            <summary>
            ContactGroupMembersInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContactGroupMemberInfo.TYPEINFOCONTACT">
            <summary>
            Type information for group members of type contact.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContactGroupMemberInfo.TYPEINFOACCOUNT">
            <summary>
            Type information for group members of type account.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupMemberInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupMemberInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupMemberInfo.#ctor">
            <summary>
            Constructor - Creates an empty ContactGroupMemberInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupMemberInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new ContactGroupMemberInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactGroupMemberInfo.ContactGroupMemberID">
            <summary>
            Gets or sets the ID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactGroupMemberInfo.ContactGroupMemberType">
            <summary>
            Gets or sets the type of the related object.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactGroupMemberInfo.ContactGroupMemberContactGroupID">
            <summary>
            Gets or sets the ID of the contact group.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactGroupMemberInfo.ContactGroupMemberRelatedID">
            <summary>
            Gets or sets the ID of the related object - contact or account.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactGroupMemberInfo.ContactGroupMemberFromCondition">
            <summary>
            Gets or sets value indicating if current contact group member is added from dynamic condition.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactGroupMemberInfo.ContactGroupMemberFromAccount">
            <summary>
            Gets or sets value indicating if current contact group member is added as an account member.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactGroupMemberInfo.ContactGroupMemberFromManual">
            <summary>
            Gets or sets value indicating if current contact group member is manually added.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactGroupMemberInfo.TypeInfo">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactGroupMemberInfo.ObjectType">
            <summary>
            Object type.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ContactGroupMemberInfoProvider">
            <summary>
            Class providing ContactGroupMemberInfo management.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupMemberInfoProvider.GetRelationships(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all relationships among contact groups, related objects of specific types matching the specified criteria.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupMemberInfoProvider.GetRelationships(System.String,System.String)">
            <summary>
            Returns dataset of all relationships among contact groups, related objects of specific types matching the specified criteria.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupMemberInfoProvider.GetContactGroupMemberInfo(System.Int32)">
            <summary>
            Returns relationship by ID.
            </summary>
            <param name="contactGroupMemberId">Contact group member ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupMemberInfoProvider.GetContactGroupMemberInfoByData(System.Int32,System.Int32,CMS.OnlineMarketing.ContactGroupMemberTypeEnum)">
            <summary>
            Returns relationship among specified contact group and related object of specific type.
            </summary>
            <param name="groupId">Contact group ID</param>
            <param name="relatedObjectId">Related object ID</param>
            <param name="memberType">Member type</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupMemberInfoProvider.SetContactGroupMemberInfo(CMS.OnlineMarketing.ContactGroupMemberInfo)">
            <summary>
            Sets relationship among specified contact group and related object of specific type.
            </summary>
            <param name="infoObj">Contact group-related object-object type relationship to be set</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupMemberInfoProvider.SetContactGroupMemberInfo(System.Int32,System.Int32,CMS.OnlineMarketing.ContactGroupMemberTypeEnum,CMS.OnlineMarketing.MemberAddedHowEnum)">
            <summary>
            Sets relationship among specified contact group and related object of specific type.
            </summary>	
            <param name="groupId">Contact group ID</param>
            <param name="relatedObjectId">Related object ID</param>
            <param name="memberType">Member type</param>
            <param name="addedHow">Possible types of contact addition into contact group</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupMemberInfoProvider.DeleteContactGroupMemberInfo(CMS.OnlineMarketing.ContactGroupMemberInfo)">
            <summary>
            Deletes relationship among specified contact group and related object of specific type.
            </summary>
            <param name="infoObj">Contact group-related object-object type relationship to be deleted</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupMemberInfoProvider.DeleteContactGroupMemberInfo(System.Int32)">
            <summary>
            Deletes relationship specified by ID.
            </summary>
            <param name="contactGroupMemberId">Contact group member ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupMemberInfoProvider.DeleteContactGroupMemberInfo(System.Int32,System.Int32,CMS.OnlineMarketing.ContactGroupMemberTypeEnum)">
            <summary>
            Deletes relationship among specified contact group and related object of specific type.
            </summary>
            <param name="groupId">Contact group ID</param>
            <param name="relatedObjectId">Related object ID</param>
            <param name="memberType">Member type</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupMemberInfoProvider.DeleteContactGroupMembers(System.String,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Deletes relationships between specified contact groups and related objects (contact, account) defined in where condition.
            </summary>
            <param name="where">Where condition</param>
            <param name="contactGroupID">Current groupID. Used only when deleting accounts and removing its contacts.</param>
            <param name="deletingAccount">Indicates if deleting accounts. If TRUE then also contacts will be removed as well.</param>
            <param name="removeAccount">If TRUE then account will be deleted, not only its contacts. Applicable only when deleting accounts.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupMemberInfoProvider.UpdateMergedAccountContacts(System.Int32)">
            <summary>
            Updates contacts of specified account which was merged.
            </summary>
            <param name="accountID">Account ID which was merged before.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupMemberInfoProvider.GetNumberOfContactsInGroup(System.Int32,System.Boolean)">
            <summary>
            Returns number of contacts in specified contact group.
            </summary>
            <param name="contactGroupId">Contact group ID</param>
            <param name="excludeMerged">Indicates if merged contacts should be excluded from the count</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupMemberInfoProvider.GetRelationshipsInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all relationships among contact groups and related objects of specific types matching the specified criteria.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupMemberInfoProvider.GetContactGroupMemberInfoInternal(System.Int32)">
            <summary>
            Returns relationship specified by id.
            </summary>
            <param name="contactgroupmemberId">Contact group ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupMemberInfoProvider.GetContactGroupMemberInfoByDataInternal(System.Int32,System.Int32,CMS.OnlineMarketing.ContactGroupMemberTypeEnum)">
            <summary>
            Returns relationship among specified contact group and related object of specific type.
            </summary>
            <param name="groupId">Contact group ID</param>
            <param name="relatedObjectId">Related object ID</param>
            <param name="memberType">Membership type</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupMemberInfoProvider.SetContactGroupMemberInfoInternal(CMS.OnlineMarketing.ContactGroupMemberInfo)">
            <summary>
            Sets relationship among specified contact group and related object of specific type.
            </summary>
            <param name="infoObj">Contact group-related object-object type relationship to be set</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupMemberInfoProvider.DeleteContactGroupMemberInfoInternal(CMS.OnlineMarketing.ContactGroupMemberInfo)">
            <summary>
            Deletes relationship among specified contact group and related object of specific type.
            </summary>
            <param name="infoObj">Contact group-related object-object type relationship to be deleted</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupMemberInfoProvider.DeleteContactGroupMembersInternal(System.String)">
            <summary>
            Deletes realtionships between specified contact groups and related objects (contact, account) defined in where condition.
            </summary>
            <param name="where">Where condition</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupMemberInfoProvider.GetNumberOfContactsInGroupInternal(System.Int32,System.Boolean)">
            <summary>
            Returns number of contacts in specified contact group.
            </summary>
            <param name="contactGroupId">Contact group ID</param>
            <param name="excludeMerged">Indicates if merged contacts should be excluded from the count</param>
        </member>
        <member name="T:CMS.OnlineMarketing.ContactInfo">
            <summary>
            ContactInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContactInfo.mInstantiated">
            <summary>
            Time when the object was instantiated.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContactInfo.mAccounts">
            <summary>
            Collection of accounts belonging to the object.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContactInfo.mOrders">
            <summary>
            Collection of orders made by contact.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContactInfo.mPurchasedProducts">
            <summary>
            Collection of products purchased by contact.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContactInfo.mWishlist">
            <summary>
            Collection of contacts wishlist items.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContactInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfo.RegisterProperties">
            <summary>
            Register the custom properties
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfo.#ctor">
            <summary>
            Constructor - Creates an empty ContactInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new ContactInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfo.CheckPermissions(CMS.SettingsProvider.PermissionsEnum,System.String,CMS.SettingsProvider.IUserInfo)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactInfo.ContactEmail">
            <summary>
            Gets or sets the contact's e-mail address.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactInfo.ContactLastModified">
            <summary>
            Gets or sets the date and time when the contact was last modified.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactInfo.ContactMonitored">
            <summary>
            Gets or sets whether this contact is monitored.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactInfo.ContactTitleBefore">
            <summary>
            Gets or sets the title used in front of a contact's name.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactInfo.ContactMergedWhen">
            <summary>
            Gets or sets the date and time when the contact was merged.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactInfo.ContactBirthday">
            <summary>
            Gets or sets the contact's birth date.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactInfo.ContactGender">
            <summary>
            Gets or sets the contact's gender.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactInfo.ContactFirstName">
            <summary>
            Gets or sets the contact's first name.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactInfo.ContactCountryID">
            <summary>
            Gets or sets the contact's country ID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactInfo.ContactID">
            <summary>
            Gets or sets the contact's ID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactInfo.ContactMobilePhone">
            <summary>
            Gets or sets the contact's mobile phone number.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactInfo.ContactGlobalContactID">
            <summary>
            Gets or sets the ID of the global contact ID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactInfo.ContactLastName">
            <summary>
            Gets or sets the contact's last name.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactInfo.ContactMergedWithContactID">
            <summary>
            Gets or sets the ID of the contact that was merged to create this contact.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactInfo.ContactCity">
            <summary>
            Gets or sets the contact's city.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactInfo.ContactIsAnonymous">
            <summary>
            Gets or sets whether the contact is anonymous.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactInfo.ContactSiteID">
            <summary>
            Gets or sets the contact's site ID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactInfo.ContactTitleAfter">
            <summary>
            Gets or sets the title used after the contact's name.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactInfo.ContactWebSite">
            <summary>
            Gets or sets the URL of the contact's web site.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactInfo.ContactOwnerUserID">
            <summary>
            Gets or sets the ID of the user that owns this contact.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactInfo.ContactCreated">
            <summary>
            Gets or sets the the date and time when the contact was created.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactInfo.ContactGUID">
            <summary>
            Gets or sets the contact's unique identifier.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactInfo.ContactJobTitle">
            <summary>
            Gets or sets the contact's job title.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactInfo.ContactStateID">
            <summary>
            Gets or sets the contact's state ID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactInfo.ContactAddress2">
            <summary>
            Gets or sets the second line of the contact's address.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactInfo.ContactAddress1">
            <summary>
            Gets or sets the first line of the contact's address.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactInfo.ContactNotes">
            <summary>
            Gets or sets the notes for this contact.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactInfo.ContactZIP">
            <summary>
            Gets or sets the contact's postal code.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactInfo.ContactMiddleName">
            <summary>
            Gets or sets the contact's middle name.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactInfo.ContactBusinessPhone">
            <summary>
            Gets or sets the contact's business phone number.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactInfo.ContactHomePhone">
            <summary>
            Gets or sets the contact's home phone number.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactInfo.ContactStatusID">
            <summary>
            Gets or sets the contact's status ID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactInfo.ContactCampaign">
            <summary>
            Gets or sets the contact's campaign
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactInfo.ContactSalutation">
            <summary>
            Gets or sets the salutation to use for this contact.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactInfo.ContactBounces">
            <summary>
            Gets or sets the number of bounced e-mails for this contact.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactInfo.ContactLastLogon">
            <summary>
            Gets or sets timestamp of last logon.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactInfo.IsValid">
            <summary>
            Returns true if the user data are valid.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactInfo.Accounts">
            <summary>
            Collection of the accounts belonging to the object.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactInfo.Orders">
            <summary>
            Collection or all contact orders made on current site.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactInfo.PurchasedProducts">
            <summary>
            Collection of all contacts purchased products from all sites.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactInfo.Wishlist">
            <summary>
            Collection of all contacts wishlist items from all sites.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactInfo.LastActivity">
            <summary>
            Last activity of the contact.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ContactInfoProvider">
            <summary>
            Class providing ContactInfo management.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContactInfoProvider.SQL_TIMEOUT">
            <summary>
            Set timeout to 20 hours.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.GetContacts(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all contacts matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.GetContacts(System.String,System.String)">
            <summary>
            Returns dataset of all contacts matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.GetContactInfo(System.Int32)">
            <summary>
            Returns contact with specified ID.
            </summary>
            <param name="contactId">Contact ID</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.GetContactInfo(System.Guid,System.String)">
            <summary>
            Returns contact with specified GUID.
            </summary>
            <param name="contactGuid">Contact GUID</param>                
            <param name="siteName">Site name</param>                
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.GetContactInfo(System.Guid,System.Boolean,System.String)">
            <summary>
            Returns contact with specified GUID.
            </summary>
            <param name="contactGuid">Contact GUID</param>                
            <param name="merged">Indicates if merged contacts should be included</param>                
            <param name="siteName">Site name</param>                
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.SetContactInfo(CMS.OnlineMarketing.ContactInfo)">
            <summary>
            Sets (updates or inserts) specified contact.
            </summary>
            <param name="contactObj">Contact to be set</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.DeleteContactInfo(CMS.OnlineMarketing.ContactInfo)">
            <summary>
            Deletes specified contact. To delete dependencies use ContactHelper.Delete() instead.
            </summary>
            <param name="contactObj">Contact to be deleted</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.DeleteContactInfo(System.Int32)">
            <summary>
            Deletes contact with specified ID. To delete dependencies use ContactHelper.Delete() instead.
            </summary>
            <param name="contactId">Contact ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.DeleteContactInfos(System.String)">
            <summary>
            Deletes all infos by stored procedure.
            </summary>
            <param name="whereCondition">Where condition</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.GetContacts(System.String,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Returns dataset of all contacts for specified site matching the specified parameters.
            </summary>       
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
            <param name="siteId">Site ID</param>        		
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.GetContacts(System.Int32)">
            <summary>
            Returns dataset of all contacts for specified site.
            </summary>
            <param name="siteId">Site ID</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.GetContactFullName(System.Int32)">
            <summary>
            Returns full contact name consisting of first, middle and last name.
            </summary>
            <param name="id">Contact info ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.GetContactFullName(CMS.OnlineMarketing.ContactInfo)">
            <summary>
            Returns full contact name consisting of first, middle and last name.
            </summary>
            <param name="ci">Contact info object</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.UpdateContactStatus(System.Int32,System.String)">
            <summary>
            Updates contact status ID of specified contacts.
            </summary>
            <param name="statusId">Contact status ID</param>
            <param name="where">Where condition</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.MoveRelations(System.Int32,System.Int32)">
            <summary>
            Moves activities, memberships, IPs, UserAgents and ContactGroup relations into parent contact.
            </summary>
            <param name="mergeIntoContactID">ID of parent contact</param>
            <param name="mergeFromContactID">ID of merging child contact</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.RemoveRelations(System.Int32,System.Int32)">
            <summary>
            Removes relations before object is deleted. Applicable only for merged contacts.
            </summary>
            <param name="contactID">Deleted contact ID</param>
            <param name="mergedWithContactID">Parent contact ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.SplitRelations(System.Int32,System.Int32)">
            <summary>
            Splits contact's related records.
            </summary>
            <param name="mergeContactID">ID of parent contact</param>
            <param name="splitContactID">ID of contact being splitted</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.DuplicateRelations(System.Int32,System.Int32,System.DateTime)">
            <summary>
            Duplicate contact's related records.
            </summary>
            <param name="parentContactID">ID of parent contact</param>
            <param name="mergedContactID">ID of contact being splitted</param>
            <param name="mergedContactWhen">DateTime when contact was merged</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.GetLastLogged(System.String[])">
            <summary>
            Returns contact from given set of ContactIDs which has last logged activity.
            </summary>
            <param name="values">List of Contact IDs</param>
            <returns>Returns ID of found ContactInfo</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.GetMostActive(System.String[])">
            <summary>
            Returns contact from given set of ContactIDs which has most activities.
            </summary>
            <param name="values">List of Contact IDs</param>
            <returns>Returns ID of found ContactInfo</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.SetContactBounces(System.Int32,System.Int32)">
            <summary>
            Sets the bounced e-mails counter to specified value for a contact.
            </summary>
            <param name="contactId">Contact ID</param>
            <param name="bounces">Number of bounced emails of the contact</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.AddContactBounce(System.Int32)">
            <summary>
            Incerements number of bounces by one for specified contact.
            </summary>
            <param name="contactId">Contact ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.AddContactBounceByEmail(System.String)">
            <summary>
            Incerements number of bounces by one for all contacts specified by e-mail address across all sites.
            </summary>
            <param name="email">E-mail address</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.MakeContactNotAnonymous(CMS.OnlineMarketing.ContactInfo)">
            <summary>
            If contact is anonymous then it is changed not to be anonymous.
            </summary>
            <param name="contact">COntact to be modified</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.GetContactsInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all contacts matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.GetContactInfoInternal(System.Int32)">
            <summary>
            Returns contact with specified ID.
            </summary>
            <param name="contactId">Contact ID</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.GetContactInfoInternal(System.Guid,System.String)">
            <summary>
            Returns contact with specified GUID.
            </summary>
            <param name="contactGuid">Contact GUID</param>                
            <param name="siteName">Site name</param>         
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.GetContactInfoInternal(System.Guid,System.Boolean,System.String)">
            <summary>
            Returns contact with specified GUID.
            </summary>
            <param name="contactGuid">Contact GUID</param>                
            <param name="merged">Merged contacts should be included</param>                
            <param name="siteName">Site name</param>         
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.SetContactInfoInternal(CMS.OnlineMarketing.ContactInfo)">
            <summary>
            Sets (updates or inserts) specified contact.
            </summary>
            <param name="contactObj">Contact to be set</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.DeleteContactInfoInternal(CMS.OnlineMarketing.ContactInfo)">
            <summary>
            Deletes specified contact.
            </summary>
            <param name="contactObj">Contact to be deleted</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.DeleteContactInfosInternal(System.String)">
            <summary>
            Deletes all contacts by specified ID. 
            </summary>
            <param name="where">Where condition</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.EvaluateGroups(CMS.OnlineMarketing.ContactInfo,System.Collections.Generic.List{System.String},System.Int32)">
            <summary>
            Evaluate dynamic contact groups and lead scoring groups.
            </summary>
            <param name="contact">Currently changed contact</param>
            <param name="changedProperties">List of properties which were changed</param>
            <param name="mergedInto">When splitting then we need to know ID of parent</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.GetContactsInternal(System.String,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Returns dataset of all contacts for specified site matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
            <param name="siteId">Site ID</param> 
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.UpdateContactStatusInternal(System.Int32,System.String)">
            <summary>
            Updates contact status ID of specified contacts.
            </summary>
            <param name="statusId">Contact status ID</param>
            <param name="where">Where condition</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.UpdateContactFromExternalData(CMS.SettingsProvider.BaseInfo,System.Boolean)">
            <summary>
            Updates contact information from record submitted through BizForm module - this requires form fields to be mapped to contact.
            </summary>
            <param name="source">Data class object with source data and mapping definition</param>
            <param name="allowOverwrite">If TRUE existing contact data can be overwritten otherwise only empty properties can be filled</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.UpdateContactFromExternalData(System.Int32,CMS.OnlineMarketing.MemberTypeEnum,System.Int32,System.Boolean)">
            <summary>
            Updates contact information from record submitted through BizForm module - this requires form fields to be mapped to contact.
            </summary>
            <param name="relatedId">Related ID of the object</param>
            <param name="memberType">Type of source object</param>
            <param name="contactId">Contact ID</param>
            <param name="allowOverwrite">If TRUE existing contact data can be overwritten otherwise only empty properties can be filled</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.UpdateContactFromExternalData(CMS.SettingsProvider.BaseInfo,System.Boolean,System.Int32)">
            <summary>
            Updates contact information from record submitted through BizForm module - this requires form fields to be mapped to contact.
            </summary>
            <param name="source">Data class object with source data and mapping definition</param>
            <param name="allowOverwrite">If TRUE existing contact data can be overwritten otherwise only empty properties can be filled</param>
            <param name="contactID">Contact ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.UpdateContactFromExternalData(CMS.SettingsProvider.BaseInfo,System.Boolean,CMS.OnlineMarketing.ContactInfo)">
            <summary>
            Updates contact information from record submitted through BizForm module - this requires form fields to be mapped to contact.
            </summary>
            <param name="source">Data class object with source data and mapping definition</param>
            <param name="allowOverwrite">If TRUE existing contact data can be overwritten otherwise only empty properties can be filled</param>
            <param name="contact">Optional. If null then current contact will be updated.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.GetCountryID(System.Object)">
            <summary>
            Helper method that returns country ID based on input value.
            </summary>
            <param name="value">Contains either int or string value (country ID or name)</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.GetStateID(System.Object)">
            <summary>
            Helper method that returns state ID based on input value.
            </summary>
            <param name="value">Contains either int or string value (state ID or name)</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.MapAddress(CMS.SettingsProvider.BaseInfo)">
            <summary>
            Updates contact information from customer's billing address.
            </summary>
            <param name="address">Customer's address</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.UpdateContactFromAddress(CMS.SettingsProvider.BaseInfo)">
            <summary>
            Updates contact info.
            </summary>
            <param name="address">Billing address</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.SetContactBouncesInternal(System.Int32,System.Int32)">
            <summary>
            Sets the bounced e-mails counter to specified value for a contact.
            </summary>
            <param name="contactId">Contact ID</param>
            <param name="bounces">Number of bounced emails of the contact</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.AddContactBounceInternal(System.Int32)">
            <summary>
            Incerements number of bounces by one for specified contact.
            </summary>
            <param name="contactId">Contact ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.AddContactBounceByEmailInternal(System.String)">
            <summary>
            Incerements number of bounces by one for all contacts specified by e-mail address across all sites.
            </summary>
            <param name="email">E-mail address</param>
        </member>
        <member name="T:CMS.OnlineMarketing.ContactListInfo">
            <summary>
            "Virtual" object for loading data from contact view.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContactListInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactListInfo.#ctor">
            <summary>
            Constructor - Creates an empty ContactListInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactListInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new ContactListInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactListInfo.GetData(CMS.SettingsProvider.QueryDataParameters,System.String,System.String,System.Int32,System.String,System.Boolean,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns the data according to the set of input parameters.
            </summary>
            <param name="parameters">Query parameters</param>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
            <param name="topN">Specifies number of returned records</param>        
            <param name="columns">Data columns to return</param>
            <param name="binaryData">If true, binary data are returned in the result (not applied)</param>
            <param name="offset">Index of first record to get</param>
            <param name="maxRecords">Maximum number of records to get. If maxRecords is zero or less, all records are returned (no paging is used)</param>
            <param name="totalRecords">Returns total number of available records</param>       
        </member>
        <member name="P:CMS.OnlineMarketing.ContactListInfo.ColumnNames">
            <summary>
            Gets the list of column names
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ContactRoleInfo">
            <summary>
            ContactRoleInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContactRoleInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactRoleInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactRoleInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactRoleInfo.#ctor">
            <summary>
            Constructor - Creates an empty ContactRoleInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactRoleInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new ContactRoleInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactRoleInfo.CheckPermissions(CMS.SettingsProvider.PermissionsEnum,System.String,CMS.SettingsProvider.IUserInfo)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactRoleInfo.ContactRoleDescription">
            <summary>
            Gets or sets the contact role description.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactRoleInfo.ContactRoleDisplayName">
            <summary>
            Gets or sets the contact role display name.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactRoleInfo.ContactRoleName">
            <summary>
            Gets or sets the contact role name.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactRoleInfo.ContactRoleSiteID">
            <summary>
            Gets or sets the contact role site ID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactRoleInfo.ContactRoleID">
            <summary>
            Gets or sets the contact role ID.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ContactRoleInfoProvider">
            <summary>
            Class providing ContactRoleInfo management.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactRoleInfoProvider.#ctor">
            <summary>
            Constructor using ID and codename Hashtables.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactRoleInfoProvider.GetContactRoles(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all contact roles matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactRoleInfoProvider.GetContactRoles(System.String,System.String)">
            <summary>
            Returns dataset of all contact roles matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactRoleInfoProvider.GetContactRoleInfo(System.Int32)">
            <summary>
            Returns contact role with specified ID.
            </summary>
            <param name="roleId">Contact role ID</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.ContactRoleInfoProvider.GetContactRoleInfo(System.String,System.String)">
            <summary>
            Returns contact role with specified name.
            </summary>
            <param name="roleName">Contact role name</param>                
            <param name="siteName">Site name</param>                
        </member>
        <member name="M:CMS.OnlineMarketing.ContactRoleInfoProvider.SetContactRoleInfo(CMS.OnlineMarketing.ContactRoleInfo)">
            <summary>
            Sets (updates or inserts) specified contact role.
            </summary>
            <param name="roleObj">Contact role to be set</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactRoleInfoProvider.DeleteContactRoleInfo(CMS.OnlineMarketing.ContactRoleInfo)">
            <summary>
            Deletes specified contact role.
            </summary>
            <param name="roleObj">Contact role to be deleted</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactRoleInfoProvider.DeleteContactRoleInfo(System.Int32)">
            <summary>
            Deletes contact role with specified ID.
            </summary>
            <param name="roleId">Contact role ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactRoleInfoProvider.GetContactRoles(System.String,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Returns dataset of all contact roles for specified site matching the specified parameters.
            </summary>       
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
            <param name="siteId">Site ID</param>        		
        </member>
        <member name="M:CMS.OnlineMarketing.ContactRoleInfoProvider.GetContactRoles(System.Int32)">
            <summary>
            Returns dataset of all contact roles for specified site.
            </summary>
            <param name="siteId">Site ID</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.ContactRoleInfoProvider.GetContactRolesInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all contact roles matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactRoleInfoProvider.GetContactRoleInfoInternal(System.Int32)">
            <summary>
            Returns contact role with specified ID.
            </summary>
            <param name="roleId">Contact role ID</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.ContactRoleInfoProvider.GetContactRoleInfoInternal(System.String,System.String)">
            <summary>
            Returns contact role with specified name.
            </summary>
            <param name="roleName">Contact role name</param>                
            <param name="siteName">Site name</param>         
        </member>
        <member name="M:CMS.OnlineMarketing.ContactRoleInfoProvider.SetContactRoleInfoInternal(CMS.OnlineMarketing.ContactRoleInfo)">
            <summary>
            Sets (updates or inserts) specified contact role.
            </summary>
            <param name="roleObj">Contact role to be set</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.ContactRoleInfoProvider.DeleteContactRoleInfoInternal(CMS.OnlineMarketing.ContactRoleInfo)">
            <summary>
            Deletes specified contact role.
            </summary>
            <param name="roleObj">Contact role to be deleted</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.ContactRoleInfoProvider.GetContactRolesInternal(System.String,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Returns dataset of all contact roles for specified site matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
            <param name="siteId">Site ID</param> 
        </member>
        <member name="T:CMS.OnlineMarketing.ContactStatusInfo">
            <summary>
            ContactStatusInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContactStatusInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactStatusInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactStatusInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactStatusInfo.#ctor">
            <summary>
            Constructor - Creates an empty ContactStatusInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactStatusInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new ContactStatusInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactStatusInfo.CheckPermissions(CMS.SettingsProvider.PermissionsEnum,System.String,CMS.SettingsProvider.IUserInfo)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactStatusInfo.ContactStatusDescription">
            <summary>
            Gets or set the contact status description.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactStatusInfo.ContactStatusName">
            <summary>
            Gets or set the contact status name.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactStatusInfo.ContactStatusSiteID">
            <summary>
            Gets or set the contact status site ID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactStatusInfo.ContactStatusDisplayName">
            <summary>
            Gets or set the contact status display name.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactStatusInfo.ContactStatusID">
            <summary>
            Gets or set the contact status ID.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ContactStatusInfoProvider">
            <summary>
            Class providing ContactStatusInfo management.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactStatusInfoProvider.#ctor">
            <summary>
            Constructor using ID and codename Hashtables.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactStatusInfoProvider.GetContactStatuses(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all contact statuses matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactStatusInfoProvider.GetContactStatuses(System.String,System.String)">
            <summary>
            Returns dataset of all contact statuses matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactStatusInfoProvider.GetContactStatusInfo(System.Int32)">
            <summary>
            Returns contact status with specified ID.
            </summary>
            <param name="statusId">Contact status ID</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.ContactStatusInfoProvider.GetContactStatusInfo(System.String,System.String)">
            <summary>
            Returns contact status with specified name.
            </summary>
            <param name="statusName">Contact status name</param>                
            <param name="siteName">Site name</param>                
        </member>
        <member name="M:CMS.OnlineMarketing.ContactStatusInfoProvider.SetContactStatusInfo(CMS.OnlineMarketing.ContactStatusInfo)">
            <summary>
            Sets (updates or inserts) specified contact status.
            </summary>
            <param name="statusObj">Contact status to be set</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactStatusInfoProvider.DeleteContactStatusInfo(CMS.OnlineMarketing.ContactStatusInfo)">
            <summary>
            Deletes specified contact status.
            </summary>
            <param name="statusObj">Contact status to be deleted</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactStatusInfoProvider.DeleteContactStatusInfo(System.Int32)">
            <summary>
            Deletes contact status with specified ID.
            </summary>
            <param name="statusId">Contact status ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactStatusInfoProvider.GetContactStatuses(System.String,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Returns dataset of all contact statuses for specified site matching the specified parameters.
            </summary>       
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
            <param name="siteId">Site ID</param>        		
        </member>
        <member name="M:CMS.OnlineMarketing.ContactStatusInfoProvider.GetContactStatuses(System.Int32)">
            <summary>
            Returns dataset of all contact statuses for specified site.
            </summary>
            <param name="siteId">Site ID</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.ContactStatusInfoProvider.GetContactStatusesInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all contact statuses matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactStatusInfoProvider.GetContactStatusInfoInternal(System.Int32)">
            <summary>
            Returns contact status with specified ID.
            </summary>
            <param name="statusId">Contact status ID</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.ContactStatusInfoProvider.GetContactStatusInfoInternal(System.String,System.String)">
            <summary>
            Returns contact status with specified name.
            </summary>
            <param name="statusName">Contact status name</param>                
            <param name="siteName">Site name</param>         
        </member>
        <member name="M:CMS.OnlineMarketing.ContactStatusInfoProvider.SetContactStatusInfoInternal(CMS.OnlineMarketing.ContactStatusInfo)">
            <summary>
            Sets (updates or inserts) specified contact status.
            </summary>
            <param name="statusObj">Contact status to be set</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.ContactStatusInfoProvider.DeleteContactStatusInfoInternal(CMS.OnlineMarketing.ContactStatusInfo)">
            <summary>
            Deletes specified contact status.
            </summary>
            <param name="statusObj">Contact status to be deleted</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.ContactStatusInfoProvider.GetContactStatusesInternal(System.String,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Returns dataset of all contact statuses for specified site matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
            <param name="siteId">Site ID</param> 
        </member>
        <member name="T:CMS.OnlineMarketing.IPInfo">
            <summary>
            IPInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.IPInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.IPInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.IPInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.IPInfo.#ctor">
            <summary>
            Constructor - Creates an empty IPInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.IPInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new IPInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="P:CMS.OnlineMarketing.IPInfo.IPID">
            <summary>
            Gets or sets the ID of this IP address.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.IPInfo.IPAddress">
            <summary>
            Gets or sets the IP address.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.IPInfo.IPCreated">
            <summary>
            Gets or sets the date and time when this IP address was created.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.IPInfo.IPOriginalContactID">
            <summary>
            Gets or sets the ID of original contact for this IP address.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.IPInfo.IPActiveContactID">
            <summary>
            Gets or sets the ID of active contact for this IP address.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.IPInfoProvider">
            <summary>
            Class providing IPInfo management.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.IPInfoProvider.GetIps(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all ips matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.OnlineMarketing.IPInfoProvider.GetIps(System.String,System.String)">
            <summary>
            Returns dataset of all ips matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
        </member>
        <member name="M:CMS.OnlineMarketing.IPInfoProvider.GetIPInfo(System.Int32)">
            <summary>
            Returns ip with specified ID.
            </summary>
            <param name="ipId">Ip ID</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.IPInfoProvider.SetIPInfo(CMS.OnlineMarketing.IPInfo)">
            <summary>
            Sets (updates or inserts) specified ip.
            </summary>
            <param name="ipObj">Ip to be set</param>
        </member>
        <member name="M:CMS.OnlineMarketing.IPInfoProvider.DeleteIPInfo(CMS.OnlineMarketing.IPInfo)">
            <summary>
            Deletes specified ip.
            </summary>
            <param name="ipObj">Ip to be deleted</param>
        </member>
        <member name="M:CMS.OnlineMarketing.IPInfoProvider.DeleteIPInfo(System.Int32)">
            <summary>
            Deletes ip with specified ID.
            </summary>
            <param name="ipId">Ip ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.IPInfoProvider.GetIpsInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all ips matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.OnlineMarketing.IPInfoProvider.GetIPInfoInternal(System.Int32)">
            <summary>
            Returns ip with specified ID.
            </summary>
            <param name="ipId">Ip ID</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.IPInfoProvider.SetIPInfoInternal(CMS.OnlineMarketing.IPInfo)">
            <summary>
            Sets (updates or inserts) specified ip.
            </summary>
            <param name="ipObj">Ip to be set</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.IPInfoProvider.DeleteIPInfoInternal(CMS.OnlineMarketing.IPInfo)">
            <summary>
            Deletes specified ip.
            </summary>
            <param name="ipObj">Ip to be deleted</param>        
        </member>
        <member name="T:CMS.OnlineMarketing.MembershipInfo">
            <summary>
            MembershipInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MembershipInfo.TYPEINFOUSER">
            <summary>
            Type information for user membership relations.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MembershipInfo.TYPEINFOSUBSCRIBER">
            <summary>
            Type information for newsletter subscriber membership relations.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MembershipInfo.TYPEINFOCUSTOMER">
            <summary>
            Type information for ecommerce customer membership relations.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MembershipInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MembershipInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MembershipInfo.GetExisting">
            <summary>
            Returns the existing object based on current object data.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CMS.OnlineMarketing.MembershipInfo.#ctor">
            <summary>
            Constructor - Creates an empty MembershipInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MembershipInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new MembershipInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="P:CMS.OnlineMarketing.MembershipInfo.MembershipID">
            <summary>
            Gets or sets the ID of relationship.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MembershipInfo.OriginalContactID">
            <summary>
            Gets or sets the ID of the original contact.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MembershipInfo.ActiveContactID">
            <summary>
            Gets or sets the ID of the active contact.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MembershipInfo.MemberType">
            <summary>
            Gets or sets the type of object this contact is related to.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MembershipInfo.RelatedID">
            <summary>
            Gets or sets the ID of the related object.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MembershipInfo.MembershipGUID">
            <summary>
            Gets or sets the membership's unique identifier.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MembershipInfo.MembershipCreated">
            <summary>
            Gets or sets the date and time the membership object was created.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MembershipInfo.TypeInfo">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MembershipInfo.ObjectType">
            <summary>
            Object type.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.MembershipInfoProvider">
            <summary>
            Class providing MembershipInfo management.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MembershipInfoProvider.GetRelationships(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all relationships among contacts, related objects and object types matching the specified criteria.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MembershipInfoProvider.GetRelationships(System.String,System.String)">
            <summary>
            Returns dataset of all relationships among contacts, related objects and object types matching the specified criteria.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MembershipInfoProvider.SetRelationship(System.Int32,CMS.OnlineMarketing.MemberTypeEnum,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Adds specified relationship among specified contact, related object and object type.
            </summary>
            <param name="relatedId">ID of related object</param>
            <param name="memberType">Type of object</param>
            <param name="originalContactId">Contact ID</param>
            <param name="activeContactId">Contact ID</param>
            <param name="mergeUsers">Indicates if user contacts should be merged</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MembershipInfoProvider.SetRelationship(CMS.OnlineMarketing.MemberTypeEnum,CMS.SettingsProvider.BaseInfo,CMS.OnlineMarketing.ContactInfo,System.Boolean)">
            <summary>
            Adds specified relationship among specified contact, related object and object type.
            </summary>
            <param name="memberType">Type of object</param>
            <param name="info">Base info of related object</param>
            <param name="currentContact">Contact info</param>
            <param name="mergeUsers">Indicates if users should be merged</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MembershipInfoProvider.DeleteRelationship(System.Int32)">
            <summary>
            Deletes specified relationship among specified contact, related object and object type.
            </summary>
            <param name="membershipId">Membership ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MembershipInfoProvider.DeleteRelationship(System.Int32,System.Int32)">
            <summary>
            Deletes specified relationship among specified contact, related object and object type.
            </summary>
            <param name="membershipId">Membership ID</param>
            <param name="contactId">Contact ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MembershipInfoProvider.HasRelationship(System.Int32)">
            <summary>
            Check whether given contact has relationship.
            </summary>
            <param name="contactId">Contact ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MembershipInfoProvider.GetMembershipInfo(System.Int32)">
            <summary>
            Returns relationship among specified contact, related object and object type.
            </summary>
            <param name="membershipID">ID of membership record</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MembershipInfoProvider.GetMembershipInfo(System.Int32,System.Int32,System.Int32,CMS.OnlineMarketing.MemberTypeEnum)">
            <summary>
            Returns relationship among specified contact, related object and object type.
            </summary>
            <param name="activeContactId">Active contact ID</param>
            <param name="originalContactId">Original contact ID</param>
            <param name="relatedObjectId">Related object ID</param>
            <param name="memberType">Member type</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MembershipInfoProvider.SetMembershipInfo(CMS.OnlineMarketing.MembershipInfo)">
            <summary>
            Sets relationship among specified contact, related object and object type.
            </summary>
            <param name="infoObj">Contact-related object-object type relationship to be set</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MembershipInfoProvider.DeleteMembershipInfo(CMS.OnlineMarketing.MembershipInfo)">
            <summary>
            Deletes relationship among specified contact, related object and object type.
            </summary>
            <param name="infoObj">Contact-related object-object type relationship to be deleted</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MembershipInfoProvider.DeleteMembershipInfo(System.Int32)">
            <summary>
            Deletes relationship among specified contact, related object and object type.
            </summary>
            <param name="membershipID">ID of record</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MembershipInfoProvider.DeleteMembershipInfo(System.Int32,System.Int32,System.Int32,CMS.OnlineMarketing.MemberTypeEnum)">
            <summary>
            Deletes relationship among specified contact, related object and object type.
            </summary>
            <param name="activeContactId">Active contact ID</param>
            <param name="originalContactId">Original contact ID</param>
            <param name="relatedObjectId">Related object ID</param>
            <param name="memberType">Member type</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MembershipInfoProvider.GetRelationshipsInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all relationships among contacts, related objects and object types matching the specified criteria.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MembershipInfoProvider.GetMembershipInfoInternal(System.Int32)">
            <summary>
            Returns relationship among specified contact, related object and object type.
            </summary>
            <param name="membershipID">ID of relation</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MembershipInfoProvider.GetMembershipInfoInternal(System.Int32,System.Int32,System.Int32,CMS.OnlineMarketing.MemberTypeEnum)">
            <summary>
            Returns relationship among specified contact, related object and object type.
            </summary>
            <param name="activeContactId">Active contact ID</param>
            <param name="originalContactId">Original contact ID</param>
            <param name="relatedObjectId">Related object ID</param>
            <param name="memberType">Member type</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MembershipInfoProvider.SetMembershipInfoInternal(CMS.OnlineMarketing.MembershipInfo)">
            <summary>
            Sets relationship among specified contact, related object and object type.
            </summary>
            <param name="infoObj">Contact-related object-object type relationship to be set</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MembershipInfoProvider.DeleteMembershipInfoInternal(CMS.OnlineMarketing.MembershipInfo)">
            <summary>
            Deletes relationship among specified contact, related object and object type.
            </summary>
            <param name="infoObj">Contact-related object-object type relationship to be deleted</param>
        </member>
        <member name="T:CMS.OnlineMarketing.ContactHelper">
            <summary>
            Class used for merging, splitting and deleting contacts.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContactHelper.ANONYMOUS">
            <summary>
            Prefix for anonymous contacts.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContactHelper.MERGED">
            <summary>
            Prefix for contacts created from merging.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContactHelper.REPLACED_BRACKET_LEFT">
            <summary>
            Replaced left bracket.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContactHelper.REPLACED_BRACKET_RIGHT">
            <summary>
            Replaced right bracket.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactHelper.Merge(CMS.OnlineMarketing.ContactInfo,System.Data.DataSet,System.Collections.Hashtable,System.Collections.Hashtable)">
            <summary>
            Will merge contacts into another contact. If contacts are from different sites then new global contact will be created.
            </summary>
            <param name="mergeInto">Optional. If not specified then new contact will be created</param>
            <param name="mergeContacts">Dataset of ContactInfo objects to be merged</param>
            <param name="ACcollisionResult">Optional. Hashtable containing result of account-contact collision results. Contains 'AccountID' keys and 'ContactRoleID' values.</param>
            <param name="CGresult">Optional. Hashtable containing result of contact groups which should be added to parent contact.</param>
            <returns>If merged contacts are from different sites then newly created contact will be returned. Otherwise contact passed as mergeInto parameter will be returned.</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactHelper.Merge(CMS.OnlineMarketing.ContactInfo,System.Collections.Generic.List{CMS.OnlineMarketing.ContactInfo},System.Collections.Hashtable,System.Collections.Hashtable)">
            <summary>
            Will merge contacts into another contact. If contacts are from different sites then new global contact will be created.
            </summary>
            <param name="mergeInto">Optional. If not specified then new contact will be created</param>
            <param name="mergeContacts">List of ContactInfo object to be merged</param>
            <param name="ACcollisionResult">Optional. Hashtable containing result of collision results. Contains 'AccountID' keys and 'ContactRoleID' values.</param>
            <param name="CGresult">Optional. Hashtable containing result of contact groups which should be added to parent contact.</param>
            <returns>If merged contacts are from different sites then newly created contact will be returned. Otherwise contact passed as mergeInto parameter will be returned.</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactHelper.Merge(CMS.OnlineMarketing.ContactInfo,CMS.OnlineMarketing.ContactInfo,System.Collections.Hashtable,System.Collections.Hashtable)">
            <summary>
            Merges one contact into another contact. Contacts must be on the same site (or global).
            </summary>
            <param name="mergeInto">Will be merging into this contact. Must be on same site as 'mergeFrom' contact or global</param>
            <param name="mergeFrom">Will be merged. Must be as 'mergeInto' contact or global if 'mergeInto' is global</param>
            <param name="ACcollisionResult">Optional. Hashtable containing result of collision results. Contains 'AccountID' keys and 'ContactRoleID' values.</param>
            <param name="CGresult">Optional. Hashtable containing result of contact groups which should be added to parent contact.</param>
            <returns>Returns TRUE if merging was successful.</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactHelper.MergeIntoGlobalContact(CMS.OnlineMarketing.ContactInfo,CMS.OnlineMarketing.ContactInfo,System.Collections.Hashtable,System.Collections.Hashtable)">
            <summary>
            Merging into global contact.
            </summary>
            <param name="mergeInto">Must be a global contact</param>
            <param name="mergeFrom">May be global or site contact</param>
            <param name="ACcollisionResult">Optional. Hashtable containing result of collision results. Contains 'AccountID' keys and 'ContactRoleID' values.</param>
            <param name="CGresult">Optional. Hashtable containing result of contact groups which should be added to parent contact.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactHelper.MergeIntoSiteContact(CMS.OnlineMarketing.ContactInfo,CMS.OnlineMarketing.ContactInfo,System.Collections.Hashtable,System.Collections.Hashtable)">
            <summary>
            Merging two contacts from the same site.
            </summary>
            <param name="mergeInto">Merging into this contact. Must be a site contact</param>
            <param name="mergeFrom">Merging this contact. Must be a site contact</param>
            <param name="ACcollisionResult">Optional. Hashtable containing result of collision results. Contains 'AccountID' keys and 'ContactRoleID' values.</param>
            <param name="CGresult">Optional. Hashtable containing result of contact groups which should be added to parent contact.</param>
            <returns>Returns TRUE if merging was successful.</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactHelper.MergeAccountContactRelations(CMS.OnlineMarketing.ContactInfo,CMS.OnlineMarketing.ContactInfo,System.Collections.Hashtable)">
            <summary>
            Changes all Account - Contact relations assigned to 'mergeFrom' to be newly created in 'mergeInto' contact
            if not already exist.
            </summary>
            <param name="mergeInto">Account - Contact of merging parent contact</param>
            <param name="mergeFrom">Relation of merging child contact</param>
            <param name="ACcollisionResult">Optional. Hashtable containing result of collision results. Contains 'AccountID' keys and 'ContactRoleID' values.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactHelper.MergeContactGroupRelations(CMS.OnlineMarketing.ContactInfo,CMS.OnlineMarketing.ContactInfo,System.Collections.Hashtable)">
            <summary>
            Compares contact group relations of merged and parent contact and creates new relations by default or uses values determined by user.
            </summary>
            <param name="mergeInto">Parent contact</param>
            <param name="mergeFrom">Child contact</param>
            <param name="CGcollisionResult">Optional. Hashtable containing result of user choice in merging dialog. Contains 'ContactGroupID' keys and 'true/false' values. Default value is TRUE if key is not contained.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactHelper.CreateAccountContactRelation(System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates new Account - Contact relation.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactHelper.CreateContactGroupMemberRelation(System.Int32,System.Int32)">
            <summary>
            Creates new ContactGroup - Contact relation.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactHelper.UpdateAccountContactRelation(System.Data.DataRow,System.Int32)">
            <summary>
            Updates Account - Contact relation.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactHelper.GetMergedName">
            <summary>
            Returns name for newly created merged contact.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactHelper.Split(CMS.OnlineMarketing.ContactInfo,System.Collections.ArrayList,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Splits contacts.
            </summary>
            <param name="parentContact">Parent contact from which contacts are splitted</param>
            <param name="contacts">List of contacts to split</param>
            <param name="copyMissingFields">Indicates if empty fields on split contact should be filled with fields from merged contact</param>
            <param name="copyActivities">Indicates if activities, IPs, membership relations</param>
            <param name="removeAccounts">Indicates if accounts related to splitted contact should be removed from parent contact</param>
            <param name="removeContactGroups">Indicates if contact groups related to splitted contact should be removed from parent contact</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactHelper.Split(CMS.OnlineMarketing.ContactInfo,System.Data.DataSet,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Splits contacts.
            </summary>
            <param name="parentContact">Parent contact from which contacts are splitted</param>
            <param name="contacts">List of contacts to split</param>
            <param name="copyMissingFields">Indicates if empty fields on split contact should be filled with fields from merged contact</param>
            <param name="copyActivities">Indicates if activities, IPs, membership relations</param>
            <param name="removeAccounts">Indicates if accounts related to splitted contact should be removed from parent contact</param>
            <param name="removeContactGroups">Indicates if contact groups related to splitted contact should be removed from parent contact</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactHelper.Split(CMS.OnlineMarketing.ContactInfo,System.Collections.Generic.List{CMS.OnlineMarketing.ContactInfo},System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Splits contacts.
            </summary>
            <param name="parentContact">Parent contact from which contacts are splitted</param>
            <param name="contacts">List of contacts to split</param>
            <param name="copyMissingFields">Indicates if empty fields on split contact should be filled with fields from merged contact</param>
            <param name="copyActivities">Indicates if activities, IPs, membership relations</param>
            <param name="removeAccounts">Indicates if accounts related to splitted contact should be removed from parent contact</param>
            <param name="removeContactGroups">Indicates if contact groups related to splitted contact should be removed from parent contact</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactHelper.SplitFromContact(CMS.OnlineMarketing.ContactInfo,CMS.OnlineMarketing.ContactInfo,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Splits merged contact from another contact.
            </summary>
            <param name="parentContact">Parent contact under which is contact merged</param>
            <param name="mergedContact">Merged contact</param>
            <param name="copyMissingFields">Indicates if fields which are empty on merged contact should be filled with data from parent account</param>
            <param name="copyActivities">Indicates if fields which are empty on merged contact should be filled with data from parent account</param>
            <param name="removeAccounts">Indicates if accounts related to splitted contact should be removed from parent contact</param>
            <param name="removeContactGroups">Indicates if contact groups related to splitted contact should be removed from parent contact</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactHelper.CopyParentActivities(CMS.OnlineMarketing.ContactInfo,CMS.OnlineMarketing.ContactInfo)">
            <summary>
            Copies activities which were created on parent contact after contacts were merged.
            </summary>
            <param name="parentContact">Parent contact under which is contact merged</param>
            <param name="mergedContact">Merged site contact</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactHelper.CopyMissingFields(CMS.OnlineMarketing.ContactInfo,CMS.OnlineMarketing.ContactInfo)">
            <summary>
            Copies fields which are filled in parent contact and are empty in merged contact.
            </summary>
            <param name="sourceContact">Source of data</param>
            <param name="targetContact">Fields are filled in this contact</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactHelper.CopyField(System.Object,System.Object,CMS.FormEngine.FormFieldDataTypeEnum)">
            <summary>
            Copy field specified by its data type.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactHelper.CopyStringField(System.String,System.String)">
            <summary>
            Copies string field content.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactHelper.CopyIntegerField(System.Int32,System.Int32)">
            <summary>
            Copies integer field content.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactHelper.CopyDateTimeField(System.DateTime,System.DateTime)">
            <summary>
            Copies DateTime field content.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactHelper.SplitRecords(CMS.OnlineMarketing.ContactInfo,CMS.OnlineMarketing.ContactInfo,System.Boolean)">
            <summary>
            Recursively loops through all contacts merged into 'parentContact' and changes all records to point to 'splitContact'.
            </summary>
            <param name="mergedContact">Contacts placed under 'splitContact'</param>
            <param name="splitContact">Contact being splitted</param>
            <param name="splitFromGlobal">Indicates if contact is splited from global</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactHelper.DeleteAccountRelations(CMS.OnlineMarketing.ContactInfo,CMS.OnlineMarketing.ContactInfo)">
            <summary>
            Remove account-contact relations from parent contact when relation to account is on merged contact as well.
            </summary>
            <param name="parentContact">Parent contact</param>
            <param name="mergedContact">Contact being splitted</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactHelper.DeleteContactGroupRelations(CMS.OnlineMarketing.ContactInfo,CMS.OnlineMarketing.ContactInfo)">
            <summary>
            Remove contact group-contact relations from parent contact when relation to contact group is on merged contact as well.
            </summary>
            <param name="parentContact">Parent contact</param>
            <param name="mergedContact">Contact being splitted</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactHelper.Delete(CMS.OnlineMarketing.ContactInfo,System.Boolean,System.Boolean)">
            <summary>
            Deletes contact. All related records are moved to parent contact or deleted.
            </summary>
            <param name="contact">Contact to be deleted</param>
            <param name="deleteMerged">Indicates if merged child contacts should be deleted as well or will be splitted before deleting parent contact.</param>
            <param name="moveActivities">Indicates if activities, relationships, IPs and UserAgents created on merged contact should be moved to parent contact.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactHelper.GetSafeArray(System.Collections.ArrayList)">
            <summary>
            Converts all selected items of arraylist to integer array to avoid possible sql injection. Then returns string array.
            </summary>
            <returns>Returns string array.</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactHelper.GetSafeArray(System.String[])">
            <summary>
            Converts all selected items of arraylist to integer array to avoid possible sql injection. Then returns string array.
            </summary>
            <returns>Returns string array.</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactHelper.GetContactListInfos(CMS.SettingsProvider.QueryDataParameters,System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns ContactListInfos for specified parameters.
            </summary>
            <param name="parameters">Query parameters</param>
            <param name="where">SQL WHERE condition</param>
            <param name="orderBy">SQL ORDER BY parameters</param>
            <param name="topN">SQL TOP N parameters</param>
            <param name="columns">Selected columns</param>
            <returns>Returns DataSet</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactHelper.GetEmailDomain(System.String)">
            <summary>
            Returns email domain name.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactHelper.MergeContactsForRelations(System.Int32,CMS.OnlineMarketing.MemberTypeEnum,System.Boolean,CMS.OnlineMarketing.ContactInfo)">
            <summary>
            Merges multiple contacts which are related to customer or subscriber. Doesn't merge relations to user - this is done in OnlineMarketingContext automaticaly.
            Merges contacts only when multiple contacts exists on single site. When multiple contacts exists on multiple sites then global contact is created.
            </summary>
            <param name="relatedID">ID of related object</param>
            <param name="memberType">Type of related object</param>
            <param name="mergeUsers">Indicates if users should be merged</param>
            <param name="currentContact">Current contact</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactHelper.GetNewContact(System.String,System.Boolean,System.Int32)">
            <summary>
            Creates and returns new anonymous contact.
            </summary>
            <returns>Returns new ContactInfo</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactHelper.GetName(System.String,System.Int32)">
            <summary>
            Returns name for newly created anonymous contact.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactHelper.EscapeString(System.String)">
            <summary>
            Escapes SQL string for use in dataset row filtering
            </summary>
            <param name="text">Text to be escaped</param>
            <returns>Returns escaped string</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactHelper.AuthorizedReadContact(System.Int32,System.Boolean)">
            <summary>
            Indicates if current user is authorized for site contacts.
            </summary>
            <param name="siteID">SiteID of an contact</param>
            <param name="noPermissionRedirect">Indicates if redirect should be done when not enough permissions</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactHelper.AuthorizedReadContact(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Indicates if current user is authorized for site contacts.
            </summary>
            <param name="siteID">SiteID of an contact</param>
            <param name="noPermissionRedirect">Indicates if redirect should be done when not enough permissions</param>
            <param name="isSiteManager">Indicates if current context is in site manager</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactHelper.AuthorizedModifyContact(System.Int32,System.Boolean)">
            <summary>
            Returns if current user is authorized to modify contact.
            </summary>
            <param name="siteID">SiteID of an contact</param>
            <param name="noPermissionRedirect">Indicates if redirect should be done when not enough permissions</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactHelper.AuthorizedModifyContact(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Returns if current user is authorized to modify contact.
            </summary>
            <param name="siteID">SiteID of an contact</param>
            <param name="noPermissionRedirect">Indicates if redirect should be done when not enough permissions</param>
            <param name="isSiteManager">Indicates if current context is in site manager</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactHelper.AuthorizedForObject(System.Int32,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Returns true if user is authorized per resource
            </summary>
            <param name="siteID">Object's site ID</param>
            <param name="permissionSite">Name of the permission for site objects</param>
            <param name="permissionGlobal">Name of the permission for global objects</param>
            <param name="globalSetting">Name of settings for global objects</param>
            <param name="noPermissionRedirect">Indicates if redirect should be done when not enough permissions</param>
            <returns>Returns TRUE if user is authorized for the object</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactHelper.AuthorizedForObject(System.Int32,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Returns true if user is authorized per resource
            </summary>
            <param name="siteID">Object's site ID</param>
            <param name="permissionSite">Name of the permission for site objects</param>
            <param name="permissionGlobal">Name of the permission for global objects</param>
            <param name="globalSetting">Name of settings for global objects</param>
            <param name="noPermissionRedirect">Indicates if redirect should be done when not enough permissions</param>
            <param name="isSiteManager">Indicates if current context is in site manager</param>
            <returns>Returns TRUE if user is authorized for the object</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactHelper.ObjectSiteID(System.Object)">
            <summary>
            Returns Site ID of contact.
            </summary>
            <param name="contact">Contact info object</param>
            <returns>Returns site ID. Returns -1 when conversion of object fails.</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactHelper.MergeContactsForSubscriberOrCustomer(System.Int32,CMS.OnlineMarketing.MemberTypeEnum,CMS.OnlineMarketing.ContactInfo)">
            <summary>
            Merges contacts which are related to specific newsletter subscriber or customer.
            </summary>
            <param name="relatedId">ID of the related object</param>
            <param name="memberType">Type of the object</param>
            <param name="currentContact">Current contact</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactHelper.MergeUserSiteContacts(System.Int32,CMS.OnlineMarketing.ContactInfo)">
            <summary>
            Merges contacts on same site which are related to specified user.
            </summary>
            <param name="userId">User ID</param>
            <param name="currentContact">Current contact</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactHelper.MergeContactsForUserIntoGlobal(System.Int32)">
            <summary>
            Merges site contacts into global contact when specified user has contacts on multiple sites.
            </summary>
            <param name="userID">User ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactHelper.UserContactsOnMultipleSites(System.Int32,System.Data.DataSet@)">
            <summary>
            Returns user has contacts on multiple sites.
            </summary>
            <param name="userID">User ID</param>
            <param name="contacts">Dataset with contacts</param>
            <returns>Returns -1 if contacts should not be merged. Returns 0 if no global contact exists and contacts should be merged. Otherwise returns ID of single global contact.</returns>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactHelper.IsSiteManager">
            <summary>
            Indicates if control is placed in Site manager.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.PageVisitInfo">
            <summary>
            PageVisitInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.PageVisitInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.PageVisitInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.PageVisitInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.PageVisitInfo.#ctor">
            <summary>
            Constructor - Creates an empty PageVisitInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.PageVisitInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new PageVisitInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="P:CMS.OnlineMarketing.PageVisitInfo.PageVisitID">
            <summary>
            Gets or sets the ID of the page visit.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.PageVisitInfo.PageVisitMVTCombinationName">
            <summary>
            Gets or sets the name of the MVT combination for this page visit.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.PageVisitInfo.PageVisitDetail">
            <summary>
            Gets or sets the querystring part of the referer URL for this page visit.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.PageVisitInfo.PageVisitABVariantName">
            <summary>
            Gets or sets the name of the AB variant for this page visit.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.PageVisitInfo.PageVisitActivityID">
            <summary>
            Gets or sets the ID of the page visit activity.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.PageVisitInfoProvider">
            <summary>
            Class providing PageVisitInfo management.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.PageVisitInfoProvider.GetPageVisits(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all page visits matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.OnlineMarketing.PageVisitInfoProvider.GetPageVisits(System.String,System.String)">
            <summary>
            Returns dataset of all page visits matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
        </member>
        <member name="M:CMS.OnlineMarketing.PageVisitInfoProvider.GetPageVisitInfo(System.Int32)">
            <summary>
            Returns page visit with specified ID.
            </summary>
            <param name="visitId">Page visit ID</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.PageVisitInfoProvider.GetPageVisitInfo(System.String)">
            <summary>
            Returns page visit with specified name.
            </summary>
            <param name="visitName">Page visit name</param>                
        </member>
        <member name="M:CMS.OnlineMarketing.PageVisitInfoProvider.GetPageVisitInfoByActivityID(System.Int32)">
            <summary>
            Returns page visit foe the given activity ID.
            </summary>
            <param name="activityId">Activity ID</param>    
        </member>
        <member name="M:CMS.OnlineMarketing.PageVisitInfoProvider.SetPageVisitInfo(CMS.OnlineMarketing.PageVisitInfo)">
            <summary>
            Sets (updates or inserts) specified page visit.
            </summary>
            <param name="visitObj">Page visit to be set</param>
        </member>
        <member name="M:CMS.OnlineMarketing.PageVisitInfoProvider.DeletePageVisitInfo(CMS.OnlineMarketing.PageVisitInfo)">
            <summary>
            Deletes specified page visit.
            </summary>
            <param name="visitObj">Page visit to be deleted</param>
        </member>
        <member name="M:CMS.OnlineMarketing.PageVisitInfoProvider.DeletePageVisitInfo(System.Int32)">
            <summary>
            Deletes page visit with specified ID.
            </summary>
            <param name="visitId">Page visit ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.PageVisitInfoProvider.GetPageVisitsInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all page visits matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.OnlineMarketing.PageVisitInfoProvider.GetPageVisitInfoInternal(System.Int32)">
            <summary>
            Returns page visit with specified ID.
            </summary>
            <param name="visitId">Page visit ID</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.PageVisitInfoProvider.GetPageVisitInfoInternal(System.String)">
            <summary>
            Returns page visit with specified name.
            </summary>
            <param name="visitName">Page visit name</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.PageVisitInfoProvider.SetPageVisitInfoInternal(CMS.OnlineMarketing.PageVisitInfo)">
            <summary>
            Sets (updates or inserts) specified page visit.
            </summary>
            <param name="visitObj">Page visit to be set</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.PageVisitInfoProvider.DeletePageVisitInfoInternal(CMS.OnlineMarketing.PageVisitInfo)">
            <summary>
            Deletes specified page visit.
            </summary>
            <param name="visitObj">Page visit to be deleted</param>        
        </member>
        <member name="T:CMS.OnlineMarketing.SearchInfo">
            <summary>
            SearchInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.SearchInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.SearchInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.SearchInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.SearchInfo.#ctor">
            <summary>
            Constructor - Creates an empty SearchInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.SearchInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new SearchInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="P:CMS.OnlineMarketing.SearchInfo.SearchProvider">
            <summary>
            Gets or sets the search provider.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.SearchInfo.SearchID">
            <summary>
            Gets or sets the search ID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.SearchInfo.SearchActivityID">
            <summary>
            Gets or sets the ID of search activity.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.SearchInfo.SearchKeywords">
            <summary>
            Gets or sets the keywords for search.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.SearchInfoProvider">
            <summary>
            Class providing SearchInfo management.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.SearchInfoProvider.GetSearches(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all searches matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.OnlineMarketing.SearchInfoProvider.GetSearches(System.String,System.String)">
            <summary>
            Returns dataset of all searches matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
        </member>
        <member name="M:CMS.OnlineMarketing.SearchInfoProvider.GetSearchInfo(System.Int32)">
            <summary>
            Returns search with specified ID.
            </summary>
            <param name="searchId">Search ID</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.SearchInfoProvider.GetSearchInfoByActivityID(System.Int32)">
            <summary>
            Returns search info for the specified activity.
            </summary>
            <param name="activityId">Activity ID</param>    
        </member>
        <member name="M:CMS.OnlineMarketing.SearchInfoProvider.SetSearchInfo(CMS.OnlineMarketing.SearchInfo)">
            <summary>
            Sets (updates or inserts) specified search.
            </summary>
            <param name="searchObj">Search to be set</param>
        </member>
        <member name="M:CMS.OnlineMarketing.SearchInfoProvider.DeleteSearchInfo(CMS.OnlineMarketing.SearchInfo)">
            <summary>
            Deletes specified search.
            </summary>
            <param name="searchObj">Search to be deleted</param>
        </member>
        <member name="M:CMS.OnlineMarketing.SearchInfoProvider.DeleteSearchInfo(System.Int32)">
            <summary>
            Deletes search with specified ID.
            </summary>
            <param name="searchId">Search ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.SearchInfoProvider.GetSearchesInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all searches matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.OnlineMarketing.SearchInfoProvider.GetSearchInfoInternal(System.Int32)">
            <summary>
            Returns search with specified ID.
            </summary>
            <param name="searchId">Search ID</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.SearchInfoProvider.SetSearchInfoInternal(CMS.OnlineMarketing.SearchInfo)">
            <summary>
            Sets (updates or inserts) specified search.
            </summary>
            <param name="searchObj">Search to be set</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.SearchInfoProvider.DeleteSearchInfoInternal(CMS.OnlineMarketing.SearchInfo)">
            <summary>
            Deletes specified search.
            </summary>
            <param name="searchObj">Search to be deleted</param>        
        </member>
        <member name="T:CMS.OnlineMarketing.UserAgentInfo">
            <summary>
            UserAgentInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.UserAgentInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.UserAgentInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.UserAgentInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.UserAgentInfo.#ctor">
            <summary>
            Constructor - Creates an empty UserAgentInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.UserAgentInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new UserAgentInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="P:CMS.OnlineMarketing.UserAgentInfo.UserAgentActiveContactID">
            <summary>
            Gets or sets the ID of active contact for this user agent.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.UserAgentInfo.UserAgentOriginalContactID">
            <summary>
            Gets or sets the ID of original contact for this user agent.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.UserAgentInfo.UserAgentString">
            <summary>
            Gets or sets the user agent string.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.UserAgentInfo.UserAgentID">
            <summary>
            Gets or sets the user agent's ID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.UserAgentInfo.UserAgentCreated">
            <summary>
            Gets or sets the date and time when this UserAgent was created.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.UserAgentInfoProvider">
            <summary>
            Class providing UserAgentInfo management.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.UserAgentInfoProvider.GetUserAgents(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all user agents matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.OnlineMarketing.UserAgentInfoProvider.GetUserAgents(System.String,System.String)">
            <summary>
            Returns dataset of all user agents matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
        </member>
        <member name="M:CMS.OnlineMarketing.UserAgentInfoProvider.GetUserAgentInfo(System.Int32)">
            <summary>
            Returns user agent with specified ID.
            </summary>
            <param name="agentId">User agent ID</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.UserAgentInfoProvider.SetUserAgentInfo(CMS.OnlineMarketing.UserAgentInfo)">
            <summary>
            Sets (updates or inserts) specified user agent.
            </summary>
            <param name="agentObj">User agent to be set</param>
        </member>
        <member name="M:CMS.OnlineMarketing.UserAgentInfoProvider.DeleteUserAgentInfo(CMS.OnlineMarketing.UserAgentInfo)">
            <summary>
            Deletes specified user agent.
            </summary>
            <param name="agentObj">User agent to be deleted</param>
        </member>
        <member name="M:CMS.OnlineMarketing.UserAgentInfoProvider.DeleteUserAgentInfo(System.Int32)">
            <summary>
            Deletes user agent with specified ID.
            </summary>
            <param name="agentId">User agent ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.UserAgentInfoProvider.GetUserAgentsInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all user agents matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.OnlineMarketing.UserAgentInfoProvider.GetUserAgentInfoInternal(System.Int32)">
            <summary>
            Returns user agent with specified ID.
            </summary>
            <param name="agentId">User agent ID</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.UserAgentInfoProvider.SetUserAgentInfoInternal(CMS.OnlineMarketing.UserAgentInfo)">
            <summary>
            Sets (updates or inserts) specified user agent.
            </summary>
            <param name="agentObj">User agent to be set</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.UserAgentInfoProvider.DeleteUserAgentInfoInternal(CMS.OnlineMarketing.UserAgentInfo)">
            <summary>
            Deletes specified user agent.
            </summary>
            <param name="agentObj">User agent to be deleted</param>        
        </member>
        <member name="T:CMS.OnlineMarketing.MVTestStatusEnum">
            <summary>
            MVT test status enumeration.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MVTestStatusEnum.Disabled">
            <summary>
            Disabled - task is disabled.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MVTestStatusEnum.Running">
            <summary>
            Running status - task is running.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MVTestStatusEnum.NotRunning">
            <summary>
            Not running - task is enabled, but not running yet
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MVTestStatusEnum.Finished">
            <summary>
            Finished status - task has finished.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.MVTCombinationInfo">
            <summary>
            MVTCombinationInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MVTCombinationInfo.TYPEINFO">
            <summary>
            Type information (Web part, zone combinations).
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MVTCombinationInfo.TYPEINFO_DOCUMENT">
            <summary>
            Type information (Combinations contaning widgets).
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfo.#ctor">
            <summary>
            Constructor - Creates an empty MVTCombinationInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new MVTCombinationInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTCombinationInfo.MVTCombinationConversions">
            <summary>
            Number of conversions of the current combination
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTCombinationInfo.MVTCombinationGUID">
            <summary>
            Unique combination identifier.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTCombinationInfo.MVTCombinationID">
            <summary>
            MVT combination ID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTCombinationInfo.MVTCombinationDocumentID">
            <summary>
            MVT combination document ID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTCombinationInfo.MVTCombinationLastModified">
            <summary>
            Last modification of the MVT combination.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTCombinationInfo.MVTCombinationName">
            <summary>
            MVT combination code name.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTCombinationInfo.MVTCombinationCustomName">
            <summary>
            MVT combination custom name.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTCombinationInfo.MVTCombinationPageTemplateID">
            <summary>
            MVT combination page template ID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTCombinationInfo.MVTCombinationEnabled">
            <summary>
            MVT combination enabled.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTCombinationInfo.MVTCombinationEnabledOriginal">
            <summary>
            MVT combination enabled - original value.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTCombinationInfo.MVTCombinationIsDefault">
            <summary>
            Indicates whether the MVT combination is a default combination (without any mvt variants).
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTCombinationInfo.TypeInfo">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.MVTCombinationInfoProvider">
            <summary>
            Class providing MVTCombinationInfo management.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MVTCombinationInfoProvider.COMBINATION_NAME_PREFIX">
            <summary>
            Default prefix for new combinations.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MVTCombinationInfoProvider.COMBINATION_CUSTOMNAME_MAX_LENGHT">
            <summary>
            The maximum allowed length of the automatically generated combination custom names.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.GetMVTCombinations(System.String,System.String)">
            <summary>
            Returns dataset of all MVT combinations matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.GetMVTCombinations(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all MVT combinations matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.GetMVTCombinationInfo(System.Int32)">
            <summary>
            Returns MVT combination with the specified ID.
            </summary>
            <param name="combinationId">Combination ID</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.GetMVTCombinationInfo(System.Int32,System.String)">
            <summary>
            Returns MVT combination with the specified combination name and template id.
            </summary>
            <param name="combinationName">Code name of the combination.</param>
            <param name="pageTemplateId">The page template id.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.GetMVTCombinationInfo(System.String,System.String,System.String,System.String)">
            <summary>
            Returns MVT combination with the specified parameters.
            </summary>
            <param name="aliasPath">Alias path</param>
            <param name="culture">Culture code</param>
            <param name="combinationName">Combination name</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.GetDefaultCombinationInfo(System.Int32)">
            <summary>
            Returns the default MVT combination for the specified page template.
            </summary>
            <param name="pageTemplateId">The page template id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.SetMVTCombinationInfo(CMS.OnlineMarketing.MVTCombinationInfo)">
            <summary>
            Sets (updates or inserts) specified MVT combination.
            </summary>
            <param name="combinationObj">MVT combination to be set</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.DeleteMVTCombinationInfo(CMS.OnlineMarketing.MVTCombinationInfo)">
            <summary>
            Deletes specified MVT combination.
            </summary>
            <param name="combinationObj">MVT combination to be deleted</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.DeleteMVTCombinationInfo(System.Int32)">
            <summary>
            Deletes MVT combination with the specified ID.
            </summary>
            <param name="combinationId">MVT combination ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.Clear(System.Boolean)">
            <summary>
            Clears hashtables.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.IsMVTCombinationValid(System.String,System.String,System.String,System.String)">
            <summary>
            Checks whether the specified MVT combination is assigned to a specified multivariate test and the multivariate test is running.
            </summary>
            <param name="combinationName">Combination name</param>
            <param name="testName">Test name</param>
            <param name="siteName">Site name</param>
            <param name="culture">Culture code</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.GetCombinationsForTemplate(System.Int32,System.Boolean)">
            <summary>
            Returns dataset of MVT combinations for the specified page template.
            </summary>
            <param name="pageTemplateId"></param>
            <param name="enabledOnly">Indicates whether only enabled combinations should be loaded</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.GetCombinationsWithoutWebpart(System.Int32,System.Guid)">
            <summary>
            Gets the combinations which do not contain the specified webpart (instanceGuid).
            </summary>
            <param name="pageTemplateId">The template id</param>
            <param name="instanceGuid">The instance GUID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.GetCombinationsWithoutZone(System.Int32,System.String)">
            <summary>
            Gets the combinations which do not contain the specified zone.
            </summary>
            <param name="pageTemplateId">The template id</param>
            <param name="zoneId">The zone id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.GetNewCombinationNumber(System.Int32)">
            <summary>
            Gets the new combination number.
            </summary>
            <param name="pageTemplateId">The page template id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.EnsureTestCombination(CMS.OnlineMarketing.MVTestInfo)">
            <summary>
            Ensures that the multivariate test has a default combination created.
            </summary>
            <param name="testObj">The multivariate test obj</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.EnsureTestCombination(System.Int32)">
            <summary>
            Ensures that the page template has a default combination created.
            </summary>
            <param name="pageTemplateId">The page template id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.EnableCombinations(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Disables/enables all combinations where the MVT variant is used.
            </summary>
            <param name="pageTemplateId">The page template id</param>
            <param name="variantId">The MVT variant id</param>
            <param name="enable">True = Enable the combinations; False = Disable the combinations</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.GetMVTestCombination(CMS.OnlineMarketing.MVTestInfo,System.String,CMS.PortalEngine.ViewModeEnum)">
            <summary>
            Returns the combination for the specified multivariate test object.
            If any combination for this multivariate test is stored in a browser cookie then this combination will be used,
            otherwise will be chosen a random combination for this test.
            </summary>
            <param name="testObj">The multivariate test object</param>
            <param name="culture">Required culture</param>
            <param name="viewMode">The view mode</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.GetMVTestCombination(CMS.OnlineMarketing.MVTestInfo,CMS.PortalEngine.PageInfo,CMS.PortalEngine.ViewModeEnum)">
            <summary>
            Returns the combination for the specified multivariate test object.
            If any combination for this multivariate test is stored in a browser cookie then this combination will be used,
            otherwise will be chosen a random combination for this test.
            </summary>
            <param name="testObj">The multivariate test info object</param>
            <param name="pi">The page info object</param>
            <param name="viewMode">The view mode</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.GetNewCombinationCustomName(System.String,System.String,System.Int32)">
            <summary>
            Combines the old custom name with the new variant.
            </summary>
            <param name="oldCombinationCustomName">The old combination custom name</param>
            <param name="newVariantName">The new variant name</param>
            <param name="newCombinationNumber">The new combination number</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.GetCombinationName(System.Int32)">
            <summary>
            Gets the formated name of the combination (i.e.: number=2 returns "Combination_002").
            </summary>
            <param name="combinationNumber">The number used in the formated combination name</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.GetMVTCombinationsInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all MVT combinations matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.GetMVTCombinationInfoInternal(System.Int32)">
            <summary>
            Returns MVT combination with specified ID.
            </summary>
            <param name="combinationId">MVT combination ID</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.SetMVTCombinationInfoInternal(CMS.OnlineMarketing.MVTCombinationInfo)">
            <summary>
            Sets (updates or inserts) specified MVT combination.
            </summary>
            <param name="combinationObj">MVT combination to be set</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.DeleteMVTCombinationInfoInternal(CMS.OnlineMarketing.MVTCombinationInfo)">
            <summary>
            Deletes specified MVT combination.
            </summary>
            <param name="combinationObj">MVT combination to be deleted</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.IsMVTCombinationValidInternal(System.String,System.String,System.String,System.String)">
            <summary>
            Checks whether MVT combination is assigned to a specified multivariate test and the multivariate test is running.
            </summary>
            <param name="combinationName">Combination name</param>
            <param name="testName">Test name</param>
            <param name="siteName">Site name</param>
            <param name="culture">Culture code</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.GetCombinationsForTemplateInternal(System.Int32,System.Boolean)">
            <summary>
            Returns dataset of MVT combinations for the specified page template.
            </summary>
            <param name="pageTemplateId">Page template id</param>
            <param name="enabledOnly">Indicates whether only enabled should be loaded</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.GetMVTCombinationInfoInternal(System.String,System.String,System.String,System.String)">
            <summary>
            Returns MVT combination with the specified parameters.
            </summary>
            <param name="aliasPath">Alias path</param>
            <param name="culture">Culture code</param>
            <param name="combinationName">Combination name</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.GetDefaultCombinationInfoInternal(System.Int32)">
            <summary>
            Returns the default MVT combination for the specified page template.
            </summary>
            <param name="pageTemplateId">The page template id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.GetCombinationsWithoutWebpartInternal(System.Int32,System.Guid)">
            <summary>
            Gets the combinations which do not contain the specified webpart (instanceGuid).
            </summary>
            <param name="pageTemplateId">The template id</param>
            <param name="instanceGuid">The instance GUID</param>
            <returns></returns>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.GetCombinationsWithoutZoneInternal(System.Int32,System.String)">
            <summary>
            Gets the combinations which do not contain the specified zone.
            </summary>
            <param name="pageTemplateId">The page template id</param>
            <param name="zoneId">The zone id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.GetNewCombinationNumberInternal(System.Int32)">
            <summary>
            Gets a new combination number.
            </summary>
            <param name="pageTemplateId">The page template id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.EnsureTestCombinationInternal(CMS.OnlineMarketing.MVTestInfo)">
            <summary>
            Ensures that the multivariate test has a default combination created.
            </summary>
            <param name="testObj">The multivariate test obj</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.EnsureTestCombinationInternal(System.Int32)">
            <summary>
            Ensures that the page template has a default combination created.
            </summary>
            <param name="pageTemplateId">The page template id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.EnableCombinationsInternal(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Disables all combinations where the variant is used.
            </summary>
            <param name="pageTemplateId">The page template id</param>
            <param name="variantId">The variant id</param>
            <param name="enable">True = Enable; false = Disable</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.GetMVTestCombinationInternal(CMS.OnlineMarketing.MVTestInfo,System.String,CMS.PortalEngine.ViewModeEnum)">
            <summary>
            Returns the combination for the specified multivariate test object.
            If any combination for this multivariate test is stored in a browser cookie then this combination will be used,
            otherwise will be chosen a random combination for this test.
            </summary>
            <param name="testObj">The multivariate test object</param>
            <param name="culture">Required culture</param>
            <param name="viewMode">The view mode</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.GetMVTestCombinationInternal(CMS.OnlineMarketing.MVTestInfo,CMS.PortalEngine.PageInfo,CMS.PortalEngine.ViewModeEnum)">
            <summary>
            Returns the combination for the specified multivariate test object.
            If any combination for this multivariate test is stored in a browser cookie then this combination will be used,
            otherwise will be chosen a random combination for this test.
            </summary>
            <param name="testObj">The multivariate test object</param>
            <param name="pi">The page info object</param>
            <param name="viewMode">The view mode</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.LoadTemplateCombinations">
            <summary>
            Load all combinations from DB to the dictionary.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.GetTemplateCombinationCode(CMS.OnlineMarketing.MVTCombinationInfo)">
            <summary>
            Gets the template combination code.
            </summary>
            <param name="combinationObj">The combination obj</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.GetTemplateCombinationCode(System.Int32,System.String)">
            <summary>
            Gets the template combination site code.
            </summary>
            <param name="pageTemplateId">The page template id</param>
            <param name="combinationName">Name of the MVT combination</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.GetMVTCombinationInfoInternal(System.Int32,System.String)">
            <summary>
            Returns MVT combination with the specified combination name and template id.
            </summary>
            <param name="combinationName">Code name of the combination.</param>
            <param name="pageTemplateId">The page template id.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.GetNewCombinationCustomNameInternal(System.String,System.String,System.Int32)">
            <summary>
            Combines the old custom name with the new variant.
            </summary>
            <param name="oldCombinationCustomName">The old combination custom name</param>
            <param name="newVariantName">The new variant name</param>
            <param name="newCombinationNumber">The new combination number</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.GetCombinationNameInternal(System.Int32)">
            <summary>
            Gets the formated name of the combination (i.e.: number=2 returns "Combination_002").
            </summary>
            <param name="combinationNumber">The number used in the formated combination name</param>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTCombinationInfoProvider.RandomGenerator">
            <summary>
            Gets random generator for choosing a combination.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.MVTCombinationVariationInfo">
            <summary>
            MVTCombinationVariationInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MVTCombinationVariationInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationVariationInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationVariationInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationVariationInfo.#ctor">
            <summary>
            Constructor - Creates an empty MVTCombinationVariationInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationVariationInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new MVTCombinationVariationInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTCombinationVariationInfo.MVTCombinationID">
            <summary>
            MVT combination ID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTCombinationVariationInfo.MVTVariantID">
            <summary>
            MVT variant ID.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.MVTCombinationVariationInfoProvider">
            <summary>
            Class providing MVTCombinationVariationInfo management.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationVariationInfoProvider.GetMVTCombinationVariationInfo(System.Int32,System.Int32)">
            <summary>
            Returns relationship between specified MVT combination and MVT variant.
            </summary>
            <param name="combinationId">MVT combination ID</param>
            <param name="variantId">MVT variant ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationVariationInfoProvider.GetCombinationVariations(System.String,System.String)">
            <summary>
            Returns dataset of all relationships between MVT combinations and MVT variants matching the specified criteria.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationVariationInfoProvider.GetCombinationVariations(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all relationships between MVT combinations and MVT variants matching the specified criteria.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationVariationInfoProvider.SetMVTCombinationVariationInfo(CMS.OnlineMarketing.MVTCombinationVariationInfo)">
            <summary>
            Sets relationship between specified MVT combination and MVT variant.
            </summary>
            <param name="combinationObj">MVT combination - MVT variant relationship to be set</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationVariationInfoProvider.AddRelationship(System.Int32,System.Int32)">
            <summary>
            Sets relationship between specified MVT combination and MVT variant.
            </summary>	
            <param name="combinationId">MVT combination ID</param>
            <param name="variantId">MVT variant ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationVariationInfoProvider.DeleteMVTCombinationVariationInfo(CMS.OnlineMarketing.MVTCombinationVariationInfo)">
            <summary>
            Deletes relationship between specified MVT combination and MVT variant.
            </summary>
            <param name="infoObj">MVT combination - MVT variant relationship to be deleted</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationVariationInfoProvider.RemoveRelationship(System.Int32,System.Int32)">
            <summary>
            Deletes relationship between specified MVT combination and MVT variant.
            </summary>
            <param name="combinationId">MVT combination ID</param>
            <param name="variantId">MVT variant ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationVariationInfoProvider.CombineCombinationVariants(System.Int32,System.Int32,System.Int32)">
            <summary>
            Combines a new variant with existing combinations.
            </summary>
            <param name="originalCombinationId">The original combination id</param>
            <param name="newCombinationId">The new combination id</param>
            <param name="newVariantId">The new variant id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationVariationInfoProvider.GetMVTCombinationVariationInfoInternal(System.Int32,System.Int32)">
            <summary>
            Returns relationship between specified MVT combination and MVT variant.
            </summary>
            <param name="combinationId">MVT combination ID</param>
            <param name="variantId">MVT variant ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationVariationInfoProvider.GetCombinationVariationsInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all relationships between MVT combinations and MVT variants matching the specified criteria.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationVariationInfoProvider.SetMVTCombinationVariationInfoInternal(CMS.OnlineMarketing.MVTCombinationVariationInfo)">
            <summary>
            Sets relationship between specified MVT combination and MVT variant.
            </summary>
            <param name="infoObj">MVT combination - MVT variant relationship to be set</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationVariationInfoProvider.DeleteMVTCombinationVariationInfoInternal(CMS.OnlineMarketing.MVTCombinationVariationInfo)">
            <summary>
            Deletes relationship between specified MVT combination and MVT variant.
            </summary>
            <param name="infoObj">MVT combination - MVT variant relationship to be deleted</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationVariationInfoProvider.CombineCombinationVariantsInternal(System.Int32,System.Int32,System.Int32)">
            <summary>
            Combines a new variant with existing combinations.
            </summary>
            <param name="originalCombinationId">The original combination id</param>
            <param name="newCombinationId">The new combination id</param>
            <param name="newVariantId">The new variant id</param>
        </member>
        <member name="T:CMS.OnlineMarketing.MVTestInfo">
            <summary>
            MVTestInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MVTestInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MVTestInfo.mOriginalCulture">
            <summary>
            Original culture of the multivariate test.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfo.#ctor">
            <summary>
            Constructor - Creates an empty MVTestInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new MVTestInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTestInfo.MVTestTargetConversionType">
            <summary>
            Multivariate test target conversion type.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTestInfo.MVTestID">
            <summary>
            Multivariate test ID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTestInfo.MVTestConversions">
            <summary>
            Multivariate test conversions.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTestInfo.MVTestCulture">
            <summary>
            Multivariate test culture.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTestInfo.MVTestLastModified">
            <summary>
            Last modification of the multivariate test.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTestInfo.MVTestOpenFrom">
            <summary>
            Start date of the test.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTestInfo.MVTestGUID">
            <summary>
            Unique multivariate test identifier.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTestInfo.MVTestName">
            <summary>
            Multivariate test name.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTestInfo.MVTestDisplayName">
            <summary>
            Multivariate test display name.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTestInfo.MVTestMaxConversions">
            <summary>
            Multivariate test maximum conversions.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTestInfo.MVTestDescription">
            <summary>
            Multivariate test description.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTestInfo.MVTestPage">
            <summary>
            Multivariate test page.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTestInfo.MVTestSiteID">
            <summary>
            Multivariate test site ID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTestInfo.MVTestOpenTo">
            <summary>
            End date of the test.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTestInfo.MVTestEnabled">
            <summary>
            Indicates whether the multivariate test is enabled.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTestInfo.OriginalCulture">
            <summary>
            Gets or sets the original culture of the test.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.MVTestInfoProvider">
            <summary>
            Class providing MVTestInfo management.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.GetMVTests(System.String,System.String,CMS.SettingsProvider.QueryDataParameters)">
            <summary>
            Returns dataset of all multivariate tests matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="parameters">The query parameters</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.GetMVTests(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all multivariate tests matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.GetMVTestInfo(System.Int32)">
            <summary>
            Returns multivariate test with specified ID.
            </summary>
            <param name="testId">Multivariate test ID</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.GetMVTestInfo(System.String,System.String)">
            <summary>
            Returns multivariate test with the specified name.
            </summary>
            <param name="testName">The multivariate test name</param>                
            <param name="sitename">The site name</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.SetMVTestInfo(CMS.OnlineMarketing.MVTestInfo)">
            <summary>
            Sets (updates or inserts) specified multivariate test.
            </summary>
            <param name="testObj">The multivariate test to be set</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.DeleteMVTestInfo(CMS.OnlineMarketing.MVTestInfo)">
            <summary>
            Deletes specified multivariate test.
            </summary>
            <param name="testObj">The multivariate test to be deleted</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.DeleteMVTestInfo(System.Int32)">
            <summary>
            Deletes multivariate test with specified ID.
            </summary>
            <param name="testId">The multivariate test ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.Clear(System.Boolean)">
            <summary>
            Clears hashtables.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.IncreaseConversions(System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Increases number of conversions in multivariate test and combination.
            </summary>
            <param name="testName">MVTest name</param>
            <param name="combinationName">Combination name</param>
            <param name="siteName">Site name</param>
            <param name="hits">Hits count</param>
            <param name="culture">Culture code</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.RenameMVTestStatistics(System.String,System.String,System.Int32)">
            <summary>
            Renames multivariate test statistics data when changed code name
            </summary>
            <param name="oldName">Old code name</param>
            <param name="newName">New code name</param>
            <param name="siteId">The site id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.MVTestingEnabled(System.String)">
            <summary>
            Indicates whether multivariate testing is enabled.
            </summary>
            <param name="siteName">Name of the site</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.ContainsMVTest(System.String,System.Int32,System.String,System.Boolean)">
            <summary>
            Indicates whether a document has defined any multivariate tests.
            </summary>
            <param name="path">The path</param>
            <param name="siteId">The site id</param>
            <param name="cultureCode">The culture code</param>
            <param name="isLiveSite">Is live site</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.GetMVTestStatus(CMS.OnlineMarketing.MVTestInfo)">
            <summary>
            Returns status of multivariate test.
            </summary>
            <param name="testObj">The multivariate test info object</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.MVTestIsRunning(CMS.OnlineMarketing.MVTestInfo)">
            <summary>
            Returns true if specified multivariate test is running.
            </summary>
            <param name="testObj">Multivariate test info object</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.MVTestIsRunning(CMS.OnlineMarketing.MVTestInfo,CMS.OnlineMarketing.MVTestStatusEnum@)">
            <summary>
            Returns true if specified multivariate test is running.
            </summary>
            <param name="testObj">Multivariate test info object</param>
            <param name="status">Returns curernt test status</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.GetRunningTest(System.String,System.Int32,System.String)">
            <summary>
            Gets the running multivariate test for a page.
            </summary>
            <param name="testPage">The test page</param>
            <param name="siteId">The site id</param>
            <param name="cultureCode">The culture code</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.ContainsRunningMVTest(System.String,System.Int32,System.String)">
            <summary>
            Determines whether there is a running multivariate test for the specified document.
            </summary>
            <param name="testPage">The test page</param>
            <param name="siteId">The site id</param>
            <param name="cultureCode">The culture code</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.CombineWithMVT(CMS.PortalEngine.PageInfo,CMS.PortalEngine.PageTemplateInstance,System.Int32,CMS.PortalEngine.ViewModeEnum)">
            <summary>
            Combines the specified page template instance with MVT variants.
            </summary>
            <param name="pi">The page info</param>
            <param name="instance">The page template instance</param>
            <param name="combinationId">The combination id</param>
            <param name="viewMode">The view mode</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.GetRunningTest(System.String,System.Int32,System.String,System.Boolean@)">
            <summary>
            Gets the running multivariate test for the specified page.
            </summary>
            <param name="testPage">The test page</param>
            <param name="siteId">The site id</param>
            <param name="cultureCode">The culture code</param>
            <param name="mvtTestExists">Returns a value indicating whether a mvt test with the given parameters exists</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.GetMVTests(System.String,System.Int32)">
            <summary>
            Gets the running multivariate test for the specified page.
            </summary>
            <param name="testPage">The test page</param>
            <param name="siteId">The site id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.GetRunningCondition(CMS.OnlineMarketing.MVTestInfo,CMS.SettingsProvider.QueryDataParameters@)">
            <summary>
            Returns the where condition selecting multivariate tests which are running at the same time as the specified test.
            </summary>
            <param name="testObj">The multivariate test info object</param>
            <param name="parameters">The parameters</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.GetRunningCondition(System.Int32,System.String,System.Int32,System.String,System.DateTime,System.DateTime,CMS.SettingsProvider.QueryDataParameters@)">
            <summary>
            Returns the where condition selecting tests which are running for the same conditions as defined in the method params (testPage, testSiteId, testCulture...).
            </summary>
            <param name="testId">The test id to be excluded from the where condition</param>
            <param name="testPage">The test page</param>
            <param name="testSiteId">The test site id</param>
            <param name="testCulture">The test culture</param>
            <param name="openFrom">The open from</param>
            <param name="openTo">The open to</param>
            <param name="parameters">The parameters</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.GetMVTestsInternal(System.String,System.String,System.Int32,System.String,CMS.SettingsProvider.QueryDataParameters)">
            <summary>
            Returns dataset of all multivariate tests matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>
            <param name="columns">Columns to be selected</param>
            <param name="parameters">The query parameters</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.GetMVTestInfoInternal(System.Int32)">
            <summary>
            Returns multivariate test with specified ID.
            </summary>
            <param name="testId">The multivariate test ID</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.GetMVTestInfoInternal(System.String,System.String)">
            <summary>
            Returns multivariate with specified name.
            </summary>
            <param name="testName">The multivariate test name</param>   
            <param name="siteName">The site name</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.SetMVTestInfoInternal(CMS.OnlineMarketing.MVTestInfo)">
            <summary>
            Sets (updates or inserts) specified multivariate test.
            </summary>
            <param name="testObj">The multivariate test to be set</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.DeleteMVTestInfoInternal(CMS.OnlineMarketing.MVTestInfo)">
            <summary>
            Deletes specified multivariate test.
            </summary>
            <param name="testObj">The multivariate test to be deleted</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.GetTestTemplates(CMS.OnlineMarketing.MVTestInfo)">
            <summary>
            Gets the test templates according to tits culture.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.CombineWithMVTInternal(CMS.PortalEngine.PageInfo,CMS.PortalEngine.PageTemplateInstance,System.Int32,CMS.PortalEngine.ViewModeEnum)">
            <summary>
            Combines the specified page template instance with MVT variants.
            </summary>
            <param name="pi">The page info</param>
            <param name="instance">The page template instance</param>
            <param name="combinationId">The combination id</param>
            <param name="viewMode">The view mode</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.IncreaseConversionsInternal(System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Increases number of conversions in multivariate test and combination.
            </summary>
            <param name="testName">The multivariate test name</param>
            <param name="combinationName">The combination name</param>
            <param name="siteName">The site name</param>
            <param name="culture">The culture code</param>
            <param name="hits">The hits count</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.RenameMVTestStatisticsInternal(System.String,System.String,System.Int32)">
            <summary>
            Renames multivariate test statistics data when changed code name
            </summary>
            <param name="oldName">Old code name</param>
            <param name="newName">New code name</param>
            <param name="siteID">Test site ID </param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.ContainsMVTestInternal(System.String,System.Int32,System.String,System.Boolean)">
            <summary>
            Indicates whether a document has defined any multivariate tests.
            </summary>
            <param name="path">The path</param>
            <param name="siteId">The site id</param>
            <param name="cultureCode">The culture code</param>
            <param name="isLiveSite">Is live site</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.GetMVTestStatusInternal(CMS.OnlineMarketing.MVTestInfo)">
            <summary>
            Returns status of multivariate test.
            </summary>
            <param name="testObj">The multivariate test info object</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.GetRunningTestInternal(System.String,System.Int32,System.String,System.Boolean@)">
            <summary>
            Gets the running multivariate test for a page.
            </summary>
            <param name="testPage">The test page</param>
            <param name="siteId">The site id</param>
            <param name="cultureCode">The culture code</param>
            <param name="mvtTestExists">Returns a value indicating whether a multivariate test with the given parameters exists</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.GetMVTestsInternal(System.String,System.Int32)">
            <summary>
            Gets the running multivariate test for a page.
            </summary>
            <param name="testPage">The test page</param>
            <param name="siteId">The site id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.GetRunningConditionInternal(CMS.OnlineMarketing.MVTestInfo,CMS.SettingsProvider.QueryDataParameters@)">
            <summary>
            Returns the where condition selecting tests which are running at the same time as the specified test.
            </summary>
            <param name="testObj">The multivariate test info object</param>
            <param name="parameters">The parameters</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.GetRunningConditionInternal(System.Int32,System.String,System.Int32,System.String,System.DateTime,System.DateTime,CMS.SettingsProvider.QueryDataParameters@)">
            <summary>
            Returns the where condition selecting multivariate tests which are running for the same conditions as defined in the method params (testPage, testSiteId, testCulture...).
            </summary>
            <param name="testId">The test id to be excluded from the where condition</param>
            <param name="testPage">The test page</param>
            <param name="testSiteId">The test site id</param>
            <param name="testCulture">The test culture</param>
            <param name="openFrom">The open from</param>
            <param name="openTo">The open to</param>
            <param name="parameters">The parameters</param>
            <returns></returns>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.GetPageSiteCode(CMS.OnlineMarketing.MVTestInfo)">
            <summary>
            Gets the page site code.
            </summary>
            <param name="testObj">The multivariate test info object</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.GetPageSiteCode(System.String,System.Int32)">
            <summary>
            Gets the page site code.
            </summary>
            <param name="path">The path</param>
            <param name="siteId">The site id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.GetTestTemplatesInternal(CMS.OnlineMarketing.MVTestInfo)">
            <summary>
            Gets the test templates according to tits culture.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.GetMVTTargetConversionTypeString(CMS.OnlineMarketing.MVTTargetConversionTypeEnum)">
            <summary>
            Returns MVTTargetConversionType string.
            </summary>
            <param name="conversionType">Target conversion type</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.GetMVTTargetConversionTypeEnum(System.String)">
            <summary>
            Returns MVTTargetConversionType enum.
            </summary>
            <param name="conversionType">String representation of target conversion type</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.GetMVTestStatusString(CMS.OnlineMarketing.MVTestStatusEnum)">
            <summary>
            Returns MVTestStatus string.
            </summary>
            <param name="statusType">Test status type</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.GetMVTestStatusEnum(System.String)">
            <summary>
            Returns MVTestStatus enum.
            </summary>
            <param name="statusType">String representation of test status type</param>
        </member>
        <member name="T:CMS.OnlineMarketing.MVTVariantInfo">
            <summary>
            MVTVariantInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MVTVariantInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MVTVariantInfo.TYPEINFO_DOCUMENTVARIANT">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MVTVariantInfo.mMVTVariantEnabledOriginal">
            <summary>
            Original value indicating whether the variant is enabled.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfo.CheckUniqueValues(System.String[])">
            <summary>
            Checks if a record with the same column values already exists in the database. Returns true if the set of values is unique.
            </summary>
            <param name="columns">Columns to check</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfo.#ctor">
            <summary>
            Constructor - Creates an empty MVTVariantInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new MVTVariantInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTVariantInfo.MVTVariantID">
            <summary>
            MVT variant ID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTVariantInfo.MVTVariantZoneID">
            <summary>
            MVT variant zone ID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTVariantInfo.MVTVariantDocumentID">
            <summary>
            MVT variant document ID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTVariantInfo.MVTVariantInstanceGUID">
            <summary>
            Web part instance GUID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTVariantInfo.MVTVariantDisplayName">
            <summary>
            MVT variant display name.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTVariantInfo.MVTVariantDescription">
            <summary>
            MVT variant description.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTVariantInfo.MVTVariantPageTemplateID">
            <summary>
            MVT variant page template ID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTVariantInfo.MVTVariantEnabled">
            <summary>
            Last modification of the MVT combination.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTVariantInfo.MVTVariantEnabledOriginal">
            <summary>
            Gets or sets the original value indicating whether the variant is enabled.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTVariantInfo.MVTVariantGUID">
            <summary>
            Unique project identifier.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTVariantInfo.MVTVariantName">
            <summary>
            MVT variant name.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTVariantInfo.MVTVariantWebParts">
            <summary>
            MVT variant web parts.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTVariantInfo.MVTVariantLastModified">
            <summary>
            Last modification of the MVT variant.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTVariantInfo.WebPartInstance">
            <summary>
            Variant web part/widget instance containing data built from this info object.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTVariantInfo.WebPartZoneInstance">
            <summary>
            Variant zone instance containing data built from this info object.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTVariantInfo.TypeInfo">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.MVTVariantInfoProvider">
            <summary>
            Class providing MVTVariantInfo management.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.GetMVTVariants(System.String,System.String)">
            <summary>
            Returns dataset of all MVT variants matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.GetMVTVariants(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all MVT variants matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.GetMVTVariantInfo(System.Int32)">
            <summary>
            Returns MVT variant with specified ID.
            </summary>
            <param name="variantId">MVT variant ID</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.GetMVTVariantInfo(System.Guid)">
            <summary>
            Gets the MVT variant info.
            </summary>
            <param name="variantGuid">The MVT variant GUID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.GetMVTVariantInfo(System.String)">
            <summary>
            Returns MVT variant with specified name.
            </summary>
            <param name="variantName">MVT variant name</param>                
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.SetMVTVariantInfo(CMS.OnlineMarketing.MVTVariantInfo)">
            <summary>
            Sets (updates or inserts) specified MVT variant.
            </summary>
            <param name="variantObj">MVT variant to be set</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.DeleteMVTVariantInfo(CMS.OnlineMarketing.MVTVariantInfo)">
            <summary>
            Deletes specified MVT variant.
            </summary>
            <param name="variantObj">MVT variant to be deleted</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.DeleteMVTVariantInfo(System.Int32)">
            <summary>
            Deletes MVT variant with specified ID.
            </summary>
            <param name="variantId">MVT variant ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.DeleteMVTVariantInfo(System.Guid)">
            <summary>
            Deletes MVT variant with specified ID.
            </summary>
            <param name="variantGuid">The MVT variant GUID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.Clear(System.Boolean)">
            <summary>
            Clears hashtables.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.GetMVTVariants(System.Int32,System.Int32)">
            <summary>
            Gets pairs "MVTVariantInstanceGUID, MVTVariantGUID" which represent web part instances and their variant GUID for the specified combination.
            </summary>
            <param name="pageTemplateId">The page template id</param>
            <param name="combinationId">The combination id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.SaveVariant(System.Int32,System.String,System.String,System.String,System.Boolean,System.String,System.Guid,System.Int32,System.Int32,System.Xml.XmlNode)">
            <summary>
            Saves the variant and generates new combinations if the variant is new.
            </summary>
            <param name="variantId">The variant id</param>
            <param name="variantName">Name of the variant</param>
            <param name="variantDisplayName">Display name of the variant</param>
            <param name="variantDescription">The variant description</param>
            <param name="variantEnabled">Indicates whether the variant is enabled</param>
            <param name="zoneId">The zone id</param>
            <param name="instanceGuid">The instance GUID</param>
            <param name="pageTemplateId">The page template id</param>
            <param name="documentId">The document id</param>
            <param name="xmlWebParts">Web parts xml</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.SaveVariantWebparts(System.Int32,System.Xml.XmlNode)">
            <summary>
            Saves the variant properties.
            </summary>
            <param name="variantId">The variant id</param>
            <param name="xmlWebParts">Web parts xml</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.DeleteWidgetVariants(System.String,System.Int32,System.Int32)">
            <summary>
            Deletes all variants of all widgets in the document.
            </summary>
            <param name="zoneId">The zone id</param>
            <param name="templateId">The template id</param>
            <param name="documentId">The document id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.UpdateWebPartVariants(System.Int32,System.String,System.Guid,System.String)">
            <summary>
            Updates the web part variants with a new zone id.
            </summary>
            <param name="pageTemplateId">The page template id</param>
            <param name="zoneId">The zone id.</param>
            <param name="instanceGuid">The instance GUID</param>
            <param name="newZoneId">The new zone id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.EnableWebPartVariants(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Enables/Disables the web part variants.
            </summary>
            <param name="pageTemplateId">The page template id</param>
            <param name="combinationId">The combination id</param>
            <param name="enable">Indicates whether enable or disable the combination variants</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.RemoveWebPartsVariants(System.Collections.ArrayList)">
            <summary>
            Removes the variants of the selected web parts.
            </summary>
            <param name="webParts">The web parts</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.GetMVTVariants(System.Int32)">
            <summary>
            Gets all the MVT variants for the specified template.
            </summary>
            <param name="pageTemplateId">The page template id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.GetMVTVariants(System.Int32,System.String,System.Guid,System.Int32)">
            <summary>
            Gets the MVT variants.
            </summary>
            <param name="pageTemplateId">The page template id</param>
            <param name="zoneId">The zone id</param>
            <param name="instanceGuid">The instance GUID</param>
            <param name="documentId">The document id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.LoadMVTVariants(System.Object,System.Boolean)">
            <summary>
            Loads the MVT variants for the specified instance (web part/zone/widget).
            </summary>
            <param name="instance">The instance</param>
            <param name="isZone">Indicates if the parameter instance object is a zone</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.GetMVTVariantId(System.Int32,System.String)">
            <summary>
            Returns the MVT variant id for the specified template and code name.
            </summary>
            <param name="pageTemplateId">The page template id</param>
            <param name="variantName">The variant code name</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.CloneTemplateVariants(System.Int32,System.Int32)">
            <summary>
            Clones all the MVT variants and their combinations of the specific page template.
            </summary>
            <param name="originalTemplateId">The original template id</param>
            <param name="newTemplateId">The new template id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.GetMVTVariantsInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all MVT variants matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.GetMVTVariantInfoInternal(System.Int32)">
            <summary>
            Returns MVT variant with specified ID.
            </summary>
            <param name="variantId">MVT variant ID</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.GetMVTVariantInfoInternal(System.Guid)">
            <summary>
            Returns MVT variant with specified ID.
            </summary>
            <param name="variantGuid">The MVT variant GUID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.GetMVTVariantInfoInternal(System.String)">
            <summary>
            Returns MVT variant with specified name.
            </summary>
            <param name="variantName">MVT variant name</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.SetMVTVariantInfoInternal(CMS.OnlineMarketing.MVTVariantInfo)">
            <summary>
            Sets (updates or inserts) specified MVT variant.
            </summary>
            <param name="variantObj">MVT variant to be set</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.DeleteMVTVariantInfoInternal(CMS.OnlineMarketing.MVTVariantInfo)">
            <summary>
            Deletes specified MVT variant.
            </summary>
            <param name="variantObj">MVT variant to be deleted</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.GetMVTVariantsInternal(System.Int32,System.Int32)">
            <summary>
            Gets pairs "MVTVariantInstanceGUID, MVTVariantGUID" which represent web part instances and their variant GUID for the specified combination.
            </summary>
            <param name="pageTemplateId">The page template id</param>
            <param name="combinationId">The combination id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.GetMVTVariantsInternal(System.Int32)">
            <summary>
            Gets all the MVT variants for the specified template.
            </summary>
            <param name="pageTemplateId">The page template id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.GetMVTVariantsInternal(System.Int32,System.String,System.Guid,System.Int32)">
            <summary>
            Gets the MVT variants.
            </summary>
            <param name="pageTemplateId">The page template id</param>
            <param name="zoneId">The zone id</param>
            <param name="instanceGuid">The instance GUID</param>
            <param name="documentId">The document id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.DeleteWidgetVariantsInternal(System.String,System.Int32,System.Int32)">
            <summary>
            Deletes all variants of all widgets in the document.
            </summary>
            <param name="zoneId">The zone id</param>
            <param name="pageTemplateId">The page template id</param>
            <param name="documentId">The document id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.UpdateWebPartVariantsInternal(System.Int32,System.String,System.Guid,System.String)">
            <summary>
            Updates the web part variants with a new zone id.
            </summary>
            <param name="pageTemplateId">The page template id</param>
            <param name="zoneId">The zone id.</param>
            <param name="instanceGuid">The instance GUID</param>
            <param name="newZoneId">The new zone id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.EnableWebPartVariantsInternal(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Enables/Disables the web part variants.
            </summary>
            <param name="pageTemplateId">The page template id</param>
            <param name="combinationId">The combination id</param>
            <param name="enabled">Indicates whether enable or disable the combination variants</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.SaveVariantInternal(System.Int32,System.String,System.String,System.String,System.Boolean,System.String,System.Guid,System.Int32,System.Int32,System.Xml.XmlNode)">
            <summary>
            Saves the variant and generates new combinations if the variant is new.
            </summary>
            <param name="variantId">The variant id</param>
            <param name="variantName">Name of the variant</param>
            <param name="variantDisplayName">Display name of the variant</param>
            <param name="variantDescription">The variant description</param>
            <param name="variantEnabled">Indicates whether the variant is enabled</param>
            <param name="zoneId">The zone id</param>
            <param name="instanceGuid">The instance GUID</param>
            <param name="pageTemplateId">The page template id</param>
            <param name="documentId">The document id</param>
            <param name="xmlWebParts">Web parts xml</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.SaveVariantInternal(System.Int32,System.String,System.String,System.String,System.Boolean,System.String,System.Guid,System.Int32,System.Int32,System.String)">
            <summary>
            Saves the variant and generates new combinations if the variant is new.
            </summary>
            <param name="variantId">The variant id</param>
            <param name="variantName">Name of the variant</param>
            <param name="variantDisplayName">Display name of the variant</param>
            <param name="variantDescription">The variant description</param>
            <param name="variantEnabled">Indicates whether the variant is enabled</param>
            <param name="zoneId">The zone id</param>
            <param name="instanceGuid">The instance GUID</param>
            <param name="pageTemplateId">The page template id</param>
            <param name="documentId">The document id</param>
            <param name="webPartsXml">Web parts xml string</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.SaveVariantWebpartsInternal(System.Int32,System.Xml.XmlNode)">
            <summary>
            Saves the variant properties.
            </summary>
            <param name="variantId">The variant id.</param>
            <param name="xmlWebParts">Web parts xml</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.RemoveWebPartsVariantsInternal(System.Collections.ArrayList)">
            <summary>
            Removes the variants of the selected web parts.
            </summary>
            <param name="webParts">The web parts</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.GetMVTVariantIdInternal(System.Int32,System.String)">
            <summary>
            Returns the MVT variant id for the specified template and code name.
            </summary>
            <param name="pageTemplateId">The page template id</param>
            <param name="variantName">The variant code name</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.LoadMVTVariantsInternal(System.Object,System.Boolean)">
            <summary>
            Loads the MVT variants for the specified instance (web part/zone/widget).
            </summary>
            <param name="instance">The instance</param>
            <param name="isZone">Indicates if the parameter instance object is a zone</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.CloneTemplateVariantsInternal(System.Int32,System.Int32)">
            <summary>
            Clones all the MVT variants and their combinations of the specific page template.
            </summary>
            <param name="originalTemplateId">The original template id</param>
            <param name="newTemplateId">The new template id</param>
        </member>
        <member name="T:CMS.OnlineMarketing.MVTTargetConversionTypeEnum">
            <summary>
            Target conversion type enumeration.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MVTTargetConversionTypeEnum.Total">
            <summary>
            Actual conversions are compared with sum of all conversions for multivariate test
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MVTTargetConversionTypeEnum.AnyCombination">
            <summary>
            Actual conversions are compared with each combination conversion value.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MVTestListInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestListInfo.#ctor">
            <summary>
            Constructor - Creates an empty MVTestListInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestListInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new MVTestListInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestListInfo.GetData(CMS.SettingsProvider.QueryDataParameters,System.String,System.String,System.Int32,System.String,System.Boolean,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns the data according to the set of input parameters.
            </summary>
            <param name="parameters">Query parameters</param>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
            <param name="topN">Specifies number of returned records</param>        
            <param name="columns">Data columns to return</param>
            <param name="binaryData">If true, binary data are returned in the result (not applied)</param>
            <param name="offset">Index of first record to get</param>
            <param name="maxRecords">Maximum number of records to get. If maxRecords is zero or less, all records are returned (no paging is used)</param>
            <param name="totalRecords">Returns total number of available records</param>       
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingModule.#ctor(CMS.SettingsProvider.ModuleInfo)">
            <summary>
            Constructor.
            </summary>
            <param name="info">Module info</param>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingModule.GetObject(System.Data.DataRow,System.String)">
            <summary>
            Gets the object created from the given DataRow.
            </summary>
            <param name="objectRow">Object DataRow</param>
            <param name="objectType">Object type</param>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingModule.ProcessCommand(System.String,System.Object[])">
            <summary>
            Processes the specified command.
            </summary>
            <param name="commandName">Command name</param>
            <param name="parameters">Command parameters</param>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingModule.ClearHashtables(System.Boolean)">
            <summary>
            Clears the module hashtables.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingModule.GetContexts">
            <summary>
            Returns the hashtable of the module contexts. [name.ToLower()] -> [AbstractContext]
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.OnlineMarketingObjectType">
            <summary>
            Online marketing module object types.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.OnlineMarketingObjectType.ABTEST">
            <summary>
            Code name for tests.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.OnlineMarketingObjectType.ABTESTLIST">
            <summary>
            Code name for ABTest list.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.OnlineMarketingObjectType.ABVARIANT">
            <summary>
            Code name for tests' variants.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.OnlineMarketingObjectType.MVTCOMBINATION">
            <summary>
            Code name for MVT combinations.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.OnlineMarketingObjectType.MVTCOMBINATIONVARIATION">
            <summary>
            Code name for MVT combinations variants.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.OnlineMarketingObjectType.MVTEST">
            <summary>
            Code name for MVT tests.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.OnlineMarketingObjectType.MVTESTLIST">
            <summary>
            Code name for MVTest list.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.OnlineMarketingObjectType.MVTVARIANT">
            <summary>
            Code name for MVT variants.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.OnlineMarketingObjectType.ACCOUNT">
            <summary>
            Code name for the account.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.OnlineMarketingObjectType.ACCOUNTCONTACT">
            <summary>
            Code name for account - contact binding.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.OnlineMarketingObjectType.ACCOUNTSTATUS">
            <summary>
            Code name for account status.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.OnlineMarketingObjectType.ACTIVITY">
            <summary>
            Code name for the activity.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.OnlineMarketingObjectType.ACTIVITYLIST">
            <summary>
            Code name for the activity list (for non merged contacts).
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.OnlineMarketingObjectType.ACTIVITYCONTACTLIST">
            <summary>
            Code name for the activity list (for non merged contacts).
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.OnlineMarketingObjectType.ACTIVITYCONTACTGLOBALLIST">
            <summary>
            Code name for the activity list (for non merged contacts).
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.OnlineMarketingObjectType.ACTIVITYCONTACTMERGEDLIST">
            <summary>
            Code name for the activity list (for non merged contacts).
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.OnlineMarketingObjectType.ACTIVITYTYPE">
            <summary>
            Code name for the activity type.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.OnlineMarketingObjectType.CONTACT">
            <summary>
            Code name for the contact.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.OnlineMarketingObjectType.CONTACTGROUP">
            <summary>
            Code name for the contact group.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.OnlineMarketingObjectType.CONTACTGROUPMEMBERCONTACT">
            <summary>
            Code name for the contact group members - contact.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.OnlineMarketingObjectType.CONTACTGROUPMEMBERACCOUNT">
            <summary>
            Code name for the contact group members - account.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.OnlineMarketingObjectType.CONTACTSTATUS">
            <summary>
            Code name for contact status.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.OnlineMarketingObjectType.CONTACTROLE">
            <summary>
            Code name for contact role.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.OnlineMarketingObjectType.IP">
            <summary>
            Code name for the IP address.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.OnlineMarketingObjectType.IPLIST">
            <summary>
            Code name for the IP address.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.OnlineMarketingObjectType.IPMERGEDLIST">
            <summary>
            Code name for the IP address.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.OnlineMarketingObjectType.IPGLOBALLIST">
            <summary>
            Code name for the IP address.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.OnlineMarketingObjectType.MEMBERSHIPUSERLIST">
            <summary>
            Code name for the membership - user list.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.OnlineMarketingObjectType.MEMBERSHIPMERGEDUSERLIST">
            <summary>
            Code name for the membership - user list (for merged contacts).
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.OnlineMarketingObjectType.MEMBERSHIPGLOBALUSERLIST">
            <summary>
            Code name for the membership - user list (for merged contacts).
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.OnlineMarketingObjectType.MEMBERSHIPCUSTOMERLIST">
            <summary>
            Code name for the membership - customer list.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.OnlineMarketingObjectType.MEMBERSHIPMERGEDCUSTOMERLIST">
            <summary>
            Code name for the membership - customer list.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.OnlineMarketingObjectType.MEMBERSHIPGLOBALCUSTOMERLIST">
            <summary>
            Code name for the membership - customer list.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.OnlineMarketingObjectType.MEMBERSHIPSUBSCRIBERLIST">
            <summary>
            Code name for the membership - subscriber list.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.OnlineMarketingObjectType.MEMBERSHIPMERGEDSUBSCRIBERLIST">
            <summary>
            Code name for the membership - subscriber list.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.OnlineMarketingObjectType.MEMBERSHIPGLOBALSUBSCRIBERLIST">
            <summary>
            Code name for the membership - subscriber list.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.OnlineMarketingObjectType.PAGEVISIT">
            <summary>
            Code name for the page visit.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.OnlineMarketingObjectType.SEARCH">
            <summary>
            Code name for the search.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.OnlineMarketingObjectType.USERAGENT">
            <summary>
            Code name for the user agent.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.OnlineMarketingObjectType.CONTACTLIST">
            <summary>
            "Virtual" info for displaying data from view - contacts.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.OnlineMarketingObjectType.CONTACTMEMBERSHIPLIST">
            <summary>
            "Virtual" info for displaying data from view - contacts-membership.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.OnlineMarketingObjectType.CONTACTSCORELIST">
            <summary>
            "Virtual" info for displaying data from view - contacts-scoring
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.OnlineMarketingObjectType.ACCOUNTLIST">
            <summary>
            "Virtual" info for displaying data from view - accounts.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.OnlineMarketingObjectType.ACCOUNTCONTACTLIST">
            <summary>
            "Virtual" info for displaying data from view - accountcontact relations.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.OnlineMarketingObjectType.ACCOUNTMEMBERSHIPLIST">
            <summary>
            "Virtual" info for displaying data from view - accounts and membership.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.OnlineMarketingObjectType.CONTACTACCOUNTLIST">
            <summary>
            "Virtual" info for displaying data from view - contactaccount relations.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.OnlineMarketingObjectType.CONTACTGROUPCONTACTLIST">
            <summary>
            "Virtual" info for displaying data from view - contactgroup-contact relations.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.OnlineMarketingObjectType.CONTACTGROUPACCOUNTLIST">
            <summary>
            "Virtual" info for displaying data from view - contactgroup-account relations.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.OnlineMarketingObjectType.SCORE">
            <summary>
            Code name for the score.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.OnlineMarketingObjectType.SCORERULE">
            <summary>
            Code name for the score rule.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.OnlineMarketingObjectType.CONTENTPERSONALIZATIONVARIANT">
            <summary>
            Code name for the content personalization variant.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.OnlineMarketingObjectType.SCORECONTACTRULELIST">
            <summary>
            Code name for the object displaying contact, rule and score
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingObjectType.GetObject(System.Data.DataRow,System.String)">
            <summary>
            Gets the object created from the given DataRow.
            </summary>
            <param name="objectRow">Object DataRow</param>
            <param name="objectType">Object type</param>
        </member>
        <member name="T:CMS.OnlineMarketing.TargetConversionType">
            <summary>
            Target conversion type enumeration.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.TargetConversionType.Total">
            <summary>
            Actual conversions are compared with sum of all conversions for A/B test
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.TargetConversionType.AnyVariant">
            <summary>
            Actual conversions are compared with each variant conversion value.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.TargetConversionTypeFunctions">
            <summary>
            Helper functions for target conversion type enum.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.TargetConversionTypeFunctions.TargetConversionTypeToString(CMS.OnlineMarketing.TargetConversionType)">
            <summary>
             Converts target conversion type to string.
            </summary>
            <param name="type">Target conversion type</param>
        </member>
        <member name="M:CMS.OnlineMarketing.TargetConversionTypeFunctions.StringToTargetConversionType(System.String)">
            <summary>
            Convert string to target conversion type enum.
            </summary>
            <param name="type">String representation of target conversion type</param>
        </member>
    </members>
</doc>
