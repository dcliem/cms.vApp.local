<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CMS.Ecommerce</name>
    </assembly>
    <members>
        <member name="T:CMS.Ecommerce.ActivityTrackingHelper">
            <summary>
            Helper methods for logging activities in CMSDesk.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ActivityTrackingHelper.GetContactIDs(CMS.Ecommerce.CustomerInfo,System.Int32)">
            <summary>
            Returns list of all contact IDs for particular customer.
            </summary>
            <param name="cust">Customer</param>
            <param name="siteId">Site ID</param>
        </member>
        <member name="T:CMS.Ecommerce.IItemTax">
            <summary>
            General interface used for implementing and calculating tax of the shopping cart item.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.IItemTax.ItemTaxID">
            <summary>
            Tax class identifier.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.IItemTax.ItemTaxDisplayName">
            <summary>
            Tax class display name.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.IItemTax.ItemTaxValue">
            <summary>
            Tax class value.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.IItemTax.ItemTaxIsFlat">
            <summary>
            True - tax class value is flat, False (default) - tax class value is relative.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.IItemTax.ItemTaxIsGlobal">
            <summary>
            True - tax class value is set in global main currency, False (default) - tax class value is set in site main currency. 
            Takes effect only if tax class value is flat.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.IItemTax.ItemTaxZeroIfIDSupplied">
            <summary>
            True - if customer's tax ID is supplied, the tax value for the customer is zero. False (default) - value of the tax is calculated
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.IItemTax.ItemTaxCustomData">
            <summary>
            Tax class custom data.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.DiscountTypeEnum">
            <summary>
            Discount type.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.DiscountTypeEnum.DiscountCoupon">
            <summary>
            Discount coupon
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.DiscountTypeEnum.VolumeDiscount">
            <summary>
            Volume discount
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.DiscountTypeEnum.DiscountLevel">
            <summary>
            Discount level 
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.DiscountTypeEnum.CustomDiscount">
            <summary>
            Custom discount
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.IItemDiscount">
            <summary>
            General interface used for implementing and calculating discount of the shopping cart item.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.IItemDiscount.ItemDiscountType">
            <summary>
            Discount type.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.IItemDiscount.ItemDiscountID">
            <summary>
            Discount identifier.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.IItemDiscount.ItemDiscountDisplayName">
            <summary>
            Discount display name.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.IItemDiscount.ItemDiscountValue">
            <summary>
            Discount value.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.IItemDiscount.ItemDiscountIsFlat">
            <summary>
            True - discount value is flat, False - discount value is relative.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.IItemDiscount.ItemDiscountIsGlobal">
            <summary>
            True - says that discounts value is set in global main currency, False - says that discounts value is set in site main currency. 
            Takes effect only if discount value is flat.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.IItemDiscount.ItemDiscountedUnits">
            <summary>
            Number of units the discount should be applied to
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.IItemDiscount.ItemDiscountCustomData">
            <summary>
            Discount custom data.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.ItemDiscount">
            <summary>
            Class representing custom discount which should be applied to the specified shopping cart item. It implements IItemDiscount interface.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ItemDiscount.#ctor">
            <summary>
            Constructor - Creates an empty ItemDiscount object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ItemDiscount.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor - Creates a new ItemDiscount object from serialized data.
            </summary>
            <param name="info">Stores all the data needed to serialize or deserialize the object</param>
            <param name="context">Describes the source and destination of a given serialized stream</param>
        </member>
        <member name="M:CMS.Ecommerce.ItemDiscount.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets object data.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ItemDiscount.ItemDiscountType">
            <summary>
            Type of the discount. 'Custom discount' type is set by default.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ItemDiscount.ItemDiscountID">
            <summary>
            Discount unique identifier.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ItemDiscount.ItemDiscountDisplayName">
            <summary>
            Discount display name which is displayed to the customers in shopping cart item price detail dialog.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ItemDiscount.ItemDiscountValue">
            <summary>
            Discount value. It can be either relative or flat according to the ItemDiscountIsFlat property.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ItemDiscount.ItemDiscountIsFlat">
            <summary>
            True - discount value is flat, False (default) - discount value is relative.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ItemDiscount.ItemDiscountIsGlobal">
            <summary>
            True - discount value is set in global main currency, False (default) - discount value is set in site main currency. 
            Takes effect only if discount value is flat.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ItemDiscount.ItemDiscountedUnits">
            <summary>
            Number of units the discount should be applied to
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ItemDiscount.ItemDiscountCustomData">
            <summary>
            Discount custom data.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.ItemDiscountProvider">
            <summary>
            Class providing calculation of custom discounts.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ItemDiscountProvider.CalculateUnitDiscount(CMS.Ecommerce.ShoppingCartItemInfo,CMS.Ecommerce.IItemDiscount)">
            <summary>
            Calculates value of the unit discount when it is applied to the given shopping cart item.
            </summary>
            <param name="item">Shopping cart item</param>
            <param name="discount">Discount data</param>       
        </member>
        <member name="T:CMS.Ecommerce.ECommerceContext">
            <summary>
            E-commerce context.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceContext.#ctor">
            <summary>
            Private constructor.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceContext.GetProperty(System.String)">
            <summary>
            Gets the context property.
            </summary>
            <param name="name">Property name</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceContext.SetProperty(System.String,System.Object)">
            <summary>
            Sets the context property.
            </summary>
            <param name="name">Property name</param>
            <param name="value">New value</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceContext.IsUserAuthorizedForPermission(System.String)">
            <summary>
            Checks the specified ecommerce permission for current user.
            </summary>
            <param name="permissionName">Permission name to be checked</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceContext.IsUserAuthorizedForDepartment(System.Int32)">
            <summary>
            Checks whether current user is authorized to access products from the specified department.
            </summary>
            <param name="departmentId">ID of the department</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceContext.IsUserAuthorizedToModifyCustomer">
            <summary>
            Indicates if user is authorized to modify specific customer. 
            'EcommerceModify' OR 'ModifyCustomers' permission is checked.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceContext.IsUserAuthorizedToModifyDiscountCoupon(CMS.Ecommerce.DiscountCouponInfo)">
            <summary>
            Indicates if user is authorized to modify specific discount coupon. 
            For global discount coupon: 'EcommerceGlobalModify' permission is checked. 
            For site-specific discount coupon: 'EcommerceModify' OR 'ModifyDiscounts' permission is checked.
            </summary>
            <param name="couponObj">Discount coupon to be checked</param>        
        </member>
        <member name="M:CMS.Ecommerce.ECommerceContext.IsUserAuthorizedToModifyDiscountCoupon(System.Boolean)">
            <summary>
            Indicates if user is authorized to modify discount coupons.
            </summary>
            <param name="global">For global discount coupons (global = True): 'EcommerceGlobalModify' permission is checked. 
            For site-specific discount coupons (global = False): 'EcommerceModify' OR 'ModifyDiscounts' permission is checked.</param>        
        </member>
        <member name="M:CMS.Ecommerce.ECommerceContext.IsUserAuthorizedToModifyDiscountLevel(CMS.Ecommerce.DiscountLevelInfo)">
            <summary>
            Indicates if user is authorized to modify specific discount level. 
            For global discount level: 'EcommerceGlobalModify' permission is checked. 
            For site-specific discount level: 'EcommerceModify' OR 'ModifyDiscounts' permission is checked.
            </summary>
            <param name="levelObj">Discount level to be checked</param>        
        </member>
        <member name="M:CMS.Ecommerce.ECommerceContext.IsUserAuthorizedToModifyDiscountLevel(System.Boolean)">
            <summary>
            Indicates if user is authorized to modify discount level.
            </summary>
            <param name="global">For global discount level (global = True): 'EcommerceGlobalModify' permission is checked. 
            For site-specific discount level (global = False): 'EcommerceModify' OR 'ModifyDiscounts' permission is checked.</param>        
        </member>
        <member name="M:CMS.Ecommerce.ECommerceContext.IsUserAuthorizedToModifyManufacturer(CMS.Ecommerce.ManufacturerInfo)">
            <summary>
            Indicates if current user is authorized to modify specific manufacturer. 
            For global manufacturer: 'EcommerceGlobalModify' permission is checked. 
            For site-specific manufacturer: 'EcommerceModify' OR 'ModifyManufacturers' permission is checked.
            </summary>
            <param name="manufacturerObj">Manufacturer to be checked</param>        
        </member>
        <member name="M:CMS.Ecommerce.ECommerceContext.IsUserAuthorizedToModifyManufacturer(System.Boolean)">
            <summary>
            Indicates if user is authorized to modify manufacturers.
            </summary>
            <param name="global">For global manufacturers (global = True): 'EcommerceGlobalModify' permission is checked. 
            For site-specific manufacturers (global = False): 'EcommerceModify' OR 'ModifyManufacturers' permission is checked.</param>        
        </member>
        <member name="M:CMS.Ecommerce.ECommerceContext.IsUserAuthorizedToModifyOptionCategory(CMS.Ecommerce.OptionCategoryInfo)">
            <summary>
            Indicates if user is authorized to modify specific option category. 
            For global option category: 'EcommerceGlobalModify' permission is checked. 
            For site-specific manufacturer: 'EcommerceModify' OR 'ModifyProducts' permission is checked.
            </summary>
            <param name="categoryObj">Option category to be checked</param>        
        </member>
        <member name="M:CMS.Ecommerce.ECommerceContext.IsUserAuthorizedToModifyOptionCategory(System.Boolean)">
            <summary>
            Indicates if user is authorized to modify option categories.
            </summary>
            <param name="global">For global option categories (global = True): 'EcommerceGlobalModify' permission is checked. 
            For site-specific option categories (global = False): 'EcommerceModify' OR 'ModifyProducts' permission is checked.</param>        
        </member>
        <member name="M:CMS.Ecommerce.ECommerceContext.IsUserAuthorizedToModifySKU(CMS.Ecommerce.SKUInfo)">
            <summary>
            Indicates if user is authorized to modify specific SKU. 
            For global SKU: 'EcommerceGlobalModify' permission is checked. 
            For site-specific SKU: 'EcommerceModify' OR 'ModifyProducts' permission is checked.
            </summary>
            <param name="skuObj">SKU to be checked</param>        
        </member>
        <member name="M:CMS.Ecommerce.ECommerceContext.IsUserAuthorizedToModifySKU(System.Boolean)">
            <summary>
            Indicates if user is authorized to modify SKUs.
            </summary>
            <param name="global">For global SKUs (global = True): 'EcommerceGlobalModify' permission is checked. 
            For site-specific SKUs (global = False): 'EcommerceModify' OR 'ModifyProducts' permission is checked.</param>        
        </member>
        <member name="M:CMS.Ecommerce.ECommerceContext.IsUserAuthorizedToModifySupplier(CMS.Ecommerce.SupplierInfo)">
            <summary>
            Indicates if user is authorized to modify specific supplier. 
            For global supplier: 'EcommerceGlobalModify' permission is checked. 
            For site-specific supplier: 'EcommerceModify' OR 'ModifySuppliers' permission is checked.
            </summary>
            <param name="supplierObj">Supplier to be checked</param>        
        </member>
        <member name="M:CMS.Ecommerce.ECommerceContext.IsUserAuthorizedToModifySupplier(System.Boolean)">
            <summary>
            Indicates if user is authorized to modify suppliers.
            </summary>
            <param name="global">For global suppliers (global = True): 'EcommerceGlobalModify' permission is checked. 
            For site-specific suppliers (global = False): 'EcommerceModify' OR 'ModifySuppliers' permission is checked.</param>        
        </member>
        <member name="M:CMS.Ecommerce.ECommerceContext.SetCurrentShoppingCart(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Sets cookie, context values according to given shopping cart and clears CurrentCurrency.
            </summary>
            <param name="cart">Shopping cart info object.</param>
        </member>
        <member name="P:CMS.Ecommerce.ECommerceContext.ContextObject">
            <summary>
            Context object.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ECommerceContext.Properties">
            <summary>
            Properties available through the context.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ECommerceContext.CurrentCustomer">
            <summary>
            Current customer.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ECommerceContext.CurrentCustomerCountry">
            <summary>
            Current customer country.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ECommerceContext.CurrentCustomerState">
            <summary>
            Current customer state.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ECommerceContext.CurrentShoppingCart">
            <summary>
            Returns the current Shopping cart info.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ECommerceContext.CurrentCurrency">
            <summary>
            Current currency.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ECommerceContext.CurrentExchangeRate">
            <summary>
            Exchange Rate.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ECommerceContext.CurrentProduct">
            <summary>
            Current product.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ECommerceContext.CurrentProductDepartment">
            <summary>
            Current product department.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ECommerceContext.CurrentProductSupplier">
            <summary>
            Current product supplier.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ECommerceContext.CurrentProductInternalStatus">
            <summary>
            Current product internal status.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ECommerceContext.CurrentProductPublicStatus">
            <summary>
            Current product public status.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.ECommerceModule">
            <summary>
            Module registration.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceModule.#ctor(CMS.SettingsProvider.ModuleInfo)">
            <summary>
            Constructor.
            </summary>
            <param name="info">Module info</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceModule.GetContexts">
            <summary>
            Returns the hashtable of the module contexts. [name.ToLower()] -> [AbstractContext]
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceModule.GetObject(System.Data.DataRow,System.String)">
            <summary>
            Gets the object created from the given DataRow.
            </summary>
            <param name="objectRow">Object DataRow</param>
            <param name="objectType">Object type</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceModule.ProcessCommand(System.String,System.Object[])">
            <summary>
            Processes the specified command.
            </summary>
            <param name="commandName">Command name</param>
            <param name="parameters">Command parameters</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceModule.ClearHashtables(System.Boolean)">
            <summary>
            Clears the module hashtables.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceModule.CheckLicense(System.String,CMS.SettingsProvider.FeatureEnum,CMS.SettingsProvider.VersionActionEnum)">
            <summary>
            Checks the license.
            </summary>
            <param name="domain">Domain name</param>
            <param name="feature">Feature</param>
            <param name="action">Action</param>
        </member>
        <member name="T:CMS.Ecommerce.EcommercePermissions">
            <summary>
            Class containg string contstants of all e-commerce module permissions.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.EcommercePermissions.ECOMMERCE_READ">
            <summary>
            Constant representing 'EcommerceRead' permission
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.EcommercePermissions.ECOMMERCE_MODIFY">
            <summary>
            Constant representing 'EcommerceModify' permission
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.EcommercePermissions.ECOMMERCE_MODIFYGLOBAL">
            <summary>
            Constant representing 'EcommerceGlobaModify' permission
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.EcommercePermissions.ECOMMERCE_DESTROY">
            <summary>
            Constant representing 'Destroy' permission
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.EcommercePermissions.CONFIGURATION_READ">
            <summary>
            Constant representing 'ConfigurationRead' permission
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.EcommercePermissions.CONFIGURATION_MODIFY">
            <summary>
            Constant representing 'ConfigurationModify' permission
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.EcommercePermissions.CONFIGURATION_MODIFYGLOBAL">
            <summary>
            Constant representing 'ConfigurationGlobalModify' permission
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.EcommercePermissions.ORDERS_READ">
            <summary>
            Constant representing 'ReadOrders' permission
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.EcommercePermissions.ORDERS_MODIFY">
            <summary>
            Constant representing 'ModifyOrders' permission
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.EcommercePermissions.REPORTS_READ">
            <summary>
            Constant representing 'ReadReports' permission
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.EcommercePermissions.CUSTOMERS_READ">
            <summary>
            Constant representing 'ReadCustomers' permission
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.EcommercePermissions.CUSTOMERS_MODIFY">
            <summary>
            Constant representing 'ModifyCustomers' permission
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.EcommercePermissions.PRODUCTS_READ">
            <summary>
            Constant representing 'ReadProducts' permission
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.EcommercePermissions.PRODUCTS_MODIFY">
            <summary>
            Constant representing 'ModifyProducts' permission
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.EcommercePermissions.PRODUCTS_ACCESSALLDEPARTMENTS">
            <summary>
            Constant representing 'AccessAllDepartments' permission
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.EcommercePermissions.DISCOUNTS_READ">
            <summary>
            Constant representing 'ReadDiscounts' permission
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.EcommercePermissions.DISCOUNTS_MODIFY">
            <summary>
            Constant representing 'ModifyDiscounts' permission
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.EcommercePermissions.MANUFACTURERS_READ">
            <summary>
            Constant representing 'ReadManufacturers' permission
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.EcommercePermissions.MANUFACTURERS_MODIFY">
            <summary>
            Constant representing 'ModifyManufacturers' permission
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.EcommercePermissions.SUPPLIERS_READ">
            <summary>
            Constant representing 'ReadSupplliers' permission
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.EcommercePermissions.SUPPLIERS_MODIFY">
            <summary>
            Constant representing 'ModifySupplliers' permission
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.ECommerceSettings">
            <summary>
            Class providing access to E-commerce related settings.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.ALLOW_ANONYMOUS_CUSTOMERS">
            <summary>
            Represents CMSStoreAllowAnonymousCustomers e-commerce setting key name.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.SHIPPING_FREE_LIMIT">
            <summary>
            Represents CMSStoreShippingFreeLimit e-commerce setting key name.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.SHOPPINGCART_URL">
            <summary>
            Represents CMSShoppingCartURL e-commerce setting key name.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.WISHLIST_URL">
            <summary>
            Represents CMSWishlistURL e-commerce setting key name.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.REDIRECT_TO_SHOPPINGCART">
            <summary>
            Represents CMSStoreRedirectToShoppingCart e-commerce setting key name.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.INVOICE_TEMPLATE">
            <summary>
            Represents CMSStoreInvoiceTemplate e-commerce setting key name.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.DEFAULT_COUNTRY_NAME">
            <summary>
            Represents CMSStoreDefaultCountryName e-commerce setting key name.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.SHOW_TAX_REGISTRATION_ID">
            <summary>
            Represents CMSStoreShowTaxRegistrationID e-commerce setting key name.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.SHOW_ORGANIZATION_ID">
            <summary>
            Represents CMSStoreShowOrganizationID e-commerce setting key name.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.SEND_EMAILS_FROM">
            <summary>
            Represents CMSStoreSendEmailsFrom e-commerce setting key name.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.SEND_EMAILS_TO">
            <summary>
            Represents CMSStoreSendEmailsTo e-commerce setting key name.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.USE_EXTRA_COMPANYADDRESS">
            <summary>
            Represents CMSStoreUseExtraCompanyAddress e-commerce setting key name.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.SEND_ORDER_NOTIFICATION">
            <summary>
            Represents CMSStoreSendOrderNotification e-commerce setting key name.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.SEND_PAYMENT_NOTIFICATION">
            <summary>
            Represents CMSStoreSendPaymentNotification e-commerce setting key name.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.CHECKOUT_PROCESS">
            <summary>
            Represents CMSStoreCheckoutProcess e-commerce setting key name.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.REQUIRE_COMPANYINFO">
            <summary>
            Represents CMSStoreRequireCompanyInfo e-commerce setting key name.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.APPLY_TAXES_BASED_ON">
            <summary>
            Represents CMSStoreApplyTaxBasedOn e-commerce setting key name.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.WEIGHT_FORMATTING_STRING">
            <summary>
            Represents CMSStoreWeightFormattingString e-commerce setting key name.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.USE_CUSTOMER_CULTURE_FOR_EMAILS">
            <summary>
            Represents CMSStoreUseCustomerCultureForEmails e-commerce settings key name.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.ALLOW_GLOBAL_PRODUCTS">
            <summary>
            Represents CMSStoreAllowGlobalProducts e-commerce setting key name.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.ALLOW_GLOBAL_PRODUCT_OPTIONS">
            <summary>
            Represents CMSStoreAllowGlobalProductOptions e-commerce setting key name.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.ALLOW_GLOBAL_MANUFACTURERS">
            <summary>
            Represents CMSStoreAllowGlobalManufacturers e-commerce setting key name.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.ALLOW_GLOBAL_SUPPLIERS">
            <summary>
            Represents CMSStoreAllowGlobalSuppliers e-commerce setting key name.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.ALLOW_GLOBAL_DISCOUNT_COUPONS">
            <summary>
            Represents CMSStoreAllowGlobalDiscountCoupons e-commerce setting key name.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.ALLOW_GLOBAL_DISCOUNT_LEVELS">
            <summary>
            Represents CMSStoreAllowGlobalDiscountLevels e-commerce setting key name.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.ALLOW_GLOBAL_DEPARTMENTS">
            <summary>
            Represents CMSStoreAllowGlobalDepartments e-commerce setting key name.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.ALLOW_GLOBAL_SHIPPING_OPTIONS">
            <summary>
            Represents CMSStoreAllowGlobalShippingOptions e-commerce setting key name.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.ALLOW_GLOBAL_PAYMENT_METHODS">
            <summary>
            Represents CMSStoreAllowGlobalPaymentMethods e-commerce setting key name.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.USE_GLOBAL_TAX_CLASSES">
            <summary>
            Represents CMSStoreUseGlobalTaxClasses e-commerce setting key name.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.USE_GLOBAL_CURRENCIES">
            <summary>
            Represents CMSStoreUseGlobalCurrencies e-commerce setting key name.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.USE_GLOBAL_EXCHANGE_RATES">
            <summary>
            Represents CMSStoreUseGlobalExchangeRates e-commerce setting key name.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.USE_GLOBAL_CREDIT">
            <summary>
            Represents CMSStoreUseGlobalCredit e-commerce setting key name.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.USE_GLOBAL_ORDER_STATUS">
            <summary>
            Represents CMSStoreUseGlobalOrderStatus e-commerce setting key name.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.USE_GLOBAL_PUBLIC_STATUS">
            <summary>
            Represents CMSStoreUseGlobalPublicStatus e-commerce setting key name.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.USE_GLOBAL_INTERNAL_STATUS">
            <summary>
            Represents CMSStoreUseGlobalInternalStatus e-commerce setting key name.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.USE_GLOBAL_INVOICE">
            <summary>
            Represents CMSStoreUseGlobalInvoice e-commerce setting key name.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.EPRODUCTS_REMINDER">
            <summary>
            Represents CMSStoreEProductsReminder e-commerce setting key name.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.REGISTRATION_CONVERSION_NAME">
            <summary>
            Represents CMSStoreRegistrationConversionName e-commerce setting key name.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.REGISTRATION_CONVERSION_VALUE">
            <summary>
            Represents CMSStoreRegistrationConversionValue e-commerce setting key name.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.ORDER_CONVERSION_NAME">
            <summary>
            Represents CMSStoreOrderConversionName e-commerce setting key name.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.ORDER_CONVERSION_VALUE">
            <summary>
            Represents CMSStoreOrderConversionValue e-commerce setting key name.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.ADD_TO_CART_CONVERSION_NAME">
            <summary>
            Represents CMSStoreAddToShoppingCartConversionName e-commerce setting key name.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.ADD_TO_CART_CONVERSION_VALUE">
            <summary>
            Represents CMSStoreAddToShoppingCartConversionValue e-commerce setting key name.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.AllowAnonymousCustomers(System.String)">
            <summary>
            Indicates if customers need to register in your site so that they can make the purchase.
            </summary>
            <param name="siteName">Code name of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.ShippingFreeLimit(System.String)">
            <summary>
            Gets the minimum order value when the shipping is not charged. If not set, returns -1.
            </summary>
            <param name="siteName">Code name of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.ShoppingCartURL(System.String)">
            <summary>
            Gets the URL of the shopping cart page.
            </summary>
            <param name="siteName">Code name of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.WishListURL(System.String)">
            <summary>
            Gets the URL of the wish list page.
            </summary>
            <param name="siteName">Code name of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.RedirectToShoppingCart(System.String)">
            <summary>
            Indicates if user will be redirected to shopping cart after adding product to cart.
            </summary>
            <param name="siteName">Code name of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.InvoiceTemplate(System.String)">
            <summary>
            Gets HTML template used to generate an invoice (or receipt) after an order is finished and saved.
            </summary>
            <param name="siteName">Code name of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.DefaultCountryName(System.String)">
            <summary>
            Gets default country, choose your country or country where you sell the most. All taxes are applied based on their values in the default country unless the customer specifies their country or state during the checkout process.
            </summary>
            <param name="siteName">Code name of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.ShowTaxRegistrationID(System.String)">
            <summary>
            Indicates if organization ID field (e.g. VAT registration ID) should be displayed.
            </summary>
            <param name="siteName">Code name of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.ShowOrganizationID(System.String)">
            <summary>
            Indicates if organization ID field should be displayed.
            </summary>
            <param name="siteName">Code name of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.SendEmailsFrom(System.String)">
            <summary>
            Gets an e-mail address the e-commerce notification e-mails are sent from.
            </summary>
            <param name="siteName">Code name of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.SendEmailsTo(System.String)">
            <summary>
            Gets site-related e-mail address (e.g. merchant's e-mail address) the e-commerce notification e-mails are sent to.
            </summary>
            <param name="siteName">Code name of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.UseExtraCompanyAddress(System.String)">
            <summary>
            Indicates if the option of providing company address is available in the check out process.
            </summary>
            <param name="siteName">Code name of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.SendOrderNotification(System.String)">
            <summary>
            Indicates if e-mail notifications are sent after an order is finished and saved.
            </summary>
            <param name="siteName">Code name of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.SendPaymentNotification(System.String)">
            <summary>
            Indicates if e-mail notifications are sent after an order payment is completed.
            </summary>
            <param name="siteName">Code name of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.CheckoutProcess(System.String)">
            <summary>
            Gets the checkout process used in the store shopping cart.
            </summary>
            <param name="siteName">Code name of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.RequireCompanyInfo(System.String)">
            <summary>
            Indicates if it is compulsory to provide company account information in the check out process.
            </summary>
            <param name="siteName">Code name of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.ApplyTaxesBasedOn(System.String)">
            <summary>
            Indicates whether the tax is applied based on shipping or billing address.
            </summary>
            <param name="siteName">Code name of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.WeightFormattingString(System.String)">
            <summary>
            Gets the format used to display product weight. Use {0} expression to insert the weight into the formatting string.
            </summary>
            <param name="siteName">Code name of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.UseCustomerCultureForEmails(System.String)">
            <summary>
            Indicates if emails to customer will be sent in shopping cart culture. 
            </summary>
            <param name="siteName">Code name of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.AllowGlobalProducts(System.String)">
            <summary>
            Indicates if global products are allowed.
            </summary>
            <param name="siteName">Code name of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.AllowGlobalProductOptions(System.String)">
            <summary>
            Indicates if global product options are allowed.
            </summary>
            <param name="siteName">Code name of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.AllowGlobalManufacturers(System.String)">
            <summary>
            Indicates if global manufacturers are allowed.
            </summary>
            <param name="siteName">Code name of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.AllowGlobalSuppliers(System.String)">
            <summary>
            Indicates if global suppliers are allowed.
            </summary>
            <param name="siteName">Code name of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.AllowGlobalDiscountCoupons(System.String)">
            <summary>
            Indicates if global discount coupons are allowed.
            </summary>
            <param name="siteName">Code name of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.AllowGlobalDiscountLevels(System.String)">
            <summary>
            Indicates if global discount levels are allowed.
            </summary>
            <param name="siteName">Code name of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.AllowGlobalDepartments(System.String)">
            <summary>
            Indicates if global departments are allowed.
            </summary>
            <param name="siteName">Code name of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.AllowGlobalShippingOptions(System.String)">
            <summary>
            Indicates if global shipping options are allowed.
            </summary>
            <param name="siteName">Code name of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.AllowGlobalPaymentMethods(System.String)">
            <summary>
            Indicates if global payment methods are allowed.
            </summary>
            <param name="siteName">Code name of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.UseGlobalTaxClasses(System.String)">
            <summary>
            Indicates if global tax classes are used.
            </summary>
            <param name="siteName">Code name of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.UseGlobalCurrencies(System.String)">
            <summary>
            Indicates if global currencies are used.
            </summary>
            <param name="siteName">Code name of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.UseGlobalExchangeRates(System.String)">
            <summary>
            Indicates if global exchange rates are used.
            </summary>
            <param name="siteName">Code name of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.UseGlobalCredit(System.String)">
            <summary>
            Indicates if global credit is used.
            </summary>
            <param name="siteName">Code name of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.UseGlobalOrderStatus(System.String)">
            <summary>
            Indicates if global order statuses are used.
            </summary>
            <param name="siteName">Code name of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.UseGlobalPublicStatus(System.String)">
            <summary>
            Indicates if global public statuses are used.
            </summary>
            <param name="siteName">Code name of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.UseGlobalInternalStatus(System.String)">
            <summary>
            Indicates if global internal statuses are used.
            </summary>
            <param name="siteName">Code name of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.UseGlobalInvoice(System.String)">
            <summary>
            Indicates if global invoice is used.
            </summary>
            <param name="siteName">Code name of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.EProductsReminder(System.String)">
            <summary>
            Gets number of days before e-product expiration when reminder is to be sent.
            </summary>
            <param name="siteName">Code name of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.RegistrationConversionName(System.String)">
            <summary>
            Name of the conversion that will be logged when a user successfully registers on the website through the checkout process.
            </summary>
            <param name="siteName">Code name of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.RegistrationConversionValue(System.String)">
            <summary>
            Number that will be recorded along with the Registration conversion when it is logged. 
            </summary>
            <param name="siteName">Code name of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.OrderConversionName(System.String)">
            <summary>
            Name of the conversion that will be logged when a user completes an order.
            </summary>
            <param name="siteName">Code name of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.OrderConversionValue(System.String)">
            <summary>
            Number that will be recorded along with the Order conversion when it is logged. 
            </summary>
            <param name="siteName">Code name of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.AddToCartConversionName(System.String)">
            <summary>
            Name of the conversion that will be logged when a user adds a product to the shopping cart.
            </summary>
            <param name="siteName">Code name of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.AddToCartConversionValue(System.String)">
            <summary>
            Number that will be recorded along with the specified conversion when a product is added to the shopping cart. 
            </summary>
            <param name="siteName">Code name of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.GetApplyTaxesBasedOnEnum(System.String)">
            <summary>
            Converts string value to ApplyTaxBasedOnEnum. Default value is ApplyTaxBasedOnEnum.BillingAddress.
            </summary>
            <param name="taxBasedOn">'ShippingAddress' or 'BillinAddress'.</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.GetApplyTaxesBasedOnString(CMS.Ecommerce.ApplyTaxBasedOnEnum)">
            <summary>
            Converts ApplyTaxBasedOnEnum to string value. Default value is BILLINGADDRESS.
            </summary>
            <param name="taxBasedOn">TaxBased on option.</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.EnsureKeyName(System.String,System.String)">
            <summary>
            Ensures fully qualified settings key name when site name is null or empty.
            </summary>
            <param name="siteName">Name of the site</param>
            <param name="keyName">Name of the settings key</param>
        </member>
        <member name="P:CMS.Ecommerce.ECommerceSettings.EnableOrderItemEditing">
            <summary>
            If true, order item parameters, such as order item name and order item unit price, can be modified when editing an existing order.
            Value is taken from webconfig key CMSEnableOrderItemEditing. Default value is false.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ECommerceSettings.UseCurrentSKUData">
            <summary>
            Indicates if current SKU data are used instead of order item data when editing existing order. Value is taken from 
            webconfig key CMSUseCurrentSKUData. Default value is false.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ECommerceSettings.UseMetaFileForProductImage">
            <summary>
            Indicates if meta file should be used for product image. Value is taken from webconfig key CMSUseMetaFileForProductImage.
            Default value is true.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ECommerceSettings.ShoppingCartExpirationPeriod">
            <summary>
            Number of days before the shopping cart is expired. Value is taken from webconfig key CMSShoppingCartExpirationPeriod.
            Default value is 30 days.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.AddressInfo">
            <summary>
            AddressInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.AddressInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.AddressInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.AddressInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.AddressInfo.TryGetProperty(System.String,System.Object@)">
            <summary>
            Returns value of property (additional support for Country and State properties).
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">Returns the value</param>
            <returns>Returns true if the operation was successful (the value was present)</returns>
        </member>
        <member name="M:CMS.Ecommerce.AddressInfo.#ctor">
            <summary>
            Constructor - Creates an empty AddressInfo object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.AddressInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new AddressInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.AddressInfo.CheckPermissions(CMS.SettingsProvider.PermissionsEnum,System.String,CMS.SettingsProvider.IUserInfo)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
        </member>
        <member name="P:CMS.Ecommerce.AddressInfo.AddressCustomerID">
            <summary>
            Address customer ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.AddressInfo.AddressZip">
            <summary>
            Address ZIP code.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.AddressInfo.AddressStateID">
            <summary>
            Address state ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.AddressInfo.AddressPhone">
            <summary>
            Address phone.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.AddressInfo.AddressCountryID">
            <summary>
            Address country ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.AddressInfo.AddressID">
            <summary>
            Address ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.AddressInfo.AddressName">
            <summary>
            Address name.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.AddressInfo.AddressPersonalName">
            <summary>
            Address personal name.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.AddressInfo.AddressLine1">
            <summary>
            Address line 1.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.AddressInfo.AddressEnabled">
            <summary>
            Indicates if the address is enabled.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.AddressInfo.AddressLine2">
            <summary>
            Address line 2.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.AddressInfo.AddressCity">
            <summary>
            Address city.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.AddressInfo.AddressIsShipping">
            <summary>
            Indicates if the address is supposed to be used as shipping address.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.AddressInfo.AddressIsBilling">
            <summary>
            Indicates if the address is supposed to be used as billing address.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.AddressInfo.AddressIsCompany">
            <summary>
            Indicates if the address is supposed to be used as company address.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.AddressInfo.AddressGUID">
            <summary>
            Address GUID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.AddressInfo.AddressLastModified">
            <summary>
            Date and time when the address was last modified.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.AddressInfoProvider">
            <summary>
            Class providing AddressInfo management.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.AddressInfoProvider.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.AddressInfoProvider.GetAddresses(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all addresses matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.Ecommerce.AddressInfoProvider.GetAddresses(System.String,System.String)">
            <summary>
            Returns dataset of all addresses matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
        </member>
        <member name="M:CMS.Ecommerce.AddressInfoProvider.GetAddressInfo(System.Int32)">
            <summary>
            Returns address with specified ID.
            </summary>
            <param name="addressId">Address ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.AddressInfoProvider.SetAddressInfo(CMS.Ecommerce.AddressInfo)">
            <summary>
            Sets (updates or inserts) specified address.
            </summary>
            <param name="addressObj">Address to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.AddressInfoProvider.DeleteAddressInfo(CMS.Ecommerce.AddressInfo)">
            <summary>
            Deletes specified address.
            </summary>
            <param name="addressObj">Address to be deleted</param>
        </member>
        <member name="M:CMS.Ecommerce.AddressInfoProvider.DeleteAddressInfo(System.Int32)">
            <summary>
            Deletes address with specified ID.
            </summary>
            <param name="addressId">Address ID</param>
        </member>
        <member name="M:CMS.Ecommerce.AddressInfoProvider.Clear(System.Boolean)">
            <summary>
            Clears hashtables.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.Ecommerce.AddressInfoProvider.GetAddresses(System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Returns dataset of all addresses matching the specified parameters.
            </summary>
            <param name="customerId">ID of the customer the address belongs to</param>
            <param name="billing">Indicates if customer's billing addresses should be included into to result</param>
            <param name="shipping">Indicates if customer's shipping addresses should be included into to result</param>
            <param name="company">Indicates if customer's company addresses should be included into to result</param>
            <param name="onlyEnabled">Indicates if only customer's enabled addresses should be returned</param>
        </member>
        <member name="M:CMS.Ecommerce.AddressInfoProvider.GetAddressName(CMS.Ecommerce.AddressInfo)">
            <summary>
            Returns address name created from the address parameters. The format of the address name is [personal or company name], [address line 1], [address line 2], [city].
            </summary>
            <param name="addressObj">Address data</param>
        </member>
        <member name="M:CMS.Ecommerce.AddressInfoProvider.CheckDependencies(System.Int32)">
            <summary>
            Checks the address dependencies. Returns true if there are depending objects.
            </summary>
            <param name="addressId">Address ID</param>
        </member>
        <member name="M:CMS.Ecommerce.AddressInfoProvider.GetAddressesInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all addresses matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.Ecommerce.AddressInfoProvider.GetAddressInfoInternal(System.Int32)">
            <summary>
            Returns address with specified ID.
            </summary>
            <param name="addressId">Address ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.AddressInfoProvider.SetAddressInfoInternal(CMS.Ecommerce.AddressInfo)">
            <summary>
            Sets (updates or inserts) specified address.
            </summary>
            <param name="addressObj">Address to be set</param>        
        </member>
        <member name="M:CMS.Ecommerce.AddressInfoProvider.DeleteAddressInfoInternal(CMS.Ecommerce.AddressInfo)">
            <summary>
            Deletes specified address.
            </summary>
            <param name="addressObj">Address to be deleted</param>        
        </member>
        <member name="M:CMS.Ecommerce.AddressInfoProvider.GetAddressesInternal(System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Returns dataset of all addresses matching the specified parameters.
            </summary>
            <param name="customerId">ID of the customer the address belongs to</param>
            <param name="billing">Indicates if customer's billing addresses should be included into the result</param>
            <param name="shipping">Indicates if customer's shipping addresses should be included into the result</param>
            <param name="company">Indicates if customer's company addresses should be included into the result</param>
            <param name="onlyEnabled">Indicates if only customer's enabled addresses should be returned</param>
        </member>
        <member name="M:CMS.Ecommerce.AddressInfoProvider.GetAddressNameInternal(CMS.Ecommerce.AddressInfo)">
            <summary>
            Returns address name created from the address parameters. The format of the address name is [personal or company name], [address line 1], [address line 2], [city].
            </summary>
            <param name="addressObj">Address data</param>
        </member>
        <member name="T:CMS.Ecommerce.CustomerListInfo">
            <summary>
            CustomerListInfo virtual object.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.CustomerListInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CustomerListInfo.#ctor">
            <summary>
            Constructor - Creates an empty CustomerListInfo object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CustomerListInfo.GetData(CMS.SettingsProvider.QueryDataParameters,System.String,System.String,System.Int32,System.String,System.Boolean,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns the data according to the set of input parameters.
            </summary>
            <param name="parameters">Query parameters</param>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
            <param name="topN">Specifies number of returned records</param>        
            <param name="columns">Data columns to return</param>
            <param name="binaryData">If true, binary data are returned in the result</param>
            <param name="offset">Index of first record to get</param>
            <param name="maxRecords">Maximum number of records to get. If maxRecords is zero or less, all records are returned (no paging is used)</param>
            <param name="totalRecords">Returns total number of available records</param>        
        </member>
        <member name="T:CMS.Ecommerce.ApplyTaxBasedOnEnum">
            <summary>
            Options saying what the taxes are to be based on.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ApplyTaxBasedOnEnum.BillingAddress">
            <summary>
            Taxes are based on billing address.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ApplyTaxBasedOnEnum.ShippingAddress">
            <summary>
            Taxes are based on shipping address.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.BundleInventoryTypeEnum">
            <summary>
            Inventory removal options for bundle products.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.BundleInventoryTypeEnum.RemoveBundle">
            <summary>
            Remove only bundle itself from inventory.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.BundleInventoryTypeEnum.RemoveProducts">
            <summary>
            Remove only bundle items from inventory.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.BundleInventoryTypeEnum.RemoveBundleAndProducts">
            <summary>
            Remove both bundle and bundle items from inventory.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.SKUProductTypeEnum">
            <summary>
            SKU product type options.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.SKUProductTypeEnum.Product">
            <summary>
            Standard product type.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.SKUProductTypeEnum.Membership">
            <summary>
            Membership product type.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.SKUProductTypeEnum.EProduct">
            <summary>
            E-product product type.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.SKUProductTypeEnum.Donation">
            <summary>
            Donation product type.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.SKUProductTypeEnum.Bundle">
            <summary>
            Bundle product type.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.SKUProductTypeEnum.Text">
            <summary>
            Text product type. Used for product options to which customer is able to define his custom text, e.g. custom label for a T-shirt.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.ItemTax">
            <summary>
            Class representing tax which should be applied to the specified shopping cart item. It implements IItemTaxinterface.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ItemTax.#ctor">
            <summary>
            Constructor - Creates an empty ItemTax object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ItemTax.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor - Creates a new ItemTax object from serialized data.
            </summary>
            <param name="info">Stores all the data needed to serialize or deserialize the object</param>
            <param name="context">Describes the source and destination of a given serialized stream</param>
        </member>
        <member name="M:CMS.Ecommerce.ItemTax.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets object data.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ItemTax.ItemTaxID">
            <summary>
            Tax class unique identifier.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ItemTax.ItemTaxDisplayName">
            <summary>
            Tax class display name.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ItemTax.ItemTaxValue">
            <summary>
            Tax class value. It can be either relative or flat according to the ItemTaxClassIsFlat property.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ItemTax.ItemTaxIsFlat">
            <summary>
            True - tax class value is flat, False (default) - tax class is relative.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ItemTax.ItemTaxIsGlobal">
            <summary>
            True - tax class value is set in global main currency, False (default) - tax class value is set in site main currency. 
            Takes effect only if tax class is flat.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ItemTax.ItemTaxZeroIfIDSupplied">
            <summary>
            True - if customer's tax ID is supplied, the tax value for the customer is zero. False (default) - value of the tax is calculated
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ItemTax.ItemTaxCustomData">
            <summary>
            Tax class custom data.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.OrdersCollection">
            <summary>
            Collection of customer orders represented by OrderInfo objects
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OrdersCollection.RegisterProperties(System.Collections.Generic.List{System.String})">
            <summary>
            Registers supported properties
            </summary>
            <param name="properties">List with supported properties</param>
        </member>
        <member name="M:CMS.Ecommerce.OrdersCollection.TryGetProperty(System.String,System.Object@)">
            <summary>
            Returns true if given column name exists and the value can be returned.
            </summary>
            <param name="columnName">Name of the column</param>
            <param name="value">Here the result of GetValue is returned</param>
        </member>
        <member name="M:CMS.Ecommerce.OrdersCollection.#ctor(System.Int32,System.Int32)">
            <summary>
            Constructor - creates collection of orders for the given customer
            </summary>
            <param name="customerId">Customer ID</param>
            <param name="siteId">ID of the site from which the customer orders should be loaded. Use 0 to fill collection with customer orders from all sites.</param>
        </member>
        <member name="P:CMS.Ecommerce.OrdersCollection.TotalVolume">
            <summary>
            Total volume of all customer orders. Value is expressed in site main currency for site orders. 
            Result is in global main currency when collection contains orders from all sites.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.OrderItemSKUFileInfo">
            <summary>
            OrderItemSKUFileInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.OrderItemSKUFileInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OrderItemSKUFileInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OrderItemSKUFileInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OrderItemSKUFileInfo.#ctor">
            <summary>
            Constructor - Creates an empty OrderItemSKUFileInfo object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OrderItemSKUFileInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new OrderItemSKUFileInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data.</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderItemSKUFileInfo.CheckPermissions(CMS.SettingsProvider.PermissionsEnum,System.String,CMS.SettingsProvider.IUserInfo)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
        </member>
        <member name="P:CMS.Ecommerce.OrderItemSKUFileInfo.Token">
            <summary>
            Unique download identificator.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderItemSKUFileInfo.OrderItemID">
            <summary>
            Parent order item ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderItemSKUFileInfo.FileDownloads">
            <summary>
            Number of times the file was downloaded.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderItemSKUFileInfo.OrderItemSKUFileID">
            <summary>
            Order item SKU file ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderItemSKUFileInfo.FileID">
            <summary>
            Associated SKU file ID.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.OrderItemSKUFileInfoProvider">
            <summary>
            Class providing OrderItemSKUFileInfo management.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OrderItemSKUFileInfoProvider.GetOrderItemSKUFiles(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all order item SKU files matching the specified parameters.
            </summary>
            <param name="where">Where condition.</param>
            <param name="orderBy">Order by expression.</param>
            <param name="topN">Number of records to be selected.</param>        
            <param name="columns">Columns to be selected.</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderItemSKUFileInfoProvider.GetOrderItemSKUFiles(System.String,System.String)">
            <summary>
            Returns dataset of all order item SKU files matching the specified parameters.
            </summary>
            <param name="where">Where condition.</param>
            <param name="orderBy">Order by expression.</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderItemSKUFileInfoProvider.GetOrderItemSKUFileInfo(System.Int32)">
            <summary>
            Returns order item SKU file with specified ID.
            </summary>
            <param name="fileId">Order item SKU file ID.</param>        
        </member>
        <member name="M:CMS.Ecommerce.OrderItemSKUFileInfoProvider.GetOrderItemSKUFileInfo(System.Guid)">
            <summary>
            Returns order item SKU file with specified unique token.
            </summary>
            <param name="token">Order item SKU file unique token.</param>        
        </member>
        <member name="M:CMS.Ecommerce.OrderItemSKUFileInfoProvider.SetOrderItemSKUFileInfo(CMS.Ecommerce.OrderItemSKUFileInfo)">
            <summary>
            Sets (updates or inserts) specified order item SKU file.
            </summary>
            <param name="fileObj">Order item SKU file to be set.</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderItemSKUFileInfoProvider.DeleteOrderItemSKUFileInfo(CMS.Ecommerce.OrderItemSKUFileInfo)">
            <summary>
            Deletes specified order item SKU file.
            </summary>
            <param name="fileObj">Order item SKU file to be deleted.</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderItemSKUFileInfoProvider.DeleteOrderItemSKUFileInfo(System.Int32)">
            <summary>
            Deletes order item SKU file with specified ID.
            </summary>
            <param name="fileId">Order item SKU file ID.</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderItemSKUFileInfoProvider.GetOrderItemSKUFiles(System.Int32)">
            <summary>
            Returns dataset of all order item SKU files matching the specified parameters with additional details.
            </summary>
            <param name="orderId">Order ID</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderItemSKUFileInfoProvider.GetOrderItemSKUFileUrl(System.Guid,System.String,System.Int32)">
            <summary>
            Returns e-product download URL.
            </summary>
            <param name="token">File unique download token</param>
            <param name="fileName">File name</param>
            <param name="siteId">Site ID of the order in which the e-product is included</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderItemSKUFileInfoProvider.GetOrderItemSKUFilesInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all order item SKU files matching the specified parameters.
            </summary>
            <param name="where">Where condition.</param>
            <param name="orderBy">Order by expression.</param>
            <param name="topN">Number of records to be selected.</param>        
            <param name="columns">Columns to be selected.</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderItemSKUFileInfoProvider.GetOrderItemSKUFileInfoInternal(System.Int32)">
            <summary>
            Returns order item SKU file with specified ID.
            </summary>
            <param name="fileId">Order item SKU file ID.</param>        
        </member>
        <member name="M:CMS.Ecommerce.OrderItemSKUFileInfoProvider.GetOrderItemSKUFileInfoInternal(System.Guid)">
            <summary>
            Returns order item SKU file with specified unique token.
            </summary>
            <param name="token">Order item SKU file unique token.</param>      
        </member>
        <member name="M:CMS.Ecommerce.OrderItemSKUFileInfoProvider.SetOrderItemSKUFileInfoInternal(CMS.Ecommerce.OrderItemSKUFileInfo)">
            <summary>
            Sets (updates or inserts) specified order item SKU file.
            </summary>
            <param name="fileObj">Order item SKU file to be set.</param>        
        </member>
        <member name="M:CMS.Ecommerce.OrderItemSKUFileInfoProvider.DeleteOrderItemSKUFileInfoInternal(CMS.Ecommerce.OrderItemSKUFileInfo)">
            <summary>
            Deletes specified order item SKU file.
            </summary>
            <param name="fileObj">Order item SKU file to be deleted.</param>        
        </member>
        <member name="M:CMS.Ecommerce.OrderItemSKUFileInfoProvider.GetOrderItemSKUFilesInternal(System.Int32)">
            <summary>
            Returns dataset of all order item SKU files matching the specified parameters with additional details.
            </summary>
            <param name="orderId">Order ID</param>
        </member>
        <member name="T:CMS.Ecommerce.OrderListInfo">
            <summary>
            OrderListInfo virtual object.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.OrderListInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OrderListInfo.#ctor">
            <summary>
            Constructor - Creates an empty OrderListInfo object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OrderListInfo.GetData(CMS.SettingsProvider.QueryDataParameters,System.String,System.String,System.Int32,System.String,System.Boolean,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns the data according to the set of input parameters.
            </summary>
            <param name="parameters">Query parameters</param>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
            <param name="topN">Specifies number of returned records</param>        
            <param name="columns">Data columns to return</param>
            <param name="binaryData">If true, binary data are returned in the result</param>
            <param name="offset">Index of first record to get</param>
            <param name="maxRecords">Maximum number of records to get. If maxRecords is zero or less, all records are returned (no paging is used)</param>
            <param name="totalRecords">Returns total number of available records</param>        
        </member>
        <member name="T:CMS.Ecommerce.ShippingCostInfo">
            <summary>
            ShippingCostInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ShippingCostInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ShippingCostInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ShippingCostInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ShippingCostInfo.#ctor">
            <summary>
            Constructor - Creates an empty ShippingCostInfo object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ShippingCostInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new ShippingCostInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ShippingCostInfo.CheckPermissions(CMS.SettingsProvider.PermissionsEnum,System.String,CMS.SettingsProvider.IUserInfo)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
        </member>
        <member name="P:CMS.Ecommerce.ShippingCostInfo.ShippingCostGUID">
            <summary>
            Shipping cost unique identifier.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShippingCostInfo.ShippingCostLastModified">
            <summary>
            Date and time when the shipping cost was last modified.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShippingCostInfo.ShippingCostMinWeight">
            <summary>
            Order minimal weight the shipping cost is applied for.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShippingCostInfo.ShippingCostShippingOptionID">
            <summary>
            ID of the shipping option the shipping cost belongs to.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShippingCostInfo.ShippingCostValue">
            <summary>
            Shipping cost value.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShippingCostInfo.ShippingCostID">
            <summary>
            Shipping cost ID.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.ShippingCostInfoProvider">
            <summary>
            Class providing ShippingCostInfo management.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ShippingCostInfoProvider.GetShippingCosts(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all shipping costs matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.Ecommerce.ShippingCostInfoProvider.GetShippingCosts(System.Int32)">
            <summary>
            Returns dataset of shipping costs for all weight categories in given shipping option. Result is ordered by min weight.
            </summary>
            <param name="shippingOptionId">Id of the shipping option</param>
        </member>
        <member name="M:CMS.Ecommerce.ShippingCostInfoProvider.GetShippingCostInfo(System.Int32)">
            <summary>
            Returns shipping cost with specified ID.
            </summary>
            <param name="shippingCostId">Shipping cost ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShippingCostInfoProvider.GetShippingCostInfo(System.Int32,System.Double)">
            <summary>
            Returns appropriate shipping cost for given shipping option and weight.
            </summary>
            <param name="shippingId">Id of the shipping option</param>
            <param name="weight">Weight of delivery</param>
        </member>
        <member name="M:CMS.Ecommerce.ShippingCostInfoProvider.SetShippingCostInfo(CMS.Ecommerce.ShippingCostInfo)">
            <summary>
            Sets (updates or inserts) specified shipping cost.
            </summary>
            <param name="shippingCostObj">Shipping cost to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.ShippingCostInfoProvider.DeleteShippingCostInfo(CMS.Ecommerce.ShippingCostInfo)">
            <summary>
            Deletes specified shipping cost.
            </summary>
            <param name="shippingCostObj">Shipping cost to be deleted</param>
        </member>
        <member name="M:CMS.Ecommerce.ShippingCostInfoProvider.DeleteShippingCostInfo(System.Int32)">
            <summary>
            Deletes shipping cost with specified ID.
            </summary>
            <param name="shippingCostId">Shipping cost ID</param>
        </member>
        <member name="M:CMS.Ecommerce.ShippingCostInfoProvider.RecalculateShippingCosts(System.Single,System.Int32,System.String)">
            <summary>
            Recalculates costs values using the given coefficient. Shipping option charge of parent shipping option record will NOT be changed.
            </summary>
            <param name="coefficient">Factor by which values are recalculated</param>
            <param name="roundTo">Number of significant digits the number should be rounded to</param>
            <param name="where">Additional where condition</param>
        </member>
        <member name="M:CMS.Ecommerce.ShippingCostInfoProvider.GetShippingCostsInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all shipping costs matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.Ecommerce.ShippingCostInfoProvider.GetShippingCostsInternal(System.Int32)">
            <summary>
            Returns dataset of shipping costs for all weight categories in given shipping option. Result is ordered by min weight.
            </summary>
            <param name="shippingOptionId">Id of the shipping option</param>
        </member>
        <member name="M:CMS.Ecommerce.ShippingCostInfoProvider.GetShippingCostInfoInternal(System.Int32)">
            <summary>
            Returns shipping cost with specified ID.
            </summary>
            <param name="shippingCostId">Shipping cost ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShippingCostInfoProvider.GetShippingCostInfoInternal(System.Int32,System.Double)">
            <summary>
            Returns appropriate shipping cost for given shipping option and weight of delivery.
            </summary>
            <param name="shippingId">Id of the shipping option</param>
            <param name="weight">Weight of delivery</param>
        </member>
        <member name="M:CMS.Ecommerce.ShippingCostInfoProvider.SetShippingCostInfoInternal(CMS.Ecommerce.ShippingCostInfo)">
            <summary>
            Sets (updates or inserts) specified shipping cost.
            </summary>
            <param name="shippingCostObj">Shipping cost to be set</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShippingCostInfoProvider.DeleteShippingCostInfoInternal(CMS.Ecommerce.ShippingCostInfo)">
            <summary>
            Deletes specified shipping cost.
            </summary>
            <param name="shippingCostObj">Shipping cost to be deleted</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShippingCostInfoProvider.RecalculateShippingCostsInternal(System.Single,System.Int32,System.String)">
            <summary>
            Recalculates costs values using the given coefficient. Shipping option charge of parent shipping option record will NOT be changed.
            </summary>
            <param name="coefficient">Factor by which values are recalculated</param>
            <param name="roundTo">Number of significant digits the number should be rounded to</param>
            <param name="where">Additional where condition</param>
        </member>
        <member name="T:CMS.Ecommerce.ShippingOptionTaxClassInfo">
            <summary>
            ShippingOptionTaxClassInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ShippingOptionTaxClassInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionTaxClassInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionTaxClassInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionTaxClassInfo.#ctor">
            <summary>
            Constructor - Creates an empty ShippingOptionTaxClassInfo object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionTaxClassInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new ShippingOptionTaxClassInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionTaxClassInfo.CheckPermissions(CMS.SettingsProvider.PermissionsEnum,System.String,CMS.SettingsProvider.IUserInfo)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
        </member>
        <member name="P:CMS.Ecommerce.ShippingOptionTaxClassInfo.TaxClassID">
            <summary>
            Tax class ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShippingOptionTaxClassInfo.ShippingOptionID">
            <summary>
            Shipping option ID.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.ShippingOptionTaxClassInfoProvider">
            <summary>
            Class providing ShippingOptionTaxClassInfo management.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionTaxClassInfoProvider.GetShippingOptionTaxClasses(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all relationships between shipping options and tax classes matching the specified criteria.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionTaxClassInfoProvider.GetShippingOptionTaxClasses(System.String,System.String)">
            <summary>
            Returns dataset of all relationships between shipping options and tax classes matching the specified criteria.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionTaxClassInfoProvider.GetShippingOptionTaxClassInfo(System.Int32,System.Int32)">
            <summary>
            Returns relationship between specified shipping option and tax class.
            </summary>
            <param name="shippingOptionId">Shipping option ID</param>
            <param name="taxClassId">Tax class ID</param>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionTaxClassInfoProvider.SetShippingOptionTaxClassInfo(CMS.Ecommerce.ShippingOptionTaxClassInfo)">
            <summary>
            Sets relationship between specified shipping option and tax class.
            </summary>
            <param name="infoObj">Shipping option-tax class relationship to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionTaxClassInfoProvider.DeleteShippingOptionTaxClassInfo(CMS.Ecommerce.ShippingOptionTaxClassInfo)">
            <summary>
            Deletes relationship between specified shipping option and tax class.
            </summary>
            <param name="infoObj">Shipping option-tax class relationship to be deleted</param>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionTaxClassInfoProvider.AddTaxClassToShippingOption(System.Int32,System.Int32)">
            <summary>
            Sets relationship between specified shipping option and tax class.
            </summary>  
            <param name="shippingOptionId">Shipping option ID</param>
            <param name="taxClassId">Tax class ID</param>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionTaxClassInfoProvider.RemoveTaxClassFromShippingOption(System.Int32,System.Int32)">
            <summary>
            Deletes relationship between specified shipping option and tax class.
            </summary>
            <param name="shippingOptionId">Shipping option ID</param>
            <param name="taxClassId">Tax class ID</param>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionTaxClassInfoProvider.GetShippingOptionTaxClasses(System.Int32)">
            <summary>
            Returns dataset of all relationships between specified shipping option and tax classes.
            </summary>
            <param name="shippingOptionId">Shipping option ID</param>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionTaxClassInfoProvider.GetShippingOptionTaxClassesInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all relationships between shipping options and tax classes matching the specified criteria.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionTaxClassInfoProvider.GetShippingOptionTaxClassInfoInternal(System.Int32,System.Int32)">
            <summary>
            Returns relationship between specified shipping option and tax class.
            </summary>
            <param name="shippingOptionId">Shipping option ID</param>
            <param name="taxClassId">Tax class ID</param>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionTaxClassInfoProvider.SetShippingOptionTaxClassInfoInternal(CMS.Ecommerce.ShippingOptionTaxClassInfo)">
            <summary>
            Sets relationship between specified shipping option and tax class.
            </summary>
            <param name="infoObj">Shipping option-tax class relationship to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionTaxClassInfoProvider.DeleteShippingOptionTaxClassInfoInternal(CMS.Ecommerce.ShippingOptionTaxClassInfo)">
            <summary>
            Deletes relationship between specified shipping option and tax class.
            </summary>
            <param name="infoObj">Shipping option-tax class relationship to be deleted</param>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionTaxClassInfoProvider.GetShippingOptionTaxClassesInternal(System.Int32)">
            <summary>
            Returns dataset of all relationships between specified shipping option and tax classes.
            </summary>
            <param name="shippingOptionId">Shipping option ID</param>
        </member>
        <member name="T:CMS.Ecommerce.ShoppingCartItemParameters">
            <summary>
            Data container of the parameters which represent configuration of the shopping cart item to be added/updated in the shoppping cart object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemParameters.GetShoppingCartItemParameters">
            <summary>
            Returns initialized shopping cart item parameters container from the current URL parameters.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemParameters.#ctor">
            <summary>
            Constructor - creates empty shopping cart item parameteres container. 
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemParameters.#ctor(System.Int32,System.Int32)">
            <summary>
            Constructor - creates initialized shopping cart item parameteres container.
            </summary>
            <param name="skuId">Product SKU ID.</param>
            <param name="quantity">Number of product units.</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemParameters.#ctor(System.Int32,System.Int32,System.Int32[])">
            <summary>
            Constructor - creates initialized shopping cart item parameteres container.
            </summary>
            <param name="skuId">Product SKU ID.</param>
            <param name="quantity">Number of product units.</param>
            <param name="options">SKU IDs of product options.</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemParameters.#ctor(System.Int32,System.Int32,System.Collections.Generic.List{CMS.Ecommerce.ShoppingCartItemParameters})">
            <summary>
            Constructor - creates initialized shopping cart item parameteres container.
            </summary>
            <param name="skuId">Product SKU ID.</param>
            <param name="quantity">Number of product units.</param>
            <param name="options">List of product options parameters.</param>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemParameters.SKUID">
            <summary>
            Product SKU ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemParameters.Quantity">
            <summary>
            Number of product units.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemParameters.Price">
            <summary>
            Product custom price, e.g. amount of donation. It is in site main currency.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemParameters.Text">
            <summary>
            Product custom text defined by the customer, e.g. custom label for a T-shirt. Makes sense only for the text product option.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemParameters.IsPrivate">
            <summary>
            Indicates if product is added to the shopping cart as private. Makes sense only for the private Donation. It is false by default.
            </summary> 
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemParameters.ProductOptions">
            <summary>
            Collection of the product options.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemParameters.CustomParameters">
            <summary>
            Collection (name - value pairs) of the shopping cart item custom parameters.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.BundleInfo">
            <summary>
            BundleInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.BundleInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.BundleInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.BundleInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.BundleInfo.#ctor">
            <summary>
            Constructor - Creates an empty BundleInfo object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.BundleInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new BundleInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data.</param>
        </member>
        <member name="M:CMS.Ecommerce.BundleInfo.CheckPermissions(CMS.SettingsProvider.PermissionsEnum,System.String,CMS.SettingsProvider.IUserInfo)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
        </member>
        <member name="P:CMS.Ecommerce.BundleInfo.BundleID">
            <summary>
            Bundle ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.BundleInfo.SKUID">
            <summary>
            SKU ID.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.BundleInfoProvider">
            <summary>
            Class providing BundleInfo management.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.BundleInfoProvider.GetBundles(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all relationships between bundles and SKUs matching the specified criteria.
            </summary>
            <param name="where">Where condition.</param>
            <param name="orderBy">Order by expression.</param>
            <param name="topN">Number of records to be selected.</param>        
            <param name="columns">Columns to be selected.</param>
        </member>
        <member name="M:CMS.Ecommerce.BundleInfoProvider.GetBundles(System.String,System.String)">
            <summary>
            Returns dataset of all relationships between bundles and SKUs matching the specified criteria.
            </summary>
            <param name="where">Where condition.</param>
            <param name="orderBy">Order by expression.</param>
        </member>
        <member name="M:CMS.Ecommerce.BundleInfoProvider.GetBundleInfo(System.Int32,System.Int32)">
            <summary>
            Returns relationship between specified bundle and SKU.
            </summary>
            <param name="bundleId">Bundle ID.</param>
            <param name="skuId">SKU ID.</param>
        </member>
        <member name="M:CMS.Ecommerce.BundleInfoProvider.SetBundleInfo(CMS.Ecommerce.BundleInfo)">
            <summary>
            Sets relationship between specified bundle and SKU.
            </summary>
            <param name="infoObj">Bundle-SKU relationship to be set.</param>
        </member>
        <member name="M:CMS.Ecommerce.BundleInfoProvider.DeleteBundleInfo(CMS.Ecommerce.BundleInfo)">
            <summary>
            Deletes relationship between specified bundle and SKU.
            </summary>
            <param name="infoObj">Bundle-SKU relationship to be deleted.</param>
        </member>
        <member name="M:CMS.Ecommerce.BundleInfoProvider.AddSKUToBundle(System.Int32,System.Int32)">
            <summary>
            Sets relationship between specified bundle and SKU.
            </summary>	
            <param name="bundleId">Bundle ID.</param>
            <param name="skuId">SKU ID.</param>
        </member>
        <member name="M:CMS.Ecommerce.BundleInfoProvider.RemoveSKUFromBundle(System.Int32,System.Int32)">
            <summary>
            Deletes relationship between specified bundle and SKU.
            </summary>
            <param name="bundleId">Bundle ID.</param>
            <param name="skuId">SKU ID.</param>
        </member>
        <member name="M:CMS.Ecommerce.BundleInfoProvider.GetBundlesInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all relationships between bundles and SKUs matching the specified criteria.
            </summary>
            <param name="where">Where condition.</param>
            <param name="orderBy">Order by expression.</param>
            <param name="topN">Number of records to be selected.</param>        
            <param name="columns">Columns to be selected.</param>
        </member>
        <member name="M:CMS.Ecommerce.BundleInfoProvider.GetBundleInfoInternal(System.Int32,System.Int32)">
            <summary>
            Returns relationship between specified bundle and SKU.
            </summary>
            <param name="bundleId">Bundle ID.</param>
            <param name="skuId">SKU ID.</param>
        </member>
        <member name="M:CMS.Ecommerce.BundleInfoProvider.SetBundleInfoInternal(CMS.Ecommerce.BundleInfo)">
            <summary>
            Sets relationship between specified bundle and SKU.
            </summary>
            <param name="infoObj">Bundle-SKU relationship to be set.</param>
        </member>
        <member name="M:CMS.Ecommerce.BundleInfoProvider.DeleteBundleInfoInternal(CMS.Ecommerce.BundleInfo)">
            <summary>
            Deletes relationship between specified bundle and SKU.
            </summary>
            <param name="infoObj">Bundle-SKU relationship to be deleted.</param>
        </member>
        <member name="T:CMS.Ecommerce.SKUFileInfo">
            <summary>
            SKUFileInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.SKUFileInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SKUFileInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SKUFileInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SKUFileInfo.#ctor">
            <summary>
            Constructor - Creates an empty SKUFileInfo object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SKUFileInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new SKUFileInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data.</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUFileInfo.CheckPermissions(CMS.SettingsProvider.PermissionsEnum,System.String,CMS.SettingsProvider.IUserInfo)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
        </member>
        <member name="P:CMS.Ecommerce.SKUFileInfo.FileType">
            <summary>
            File type.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUFileInfo.FileName">
            <summary>
            File name.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUFileInfo.FilePath">
            <summary>
            Application root relative path to the file.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUFileInfo.FileLastModified">
            <summary>
            Date and time when the file object was last modified.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUFileInfo.FileGUID">
            <summary>
            File GUID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUFileInfo.FileID">
            <summary>
            File ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUFileInfo.FileSKUID">
            <summary>
            Parent SKU ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUFileInfo.FileMetaFileGUID">
            <summary>
            Associated meta file GUID.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.SKUFileInfoProvider">
            <summary>
            Class providing SKUFileInfo management.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SKUFileInfoProvider.GetSKUFiles(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all SKU files matching the specified parameters.
            </summary>
            <param name="where">Where condition.</param>
            <param name="orderBy">Order by expression.</param>
            <param name="topN">Number of records to be selected.</param>        
            <param name="columns">Columns to be selected.</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUFileInfoProvider.GetSKUFiles(System.String,System.String)">
            <summary>
            Returns dataset of all SKU files matching the specified parameters.
            </summary>
            <param name="where">Where condition.</param>
            <param name="orderBy">Order by expression.</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUFileInfoProvider.GetSKUFileInfo(System.Int32)">
            <summary>
            Returns SKU file with specified ID.
            </summary>
            <param name="fileId">Sku file ID.</param>        
        </member>
        <member name="M:CMS.Ecommerce.SKUFileInfoProvider.SetSKUFileInfo(CMS.Ecommerce.SKUFileInfo)">
            <summary>
            Sets (updates or inserts) specified SKU file.
            </summary>
            <param name="fileObj">Sku file to be set.</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUFileInfoProvider.DeleteSKUFileInfo(CMS.Ecommerce.SKUFileInfo)">
            <summary>
            Deletes specified SKU file.
            </summary>
            <param name="fileObj">Sku file to be deleted.</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUFileInfoProvider.DeleteSKUFileInfo(System.Int32)">
            <summary>
            Deletes SKU file with specified ID.
            </summary>
            <param name="fileId">Sku file ID.</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUFileInfoProvider.CheckDependencies(System.Int32)">
            <summary>
            Checks dependencies, returns true if dependent.
            </summary>
            <param name="fileId">SKU file identifier</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUFileInfoProvider.CheckDependencies(CMS.Ecommerce.SKUFileInfo)">
            <summary>
            Checks dependencies, returns true if dependent.
            </summary>
            <param name="skufi">SKU file info object</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUFileInfoProvider.GetSKUFilesInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all SKU files matching the specified parameters.
            </summary>
            <param name="where">Where condition.</param>
            <param name="orderBy">Order by expression.</param>
            <param name="topN">Number of records to be selected.</param>        
            <param name="columns">Columns to be selected.</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUFileInfoProvider.GetSKUFileInfoInternal(System.Int32)">
            <summary>
            Returns SKU file with specified ID.
            </summary>
            <param name="fileId">Sku file ID.</param>        
        </member>
        <member name="M:CMS.Ecommerce.SKUFileInfoProvider.SetSKUFileInfoInternal(CMS.Ecommerce.SKUFileInfo)">
            <summary>
            Sets (updates or inserts) specified SKU file.
            </summary>
            <param name="fileObj">Sku file to be set.</param>        
        </member>
        <member name="M:CMS.Ecommerce.SKUFileInfoProvider.DeleteSKUFileInfoInternal(CMS.Ecommerce.SKUFileInfo)">
            <summary>
            Deletes specified SKU file.
            </summary>
            <param name="fileObj">Sku file to be deleted.</param>        
        </member>
        <member name="T:CMS.Ecommerce.SKUListInfo">
            <summary>
            SKUListInfo virtual object.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.SKUListInfo.TYPEINFO">
            <summary>
            Type information SKU.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SKUListInfo.#ctor">
            <summary>
            Constructor - Creates an empty SKUListInfo object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SKUListInfo.GetData(CMS.SettingsProvider.QueryDataParameters,System.String,System.String,System.Int32,System.String,System.Boolean,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns the data according to the set of input parameters.
            </summary>
            <param name="parameters">Query parameters</param>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
            <param name="topN">Specifies number of returned records</param>        
            <param name="columns">Data columns to return</param>
            <param name="binaryData">If true, binary data are returned in the result</param>
            <param name="offset">Index of first record to get</param>
            <param name="maxRecords">Maximum number of records to get. If maxRecords is zero or less, all records are returned (no paging is used)</param>
            <param name="totalRecords">Returns total number of available records</param>        
        </member>
        <member name="T:CMS.Ecommerce.WishlistItemInfo">
            <summary>
            WishlistItemInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.WishlistItemInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.WishlistItemInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.WishlistItemInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.WishlistItemInfo.#ctor">
            <summary>
            Constructor - Creates an empty WishlistItemInfo object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.WishlistItemInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new WishlistItemInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="P:CMS.Ecommerce.WishlistItemInfo.SiteID">
            <summary>
            Site ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.WishlistItemInfo.UserID">
            <summary>
            User ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.WishlistItemInfo.SKUID">
            <summary>
            SKU ID.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.WishlistItemInfoProvider">
            <summary>
            Class providing WishlistItemInfo management.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.WishlistItemInfoProvider.GetWishlistItems(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all wishlist items matching the specified criteria.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.Ecommerce.WishlistItemInfoProvider.GetWishlistItems(System.String,System.String)">
            <summary>
            Returns dataset of all wishlist items matching the specified criteria.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
        </member>
        <member name="M:CMS.Ecommerce.WishlistItemInfoProvider.GetWishlistItemInfo(System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns specified wishlist item. 
            </summary>
            <param name="userId">User ID</param>
            <param name="skuId">Product ID</param>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.Ecommerce.WishlistItemInfoProvider.SetWishlistItemInfo(CMS.Ecommerce.WishlistItemInfo)">
            <summary>
            Sets specified wishlist item.
            </summary>
            <param name="infoObj">Wishlist item to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.WishlistItemInfoProvider.DeleteWishlistItemInfo(CMS.Ecommerce.WishlistItemInfo)">
            <summary>
            Deletes specified wishlist item.
            </summary>
            <param name="infoObj">Wishlist item to be deleted</param>
        </member>
        <member name="M:CMS.Ecommerce.WishlistItemInfoProvider.AddSKUToWishlist(System.Int32,System.Int32,System.Int32)">
            <summary>
            Adds product to specified wishlist.
            </summary>  
            <param name="userId">User ID</param>
            <param name="skuId">Product ID</param>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.Ecommerce.WishlistItemInfoProvider.RemoveSKUFromWishlist(System.Int32,System.Int32,System.Int32)">
            <summary>
            Removes specified wishlist item.
            </summary>
            <param name="userId">User ID</param>
            <param name="skuId">Product ID</param>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.Ecommerce.WishlistItemInfoProvider.GetWishlistItemsInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all wishlist items matching the specified criteria.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.Ecommerce.WishlistItemInfoProvider.GetWishlistItemInfoInternal(System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns specified wishlist item. 
            </summary>
            <param name="userId">User ID</param>
            <param name="skuId">Product ID</param>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.Ecommerce.WishlistItemInfoProvider.SetWishlistItemInfoInternal(CMS.Ecommerce.WishlistItemInfo)">
            <summary>
            Sets specified wishlist item.
            </summary>
            <param name="infoObj">Wishlist item to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.WishlistItemInfoProvider.DeleteWishlistItemInfoInternal(CMS.Ecommerce.WishlistItemInfo)">
            <summary>
            Deletes specified wishlist item.
            </summary>
            <param name="infoObj">Wishlist item to be deleted</param>
        </member>
        <member name="T:CMS.Ecommerce.CMSContentProductPage">
            <summary>
            Base page for the E-commerce product pages in content to apply global settings to the pages.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.CMSEcommercePage">
            <summary>
            Base page for the E-commerce pages to apply global settings to the pages.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CMSEcommercePage.OnInit(System.EventArgs)">
            <summary>
            Page OnInit event.
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:CMS.Ecommerce.CMSEcommercePage.CheckMainCurrency(System.Int32)">
            <summary>
            Checks if site speciffied by ID has defined main currency. Returns error message when main currency not found.
            In case of success empty string is returned.
            </summary>
            <param name="siteId">Id of site to check</param>
        </member>
        <member name="M:CMS.Ecommerce.CMSEcommercePage.CheckSecurity">
            <summary>
            Checks the security.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CMSEcommercePage.AddMenuButtonSelectScript(System.String,System.String)">
            <summary>
            Adds script for selecting of ecommerce menu button.
            </summary>
            <param name="elementName">UI Element code name (button)</param>
            <param name="url">URL to redirect to</param>
        </member>
        <member name="P:CMS.Ecommerce.CMSEcommercePage.SiteID">
            <summary>
            Id of the site. Value taken from query string prameter "siteId", or from CMSContext.CurrentSiteID when no SiteId 
            supplied or not a global admin. Special values (non-positive) are passed without change.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CMSContentProductPage.OnInit(System.EventArgs)">
            <summary>
            Page OnInit event.
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:CMS.Ecommerce.CMSContentProductPage.IsAuthorizedToModifyDocument">
            <summary>
            Returns true if current user is authorized to modify the document.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CMSContentProductPage.CheckProductDepartmentPermissions(CMS.Ecommerce.SKUInfo)">
            <summary>
            Checks if current user is authorized to edit department of specified product. 
            Returns empty string when user IS authorized, returns error message when user IS NOT authorized.
            </summary>
            <param name="skuObj">Product to check</param>
        </member>
        <member name="M:CMS.Ecommerce.CMSContentProductPage.CheckProductSiteID(System.Int32)">
            <summary>
            Checks if site id of edited product corresponds to configured site ID and site settings. If it does not, 
            user is redirected to 'Object doesn't exist' page.
            </summary>
            <param name="productSiteId">ID of the site which edited object belongs to</param>
        </member>
        <member name="M:CMS.Ecommerce.CMSContentProductPage.CheckProductPermissions(CMS.Ecommerce.SKUInfo)">
            <summary>
            Checks users permissions to modify product. Modify permissions, permissions to departments and document permissions are checked.
            Returns true when OK.
            </summary>
            <param name="sku">SKU info object.</param>
        </member>
        <member name="P:CMS.Ecommerce.CMSContentProductPage.NodeID">
            <summary>
            Gets or sets the node ID. According to this ID the permissions are checked.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CMSContentProductPage.Node">
            <summary>
            Gets the TreeNode object.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.CMSEcommerceModalPage">
            <summary>
            Base page for the CMS Ecommerce modal pages to apply global settings to the pages.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CMSEcommerceModalPage.OnInit(System.EventArgs)">
            <summary>
            Page OnInit event.
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="T:CMS.Ecommerce.CMSCurrenciesPage">
            <summary>
            Base page for the E-commerce currencies to apply global settings to the pages.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.CMSEcommerceSharedConfigurationPage">
            <summary>
            Base page for the E-commerce configuration pages, which can be opened under CMSDesk as well as under SiteManager.
            These pages are aimed for handling "global only" or "site-specific only" records.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.CMSEcommerceConfigurationPage">
            <summary>
            Base page for the E-commerce configuration pages to apply global settings to the pages.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CMSEcommerceConfigurationPage.OnInit(System.EventArgs)">
            <summary>
            Page OnInit event.
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:CMS.Ecommerce.CMSEcommerceConfigurationPage.CheckConfigurationSecurity">
            <summary>
            Checks authorization to UI elements under E-commerce / Configuration.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CMSEcommerceSharedConfigurationPage.OnInit(System.EventArgs)">
            <summary>
            Page OnInit event.
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:CMS.Ecommerce.CMSEcommerceSharedConfigurationPage.CheckConfigurationModification">
            <summary>
            Checks ecommerce ConfigurationModify and ConfigurationGlobalModify permissions. Redirects to access denied page if check fails.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CMSEcommerceSharedConfigurationPage.CheckEditedObjectSiteID(System.Int32)">
            <summary>
            Checks if site id of edited object corresponds to configured site. If it does not, 
            user is redirected to 'Object doesn't exist' page.
            </summary>
            <param name="editedObjSiteId">ID of the site which edited object belongs to</param>
        </member>
        <member name="P:CMS.Ecommerce.CMSEcommerceSharedConfigurationPage.GlobalObjectsKeyName">
            <summary>
            Settings key name configuring usage of global/site objects.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CMSEcommerceSharedConfigurationPage.UseGlobalObjects">
            <summary>
            Indicates if current site uses global objects. Type of objects depends on settings key name 
            set in GlobalObjectsKeyName property.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CMSEcommerceSharedConfigurationPage.ConfiguredSiteID">
            <summary>
            Returns id of the configured site. For global admin with site manager enabled allows to configure global objects on demand (siteId in querystring == 0).
            In other cases returns 0 (when using global objects) or current site ID (when using site specific configuration).
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CMSCurrenciesPage.OnInit(System.EventArgs)">
            <summary>
            Page OnInit event.
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="T:CMS.Ecommerce.CMSDepartmentsPage">
            <summary>
            Base page for the E-commerce departments to apply global settings to the pages.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.CMSEcommerceDeskConfigurationPage">
            <summary>
            Base page for E-commerce pages working with site specific records with option to include global records. 
            This page extends CMSEcommerceObjectsPage with check of UI elements. It is aimed as base for configuration pages
            accesible from CMSDesk / Ecommerce / Configuration.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.CMSEcommerceObjectsPage">
            <summary>
            Base page for E-commerce pages working with site specific records with option to include global records. 
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CMSEcommerceObjectsPage.StoreSiteFilterValue(System.Int32)">
            <summary>
            Stores given value into cookie named 'SiteFilter'.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:CMS.Ecommerce.CMSEcommerceObjectsPage.GetFilterCookieValue(System.String)">
            <summary>
            Returns value from dictionary stored in CMSSiteFilter cookie.
            </summary>
            <param name="name">Name of the key.</param>
        </member>
        <member name="M:CMS.Ecommerce.CMSEcommerceObjectsPage.SetFilterCookieValue(System.String,System.Int32)">
            <summary>
            Sets value to dictionary stored in CMSSiteFilter cookie.
            </summary>
            <param name="name">Name of the key.</param>
            <param name="val">Value to be set.</param>
        </member>
        <member name="M:CMS.Ecommerce.CMSEcommerceObjectsPage.CheckEditedObjectSiteID(System.Int32)">
            <summary>
            Checks if site id of edited object corresponds to configured site ID and site settings. If it does not, 
            user is redirected to 'Object doesn't exist' page.
            </summary>
            <param name="editedObjSiteId">ID of the site which edited object belongs to</param>
        </member>
        <member name="M:CMS.Ecommerce.CMSEcommerceObjectsPage.FormatBreadcrumbObjectName(System.String,System.Int32)">
            <summary>
            Appends site mark to given object name according to current ui culture. 
            </summary>
            <param name="name">Name of the object.</param>
            <param name="siteId">Site id of named object.</param>
        </member>
        <member name="P:CMS.Ecommerce.CMSEcommerceObjectsPage.GlobalObjectsKeyName">
            <summary>
            Settings key name allowing usage of global objects.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CMSEcommerceObjectsPage.AllowGlobalObjects">
            <summary>
            Indicates global objects are alowed on current site besides site-specific ones. Type of the objects depends on settings key name 
            set in GlobalObjectsKeyName property.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CMSEcommerceObjectsPage.ConfiguredSiteID">
            <summary>
            Returns id of the configured site. For global admin allows to configure global objects on demand (siteId in querystring == 0).
            In other cases returns 0 (when global objects allowed and asked for global objects) or current site ID (when using site specific configuration only).
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CMSEcommerceObjectsPage.SiteFilterStartupValue">
            <summary>
            Gets startup value for site selector. Value is taken from query parameter siteId or from cookie when parameter is missing.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CMSEcommerceObjectsPage.FilterCookieKey">
            <summary>
            Key for site filter preference dictionary stored in cookie.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CMSEcommerceDeskConfigurationPage.OnInit(System.EventArgs)">
            <summary>
            Page OnInit event.
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:CMS.Ecommerce.CMSEcommerceDeskConfigurationPage.CheckConfigurationModification(System.Int32)">
            <summary>
            Checks ecommerce ConfigurationModify and ConfigurationGlobalModify permissions. Redirects to access denied page if check fails.
            </summary>
            <param name="siteId">Site id of the configured object</param>
        </member>
        <member name="M:CMS.Ecommerce.CMSDepartmentsPage.OnInit(System.EventArgs)">
            <summary>
            Page OnInit event.
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="T:CMS.Ecommerce.CMSExchangeRatesPage">
            <summary>
            Base page for the E-commerce exchange rates to apply global settings to the pages.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CMSExchangeRatesPage.OnInit(System.EventArgs)">
            <summary>
            Page OnInit event.
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="T:CMS.Ecommerce.CMSInternalStatusesPage">
            <summary>
            Base page for the E-commerce internal statuses to apply global settings to the pages.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CMSInternalStatusesPage.OnInit(System.EventArgs)">
            <summary>
            Page OnInit event.
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="T:CMS.Ecommerce.CMSManufacturersPage">
            <summary>
            Base page for the E-commerce manufacturers pages to apply global settings to the pages.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CMSManufacturersPage.OnInit(System.EventArgs)">
            <summary>
            Page OnInit event.
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="T:CMS.Ecommerce.CMSOrderStatusesPage">
            <summary>
            Base page for the E-commerce order statuses to apply global settings to the pages.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CMSOrderStatusesPage.OnInit(System.EventArgs)">
            <summary>
            Page OnInit event.
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="T:CMS.Ecommerce.CMSPaymentMethodsPage">
            <summary>
            Base page for the E-commerce payment methods to apply global settings to the pages.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CMSPaymentMethodsPage.OnInit(System.EventArgs)">
            <summary>
            Page OnInit event.
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="T:CMS.Ecommerce.CMSPublicStatusesPage">
            <summary>
            Base page for the E-commerce pubic statuses to apply global settings to the pages.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CMSPublicStatusesPage.OnInit(System.EventArgs)">
            <summary>
            Page OnInit event.
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="T:CMS.Ecommerce.CMSShippingOptionsPage">
            <summary>
            Base page for the E-commerce shipping options to apply global settings to the pages.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CMSShippingOptionsPage.OnInit(System.EventArgs)">
            <summary>
            Page OnInit event.
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="T:CMS.Ecommerce.CMSEcommerceStoreSettingsPage">
            <summary>
            Base page for the E-commerce store settings pages to apply global settings to the pages.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CMSEcommerceStoreSettingsPage.OnInit(System.EventArgs)">
            <summary>
            Page OnInit event.
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="T:CMS.Ecommerce.CMSSuppliersPage">
            <summary>
            Base page for the E-commerce suppliers pages to apply global settings to the pages.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CMSSuppliersPage.OnInit(System.EventArgs)">
            <summary>
            Page OnInit event.
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="T:CMS.Ecommerce.CMSTaxClassesPage">
            <summary>
            Base page for the E-commerce tax classes to apply global settings to the pages.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CMSTaxClassesPage.OnInit(System.EventArgs)">
            <summary>
            Page OnInit event.
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="T:CMS.Ecommerce.CMSCustomersPage">
            <summary>
            Base page for the E-commerce customers pages to apply global settings to the pages.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CMSCustomersPage.OnInit(System.EventArgs)">
            <summary>
            Page OnInit event.
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:CMS.Ecommerce.CMSCustomersPage.CheckCustomerSiteID(CMS.Ecommerce.CustomerInfo)">
            <summary>
            Returns true if customer is anonymous on current site or has login on current site.
            </summary>
            <param name="customer">Customer object</param>
        </member>
        <member name="T:CMS.Ecommerce.CMSDiscountCouponsPage">
            <summary>
            Base page for the E-commerce discount coupons pages to apply global settings to the pages.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CMSDiscountCouponsPage.OnInit(System.EventArgs)">
            <summary>
            Page OnInit event.
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="T:CMS.Ecommerce.CMSDiscountLevelsPage">
            <summary>
            Base page for the E-commerce discount levels pages to apply global settings to the pages.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CMSDiscountLevelsPage.OnInit(System.EventArgs)">
            <summary>
            Page OnInit event.
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="T:CMS.Ecommerce.CMSEcommerceReportsPage">
            <summary>
            Base page for the E-commerce reports pages to apply global settings to the pages.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CMSEcommerceReportsPage.OnInit(System.EventArgs)">
            <summary>
            Page OnInit event.
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="P:CMS.Ecommerce.CMSEcommerceReportsPage.IsEcommerceReport">
            <summary>
            Indicates if the report is included in E-commerce report category.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.CMSOrdersModalPage">
            <summary>
            Base page for the E-commerce orders modal pages to apply global settings to the pages.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CMSOrdersModalPage.OnInit(System.EventArgs)">
            <summary>
            Page OnInit event.
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="P:CMS.Ecommerce.CMSOrdersModalPage.CustomerID">
            <summary>
            Gets or sets the customer ID. According to this ID the permissions are checked.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.CMSOrdersPage">
            <summary>
            Base page for the E-commerce orders pages to apply global settings to the pages.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CMSOrdersPage.OnInit(System.EventArgs)">
            <summary>
            Page OnInit event.
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:CMS.Ecommerce.CMSOrdersPage.CheckSecurity(System.Int32)">
            <summary>
            Checks the security.
            </summary>
            <param name="customerId">ID of the customer</param>
        </member>
        <member name="P:CMS.Ecommerce.CMSOrdersPage.CustomerID">
            <summary>
            Gets or sets the customer ID. According to this ID the permissions are checked.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.CMSProductOptionCategoriesPage">
            <summary>
            Base page for the E-commerce product options pages to apply global settings to the pages.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CMSProductOptionCategoriesPage.OnInit(System.EventArgs)">
            <summary>
            Page OnInit event.
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="T:CMS.Ecommerce.CMSProductOptionsPage">
            <summary>
            Base page for the E-commerce product options pages to apply global settings to the pages.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CMSProductOptionsPage.OnInit(System.EventArgs)">
            <summary>
            Page OnInit event.
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="T:CMS.Ecommerce.CMSProductsPage">
            <summary>
            Base page for the E-commerce products pages to apply global settings to the pages.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CMSProductsPage.OnInit(System.EventArgs)">
            <summary>
            Page OnInit event.
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:CMS.Ecommerce.CMSProductsPage.CheckProductPermissions(CMS.Ecommerce.SKUInfo)">
            <summary>
            Checks users permissions to modify product. Modify permissions and permissions to departments are checked.
            Returns true when OK.
            </summary>
            <param name="sku"></param>
        </member>
        <member name="P:CMS.Ecommerce.CMSProductsPage.IsProductOption">
            <summary>
            Indicates whether the page is for normal product or for product option.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.AuthorizeNetPaymentResultInfo">
            <summary>
            Authorize.NET payment result.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.PaymentResultInfo">
            <summary>
            Class representing payment result.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.PaymentResultInfo.GetPaymentResultItemInfo(System.String)">
            <summary>
            Returns payment result item object.
            </summary>
            <param name="itemName">Item name</param>
        </member>
        <member name="M:CMS.Ecommerce.PaymentResultInfo.SetPaymentResultItemInfo(CMS.Ecommerce.PaymentResultItemInfo)">
            <summary>
            Updates/Inserts payment result item data in/into payment result.
            </summary>
            <param name="itemObj">Payment result item data object</param>
        </member>
        <member name="M:CMS.Ecommerce.PaymentResultInfo.GetPaymentResultXml">
            <summary>
            Returns payment result XML string.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.PaymentResultInfo.GetFormattedPaymentResultString">
            <summary>
            Returns formatted payment result string which is visible to the user.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.PaymentResultInfo.LoadPaymentResultXml(System.String)">
            <summary>
            Loads payment result xml.
            </summary>
            <param name="xml">Payment result XML to load</param>
        </member>
        <member name="M:CMS.Ecommerce.PaymentResultInfo.#ctor(System.String)">
            <summary>
            Creates PaymentResultInfo object.
            </summary>
            <param name="xml">Payment result in XML format</param>
        </member>
        <member name="M:CMS.Ecommerce.PaymentResultInfo.#ctor">
            <summary>
            Creates base PaymentResultInfo object - following fields are created in payment result XML definition, they are not initialized: date, payment method, payment is completed, payment status, transaction id, description.
            </summary>        
        </member>
        <member name="M:CMS.Ecommerce.PaymentResultInfo.EnsurePaymentResultItemInfo(System.String,System.String)">
            <summary>
            Tries to find specified payment result item (if it is not found it is created and initialized with item name and item header) and returns it.
            </summary>
            <param name="itemName">Payment result item name to get</param>
            <param name="itemHeader">Payment result item header text which is set to the new item when requested item is not found</param>
        </member>
        <member name="P:CMS.Ecommerce.PaymentResultInfo.RootNode">
            <summary>
            Root node of the payment result xml definition.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.PaymentResultInfo.PaymentDate">
            <summary>
            Payment date.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.PaymentResultInfo.PaymentIsCompleted">
            <summary>
            TRUE - payment was completed successfully, FALSE - payment wasn't already completed.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.PaymentResultInfo.PaymentDescription">
            <summary>
            Payment result description.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.PaymentResultInfo.PaymentTransactionID">
            <summary>
            Payment result transaction ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.PaymentResultInfo.PaymentMethodName">
            <summary>
            Payment method name.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.PaymentResultInfo.PaymentMethodID">
            <summary>
            Payment method ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.PaymentResultInfo.PaymentStatusValue">
            <summary>
            Payment status value.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.PaymentResultInfo.PaymentStatusName">
            <summary>
            Payment status display name.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.AuthorizeNetPaymentResultInfo.#ctor">
            <summary>
            Creates base payment result info object + add Authorize.NET payment result properties.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.AuthorizeNetPaymentResultInfo.AuthorizationCode">
            <summary>
            Authorization code.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.CreditEventInfo">
            <summary>
            CreditEventInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.CreditEventInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CreditEventInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CreditEventInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CreditEventInfo.#ctor">
            <summary>
            Constructor - Creates an empty CreditEventInfo object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CreditEventInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new CreditEventInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CreditEventInfo.CheckPermissions(CMS.SettingsProvider.PermissionsEnum,System.String,CMS.SettingsProvider.IUserInfo)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
        </member>
        <member name="P:CMS.Ecommerce.CreditEventInfo.EventName">
            <summary>
            Event name.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CreditEventInfo.EventCustomerID">
            <summary>
            ID of the customer the event belongs to.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CreditEventInfo.EventID">
            <summary>
            Event ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CreditEventInfo.EventDescription">
            <summary>
            Event description.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CreditEventInfo.EventDate">
            <summary>
            Event date.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CreditEventInfo.EventCreditChange">
            <summary>
            Event credit change.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CreditEventInfo.EventCreditGUID">
            <summary>
            Event credit GUID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CreditEventInfo.EventCreditLastModified">
            <summary>
            Date and time when the credit event was last modified.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CreditEventInfo.EventSiteID">
            <summary>
            Credit event site ID. Set to 0 for global credit event.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.CreditEventInfoProvider">
            <summary>
            Class providing CreditEventInfo management.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CreditEventInfoProvider.GetCreditEvents(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all credit events matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.Ecommerce.CreditEventInfoProvider.GetCreditEvents(System.String,System.String)">
            <summary>
            Returns dataset of all credit events matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
        </member>
        <member name="M:CMS.Ecommerce.CreditEventInfoProvider.GetCreditEventInfo(System.Int32)">
            <summary>
            Returns credit event with specified ID.
            </summary>
            <param name="eventId">Credit event ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.CreditEventInfoProvider.SetCreditEventInfo(CMS.Ecommerce.CreditEventInfo)">
            <summary>
            Sets (updates or inserts) specified credit event.
            </summary>
            <param name="eventObj">Credit event to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.CreditEventInfoProvider.DeleteCreditEventInfo(CMS.Ecommerce.CreditEventInfo)">
            <summary>
            Deletes specified credit event.
            </summary>
            <param name="eventObj">Credit event to be deleted</param>
        </member>
        <member name="M:CMS.Ecommerce.CreditEventInfoProvider.DeleteCreditEventInfo(System.Int32)">
            <summary>
            Deletes credit event with specified ID.
            </summary>
            <param name="eventId">Credit event ID</param>
        </member>
        <member name="M:CMS.Ecommerce.CreditEventInfoProvider.GetCreditEvents(System.Int32,System.Int32)">
            <summary>
            Returns dataset of all customers' credit events.
            </summary>
            <param name="customerId">Customer ID</param>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.Ecommerce.CreditEventInfoProvider.DeleteCreditEvents(System.Int32,System.Int32)">
            <summary>
            Deletes all customers' credit events.
            </summary>
            <param name="customerId">Customer ID</param>
            <param name="siteId">Site ID</param> 
        </member>
        <member name="M:CMS.Ecommerce.CreditEventInfoProvider.GetTotalCredit(System.Int32,System.Int32)">
            <summary>
            Returns customer's total credit.
            </summary>
            <param name="customerId">Customer ID</param>
            <param name="siteId">Site ID</param> 
        </member>
        <member name="M:CMS.Ecommerce.CreditEventInfoProvider.GetCreditEvents(System.String,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Returns dataset of all credit events for specified site matching the specified parameters.
            </summary>       
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
            <param name="siteId">Site ID</param>            
        </member>
        <member name="M:CMS.Ecommerce.CreditEventInfoProvider.GetCreditEventName(CMS.Ecommerce.OrderInfo)">
            <summary>
            Returns credit event name built from order data.
            </summary>
            <param name="orderObj">Order data</param>
        </member>
        <member name="M:CMS.Ecommerce.CreditEventInfoProvider.GetCreditEventDescription(CMS.Ecommerce.OrderInfo)">
            <summary>
            Returns credit event description built from order data.
            </summary>
            <param name="orderObj">Order data</param>
        </member>
        <member name="M:CMS.Ecommerce.CreditEventInfoProvider.RecalculateCreditEvents(System.Single,System.Int32,System.String,System.Int32)">
            <summary>
            Recalculates credit event values using the given coefficient.
            </summary>
            <param name="coefficient">Factor by which values are recalculated</param>        
            <param name="roundTo">Number of significant digits the number should be rounded to</param>
            <param name="where">Additional WHERE condition</param>
            <param name="siteId">ID of the site which records are to be recalculated</param>
        </member>
        <member name="M:CMS.Ecommerce.CreditEventInfoProvider.GetCreditEventsInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all credit events matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.Ecommerce.CreditEventInfoProvider.GetCreditEventInfoInternal(System.Int32)">
            <summary>
            Returns credit event with specified ID.
            </summary>
            <param name="eventId">Credit event ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.CreditEventInfoProvider.SetCreditEventInfoInternal(CMS.Ecommerce.CreditEventInfo)">
            <summary>
            Sets (updates or inserts) specified credit event.
            </summary>
            <param name="eventObj">Credit event to be set</param>        
        </member>
        <member name="M:CMS.Ecommerce.CreditEventInfoProvider.DeleteCreditEventInfoInternal(CMS.Ecommerce.CreditEventInfo)">
            <summary>
            Deletes specified credit event.
            </summary>
            <param name="eventObj">Credit event to be deleted</param>        
        </member>
        <member name="M:CMS.Ecommerce.CreditEventInfoProvider.GetCreditEventsInternal(System.String,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Returns dataset of all credit events matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.Ecommerce.CreditEventInfoProvider.GetCreditEventsInternal(System.Int32,System.Int32)">
            <summary>
            Returns dataset of all customers' credit events for specified site.
            </summary>
            <param name="customerId">Customer ID</param>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.Ecommerce.CreditEventInfoProvider.DeleteCreditEventsInternal(System.Int32,System.Int32)">
            <summary>
            Deletes all customer's credit events.
            </summary>
            <param name="customerId">Customer ID</param>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.Ecommerce.CreditEventInfoProvider.GetTotalCreditInternal(System.Int32,System.Int32)">
            <summary>
            Returns customer's total credit.
            </summary>
            <param name="customerId">Customer ID</param>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.Ecommerce.CreditEventInfoProvider.GetCreditEventNameInternal(CMS.Ecommerce.OrderInfo)">
            <summary>
            Returns credit event name built from order data.
            </summary>
            <param name="orderObj">Order data</param>
        </member>
        <member name="M:CMS.Ecommerce.CreditEventInfoProvider.GetCreditEventDescriptionInternal(CMS.Ecommerce.OrderInfo)">
            <summary>
            Returns credit event description built from order data.
            </summary>
            <param name="orderObj">Order data</param>
        </member>
        <member name="M:CMS.Ecommerce.CreditEventInfoProvider.RecalculateCreditEventsInternal(System.Single,System.Int32,System.String,System.Int32)">
            <summary>
            Recalculates credit event values using the given coefficient.
            </summary>
            <param name="coefficient">Factor by which values are recalculated</param>        
            <param name="roundTo">Number of significant digits the number should be rounded to</param>
            <param name="where">Where condition</param>
            <param name="siteId">ID of the site which records are to be recalculated</param>
        </member>
        <member name="T:CMS.Ecommerce.CurrencyInfo">
            <summary>
            CurrencyInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.CurrencyInfo.TYPEINFO">
            <summary>
            Type information
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfo.CopyDataFrom(CMS.Ecommerce.CurrencyInfo)">
            <summary>
            Fills data properties with values from given template.
            </summary>
            <param name="currency">Template to copy data from</param>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor for deserialization.
            </summary>
            <param name="info">Serialization inf</param>
            <param name="context">Streaming context</param>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfo.#ctor">
            <summary>
            Constructor - Creates an empty CurrencyInfo object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new CurrencyInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfo.CheckPermissions(CMS.SettingsProvider.PermissionsEnum,System.String,CMS.SettingsProvider.IUserInfo)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
        </member>
        <member name="P:CMS.Ecommerce.CurrencyInfo.CurrencyDisplayName">
            <summary>
            Currency display name.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CurrencyInfo.CurrencyName">
            <summary>
            Currency code name.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CurrencyInfo.CurrencyCode">
            <summary>
            Currency code.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CurrencyInfo.CurrencyID">
            <summary>
            Currency ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CurrencyInfo.CurrencyEnabled">
            <summary>
            Indicates if currency is enabled.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CurrencyInfo.CurrencyIsMain">
            <summary>
            Indicates if currency is main currency.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CurrencyInfo.CurrencyFormatString">
            <summary>
            Currency formatting string.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CurrencyInfo.CurrencyRoundTo">
            <summary>
            Number of digits the price in this currency is rounded to.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CurrencyInfo.CurrencyGUID">
            <summary>
            Currency GUID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CurrencyInfo.CurrencyLastModified">
            <summary>
            Date and time when the currency was last modified.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CurrencyInfo.CurrencySiteID">
            <summary>
            Currency site ID. Set to 0 for global currency.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CurrencyInfo.IsObjectValid">
            <summary>
            Returns true if the data are valid.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.CurrencyInfoProvider">
            <summary>
            Class providing CurrencyInfo management.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfoProvider.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.CurrencyInfoProvider.tableLock">
            <summary>
            Table lock for loading.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfoProvider.GetCurrencies(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all currencies matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfoProvider.GetCurrencies(System.String,System.String)">
            <summary>
            Returns dataset of all currencies matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfoProvider.GetCurrencyInfo(System.Int32)">
            <summary>
            Returns currency with specified ID.
            </summary>
            <param name="currencyId">Currency ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfoProvider.GetCurrencyInfo(System.String,System.String)">
            <summary>
            Returns currency with specified name.
            </summary>
            <param name="currencyName">Currency name</param>                
            <param name="siteName">Site name</param>                
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfoProvider.SetCurrencyInfo(CMS.Ecommerce.CurrencyInfo)">
            <summary>
            Sets (updates or inserts) specified currency.
            </summary>
            <param name="currencyObj">Currency to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfoProvider.DeleteCurrencyInfo(CMS.Ecommerce.CurrencyInfo)">
            <summary>
            Deletes specified currency.
            </summary>
            <param name="currencyObj">Currency to be deleted</param>        
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfoProvider.DeleteCurrencyInfo(System.Int32)">
            <summary>
            Deletes currency with specified ID.
            </summary>
            <param name="currencyId">Currency ID</param>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfoProvider.Clear(System.Boolean)">
            <summary>
            Clears hashtables.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfoProvider.GetCurrencies(System.Int32,System.Boolean)">
            <summary>
            Returns dataset of all currencies matching the specified parameters.
            </summary>
            <param name="siteId">ID of the site the currencies should be retrieved from. If set to 0, global currencies are retrieved</param>
            <param name="onlyEnabled">If true, only enabled currencies are returned</param>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfoProvider.GetCurrenciesWithExchangeRate(System.Int32)">
            <summary>
            Returns DataSet with the enabled currencies which have the exchange rate set.
            </summary>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfoProvider.IsCurrencyWithExchangeRate(System.Int32,System.Int32)">
            <summary>
            Returns true if site specified by its ID has defined exchange rate to given currency. Only enabled currencies are searched.
            </summary>
            <param name="currencyId">ID of currency to be looked for</param>
            <param name="siteId">ID of the site to get exchange table for</param>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfoProvider.CheckDependencies(System.Int32)">
            <summary>
            Checks the currency dependencies. Returns true if there are depending objects.
            </summary>
            <param name="currencyId">Currency ID</param>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfoProvider.GetMainCurrency(System.Int32)">
            <summary>
            Returns main currency of the specified site.
            </summary>
            <param name="siteId">Site ID for site main currency or 0 for global main currency</param>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfoProvider.GetMainCurrencyCode(System.Int32)">
            <summary>
            Returns code of main currency for given site. Returns empty string when not found.
            </summary>
            <param name="siteId">Site ID for site main currency or 0 for global main currency</param>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfoProvider.RoundTo(System.Double,CMS.Ecommerce.CurrencyInfo)">
            <summary>
            Returns rounded price according to the specified currency.
            </summary>
            <param name="price">Price to be rounded</param>
            <param name="currencyObj">Currency which supplies 'round to' parameter - number of digits the price is rounded to</param>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfoProvider.RoundTo(System.Double,System.Int32)">
            <summary>
            Returns rounded price according to the specified currency.
            </summary>
            <param name="price">Price to be rounded</param>
            <param name="currencyId">ID of the currency which supplies 'round to' parameter - number of digits the price is rounded to</param>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfoProvider.GetFormattedPrice(System.Double,CMS.Ecommerce.CurrencyInfo)">
            <summary>
            Returns formatted price according to formatting string of the specified currency.
            </summary>
            <param name="price">Price to be formatted</param>
            <param name="currencyObj">Currency which supplies formatting string</param>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfoProvider.GetFormattedPrice(System.Double)">
            <summary>
            Returns formatted price according to formatting string of the current site main currency.
            </summary>
            <param name="price">Price to be formatted</param>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfoProvider.GetFormattedPrice(System.Double,System.Int32)">
            <summary>
            Returns formatted price according to formatting string of the specified site main currency.
            </summary>
            <param name="price">Price to be formatted</param>
            <param name="siteId">ID of the site which main currency has to be used for formatting</param>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfoProvider.GetFormattedValue(System.Double,CMS.Ecommerce.CurrencyInfo)">
            <summary>
            Returns formatted price, by default formatting string "{0:0.00}" is used.
            </summary>
            <param name="price">Price to be formatted</param>
            <param name="currencyObj">Currency which can supply formatting string or 'round to' parameter - number of digits the price should be rounded to. 
            Be default currency has no effect to the result and formatting string "{0:0.00}" is used.</param>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfoProvider.CopyFromGlobal(System.Int32)">
            <summary>
            Copies global currencies to the specified site.
            </summary>
            <param name="siteId">ID of the target site</param>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfoProvider.ChangeMainCurrency(System.Int32,System.Int32,System.Double,System.Int32,CMS.Ecommerce.RecalculationSettings)">
            <summary>
            Changes main currency and recalculates speciffied "money" values.
            </summary>
            <param name="siteId">ID of the site, which main currency is to be changed</param>
            <param name="newCurrencyId">ID of the new main currency</param>
            <param name="coefficient">Exchange rate which will be used wen recalculating</param>
            <param name="roundTo">Number of decimal digits to which the result will be rounded</param>
            <param name="settings">Determines which objects are to be recalculated</param>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfoProvider.ClearHashtablesAfterRecalculation(CMS.Ecommerce.RecalculationSettings)">
            <summary>
            Clears specified hashtables for the values to be actual. This method is called after changing main currency.
            </summary>
            <param name="settings">Setting for value recalculation process</param>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfoProvider.GetCurrenciesInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all currencies matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfoProvider.GetCurrencyInfoInternal(System.Int32)">
            <summary>
            Returns currency with specified ID.
            </summary>
            <param name="currencyId">Currency ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfoProvider.GetCurrencyInfoInternal(System.String,System.String)">
            <summary>
            Returns currency with specified name from specified site.
            </summary>
            <param name="currencyName">Currency name</param>                
            <param name="siteName">Site name. Use null for global currency</param>         
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfoProvider.SetCurrencyInfoInternal(CMS.Ecommerce.CurrencyInfo)">
            <summary>
            Sets (updates or inserts) specified currency.
            </summary>
            <param name="currencyObj">Currency to be set</param>        
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfoProvider.DeleteCurrencyInfoInternal(CMS.Ecommerce.CurrencyInfo)">
            <summary>
            Deletes specified currency.
            </summary>
            <param name="currencyObj">Currency to be deleted</param>        
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfoProvider.GetCurrenciesInternal(System.String,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Returns dataset of all currencies matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfoProvider.GetCurrenciesInternal(System.Int32,System.Boolean)">
            <summary>
            Returns dataset of all currencies matching the specified parameters.
            </summary>
            <param name="siteId">ID of the site the currencies should be retrieved from. If set to 0, global currencies are retrieved</param>
            <param name="onlyEnabled">True - only enabled currencies from the specified site are returned. False - all site currencies are returned</param>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfoProvider.GetCurrenciesWithExchangeRateInternal(System.Int32)">
            <summary>
            Returns dataSet with the enabled currencies which have the exchange rate set.
            </summary>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfoProvider.IsCurrencyWithExchangeRateInternal(System.Int32,System.Int32)">
            <summary>
            Returns true if site specified by its ID has defined exchange rate to given currency. Only enabled currencies are searched.
            </summary>
            <param name="currencyId">ID of currency to be looked for</param>
            <param name="siteId">ID of the site to get exchange table for</param>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfoProvider.GetMainCurrencyInternal(System.Int32)">
            <summary>
            Returns main currency of specified site.
            </summary>
            <param name="siteId">Site ID for site main currency or 0 for global main currency</param>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfoProvider.GetMainCurrencyCodeInternal(System.Int32)">
            <summary>
            Returns main currency code for given site or empty string when not found.
            </summary>
            <param name="siteId">Site ID for site main currency or 0 for global main currency code</param>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfoProvider.RoundToInternal(System.Double,CMS.Ecommerce.CurrencyInfo)">
            <summary>
            Returns rounded price.
            </summary>
            <param name="price">Price to be rounded</param>
            <param name="currencyObj">Currency which supplies 'round to' parameter - number of digits the price is rounded to</param>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfoProvider.GetFormattedPriceInternal(System.Double,System.Int32)">
            <summary>
            Returns formatted price according to formatting string of the specified site main currency.
            </summary>
            <param name="price">Price to be formatted</param>
            <param name="siteId">Id of the site which main currency has to be used for formatting</param>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfoProvider.GetFormattedPriceInternal(System.Double,CMS.Ecommerce.CurrencyInfo)">
            <summary>
            Returns formatted price according to formatting string of the specified currency.
            </summary>
            <param name="price">Price to be formatted</param>
            <param name="currencyObj">Currency which supplies formatting string</param>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfoProvider.GetFormattedValueInternal(System.Double,CMS.Ecommerce.CurrencyInfo)">
            <summary>
            Returns formatted price, by default formatting string "{0:0.00}" is used.
            </summary>
            <param name="price">Price to be formatted</param>
            <param name="currencyObj">Currency which can supply formatting string or 'round to' parameter - number of digits the price should be rounded to. 
            Be default currency has no effect to the result and formatting string "{0:0.00}" is used.</param>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfoProvider.CopyFromGlobalInternal(System.Int32)">
            <summary>
            Copies global currencies to the specified site.
            </summary>
            <param name="siteId">ID of the target site</param>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfoProvider.ChangeMainCurrencyInternal(System.Int32,System.Int32,System.Double,System.Int32,CMS.Ecommerce.RecalculationSettings)">
            <summary>
            Changes main currency and recalculates speciffied "money" values.
            </summary>
            <param name="siteId">ID of the site, which main currency is to be changed</param>
            <param name="newCurrencyId">ID of the new main currency</param>
            <param name="rate">Exchange rate which will be used wen recalculating</param>
            <param name="round">Number of decimal digits to which the result will be rounded</param>
            <param name="settings">Determines which objects are to be recalculated</param>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfoProvider.RecalculateValuesInternal(System.Int32,System.Int32,System.Int32,System.Single,System.Int32,CMS.Ecommerce.RecalculationSettings)">
            <summary>
             Recalculates specified values with given exchange rate.
            </summary>
            <param name="oldCurrencyId">ID of the old main currency</param>
            <param name="newCurrencyId">ID of the new main currency</param>
            <param name="siteId">ID of the site to be recalculated</param>
            <param name="rate">Exchange rate which will be used when recalculating</param>
            <param name="round">Number of decimal digits to which the result will be rounded</param>
            <param name="settings">Determines which objects are to be recalculated</param>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfoProvider.ClearHashtablesAfterRecalculationInternal(CMS.Ecommerce.RecalculationSettings)">
            <summary>
            Clears specified hashtables for the values to be actual. This method is called after changing main currency.
            </summary>
            <param name="settings">Setting for value recalculation process</param>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfoProvider.LoadMainCurrencies">
            <summary>
            Loads all main currencies to hashtable.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfoProvider.DeleteOrDisableCurrency(CMS.Ecommerce.CurrencyInfo)">
            <summary>
            Attempts to delete currency info. Disables record if something depends on this currency.
            </summary>
            <param name="currency">Currency to delete or disable</param>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfoProvider.CreateParameters(System.Boolean[])">
            <summary>
            Builds parameter string for webfarm task.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.CustomerInfo">
            <summary>
            CustomerInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.CustomerInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CustomerInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CustomerInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CustomerInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor for deserialization.
            </summary>
            <param name="info">Serialization inf</param>
            <param name="context">Streaming context</param>
        </member>
        <member name="M:CMS.Ecommerce.CustomerInfo.#ctor">
            <summary>
            Constructor - Creates an empty CustomerInfo object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CustomerInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new CustomerInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CustomerInfo.RegisterProperties">
            <summary>
            Registers properties of the object
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CustomerInfo.CheckPermissions(CMS.SettingsProvider.PermissionsEnum,System.String,CMS.SettingsProvider.IUserInfo)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
        </member>
        <member name="P:CMS.Ecommerce.CustomerInfo.CustomerEmail">
            <summary>
            Customer e-mail.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CustomerInfo.CustomerFax">
            <summary>
            Customer fax.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CustomerInfo.CustomerEnabled">
            <summary>
            Indicates whether the customer is enabled.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CustomerInfo.CustomerCountryID">
            <summary>
            ID of the customer's country.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CustomerInfo.CustomerStateID">
            <summary>
            ID of the customer's state.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CustomerInfo.CustomerUserID">
            <summary>
            ID of the customer's user account. If set, it says that the customer is registered.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CustomerInfo.CustomerUser">
            <summary>
            Registered user information. It is null for anonymous customer.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CustomerInfo.CustomerID">
            <summary>
            Customer ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CustomerInfo.CustomerLastName">
            <summary>
            Customer last name.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CustomerInfo.CustomerPhone">
            <summary>
            Customer phone.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CustomerInfo.CustomerFirstName">
            <summary>
            Customer first name.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CustomerInfo.CustomerCompany">
            <summary>
            Customer company name.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CustomerInfo.CustomerGUID">
            <summary>
            Customer GUID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CustomerInfo.CustomerTaxRegistrationID">
            <summary>
            Customer tax registration ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CustomerInfo.CustomerOrganizationID">
            <summary>
            Customer oragnization ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CustomerInfo.CustomerDiscountLevelID">
            <summary>
            ID of the discount level which is assigned to the customer.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CustomerInfo.CustomerCreated">
            <summary>
            Date and time when the customer was created.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CustomerInfo.CustomerLastModified">
            <summary>
            Date and time when the customer was last modified.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CustomerInfo.CustomerSiteID">
            <summary>
            Customer site ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CustomerInfo.CustomerPreferredCurrencyID">
            <summary>
            ID of the customer's preferred currency.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CustomerInfo.CustomerPreferredPaymentOptionID">
            <summary>
            ID of the customer's preferred payment option.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CustomerInfo.CustomerPreferredShippingOptionID">
            <summary>
            ID of the customer's preferred shipping option.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CustomerInfo.CustomerIsRegistered">
            <summary>
            Indicates if customer has login (meaning CustomerUserID is set).
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CustomerInfo.IsObjectValid">
            <summary>
            Returns true if the data are valid.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CustomerInfo.Orders">
            <summary>
            Collection of customer orders made on current site.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CustomerInfo.AllOrders">
            <summary>
            Collection of all customer orders.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CustomerInfo.PurchasedProducts">
            <summary>
            Collection of all customer purchased products from all sites.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CustomerInfo.Wishlist">
            <summary>
            Collection of all customer wishlist items from all sites. It is empty, if customer is not registered.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.CustomerInfoProvider">
            <summary>
            Class providing CustomerInfo management.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CustomerInfoProvider.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CustomerInfoProvider.GetCustomers(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all customers matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.Ecommerce.CustomerInfoProvider.GetCustomers(System.String,System.String)">
            <summary>
            Returns dataset of all customers matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
        </member>
        <member name="M:CMS.Ecommerce.CustomerInfoProvider.GetCustomerInfo(System.Int32)">
            <summary>
            Returns customer with specified ID.
            </summary>
            <param name="customerId">Customer ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.CustomerInfoProvider.SetCustomerInfo(CMS.Ecommerce.CustomerInfo)">
            <summary>
            Sets (updates or inserts) specified customer.
            </summary>
            <param name="customerObj">Customer to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.CustomerInfoProvider.DeleteCustomerInfo(CMS.Ecommerce.CustomerInfo)">
            <summary>
            Deletes specified customer.
            </summary>
            <param name="customerObj">Customer to be deleted</param>
        </member>
        <member name="M:CMS.Ecommerce.CustomerInfoProvider.DeleteCustomerInfo(System.Int32)">
            <summary>
            Deletes customer with specified ID.
            </summary>
            <param name="customerId">Customer ID</param>
        </member>
        <member name="M:CMS.Ecommerce.CustomerInfoProvider.Clear(System.Boolean)">
            <summary>
            Clears hashtables.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.Ecommerce.CustomerInfoProvider.GetCustomers(System.String,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Returns dataset of all customers for specified site matching the specified parameters.
            </summary>       
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
            <param name="siteId">Site ID</param>            
        </member>
        <member name="M:CMS.Ecommerce.CustomerInfoProvider.GetCustomers(System.Int32)">
            <summary>
            Returns dataset of all customers for specified site.
            </summary>
            <param name="siteId">Site ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.CustomerInfoProvider.GetCustomersList(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all customers joined with the country and state data.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.Ecommerce.CustomerInfoProvider.GetCustomerInfoByUserID(System.Int32)">
            <summary>
            Returns customer with specified user ID.
            </summary>
            <param name="userId">User ID of the required customer</param>        
        </member>
        <member name="M:CMS.Ecommerce.CustomerInfoProvider.GetCustomerUserSiteInfo(System.Int32,System.Int32)">
            <summary>
            Returns UserSiteInfo object for specified customer on given site.
            </summary>
            <param name="customerId">ID of the customer to get UserSite info for</param>
            <param name="siteId">ID of the site</param>
        </member>
        <member name="M:CMS.Ecommerce.CustomerInfoProvider.CheckDependencies(System.Int32)">
            <summary>
            Checks customer dependencies, return true if dependent.
            </summary>
            <param name="customerId">Customer ID</param>
        </member>
        <member name="M:CMS.Ecommerce.CustomerInfoProvider.IsUserAuthorizedToModifyCustomer(System.String,CMS.SiteProvider.UserInfo)">
            <summary>
            Indicates if user is authorized to modify customers. 'EcommerceModify' OR 'ModifyCustomers' permission is checked.
            </summary>
            <param name="siteName">Site name</param>
            <param name="user">User to be checked</param>        
        </member>
        <member name="M:CMS.Ecommerce.CustomerInfoProvider.SetCustomerPreferredSettings(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Updates shopping carts customers preference by those selected in shopping cart. Updated fields are
            preferred currency, shipping and payment option. Registered customers preferences will be updated in UserSite 
            binding table for shopping carts site.
            Anonymous customer's preferences are updated directly in customer record.
            </summary>
            <param name="cart">Shopping cart info object</param>
        </member>
        <member name="M:CMS.Ecommerce.CustomerInfoProvider.InvalidateCustomer(System.Int32)">
            <summary>
            Invalidates customer (and user when registered) who made given order.
            </summary>
            <param name="customerId">ID of the customer to be invalidated.</param>
        </member>
        <member name="M:CMS.Ecommerce.CustomerInfoProvider.GetCustomersInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all customers matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.Ecommerce.CustomerInfoProvider.GetCustomerInfoInternal(System.Int32)">
            <summary>
            Returns customer with specified ID.
            </summary>
            <param name="customerId">Customer ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.CustomerInfoProvider.SetCustomerInfoInternal(CMS.Ecommerce.CustomerInfo)">
            <summary>
            Sets (updates or inserts) specified customer.
            </summary>
            <param name="customerObj">Customer to be set</param>        
        </member>
        <member name="M:CMS.Ecommerce.CustomerInfoProvider.DeleteCustomerInfoInternal(CMS.Ecommerce.CustomerInfo)">
            <summary>
            Deletes specified customer.
            </summary>
            <param name="customerObj">Customer to be deleted</param>        
        </member>
        <member name="M:CMS.Ecommerce.CustomerInfoProvider.GetCustomersInternal(System.String,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Returns dataset of all customers for specified site matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
            <param name="siteId">Site ID</param> 
        </member>
        <member name="M:CMS.Ecommerce.CustomerInfoProvider.GetCustomersInternal(System.Int32)">
            <summary>
            Returns dataset of all customers for specified site.
            </summary>
            <param name="siteId">Site ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.CustomerInfoProvider.GetCustomersListInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all customers joined with the country and state data.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.Ecommerce.CustomerInfoProvider.GetCustomerInfoByUserIDInternal(System.Int32)">
            <summary>
            Returns customer with specified user ID.
            </summary>
            <param name="userId">User ID of the required customer</param>   
        </member>
        <member name="M:CMS.Ecommerce.CustomerInfoProvider.GetCustomerUserSiteInfoInternal(System.Int32,System.Int32)">
            <summary>
            Returns UserSiteInfo object for specified customer on given site.
            </summary>
            <param name="customerId">ID of the customer to get UserSite info for</param>
            <param name="siteId">ID of the site</param>
        </member>
        <member name="M:CMS.Ecommerce.CustomerInfoProvider.CheckDependenciesInternal(System.Int32)">
            <summary>
            Checks customer dependencies, return true if dependent.
            </summary>
            <param name="customerId">Customer ID</param>
        </member>
        <member name="M:CMS.Ecommerce.CustomerInfoProvider.SetCustomerPreferredSettingsInternal(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Updates preferences of the registered customer by those selected in the shopping cart. Updated fields are
            preferred currency, shipping and payment option. It has no effect if customer is anonymous.
            </summary>
            <param name="cart">Shopping cart data</param>
        </member>
        <member name="M:CMS.Ecommerce.CustomerInfoProvider.InvalidateCustomerInternal(System.Int32)">
            <summary>
            Invalidates customer (and user when registered) who made given order.
            </summary>
            <param name="customerId">ID of the customer to be invalidated.</param>
        </member>
        <member name="T:CMS.Ecommerce.DepartmentInfo">
            <summary>
            DepartmentInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.DepartmentInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.DepartmentInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.DepartmentInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.DepartmentInfo.#ctor">
            <summary>
            Constructor - Creates an empty DepartmentInfo object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.DepartmentInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new DepartmentInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.DepartmentInfo.CheckPermissions(CMS.SettingsProvider.PermissionsEnum,System.String,CMS.SettingsProvider.IUserInfo)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
        </member>
        <member name="P:CMS.Ecommerce.DepartmentInfo.DepartmentName">
            <summary>
            Code name of the department.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DepartmentInfo.DepartmentID">
            <summary>
            ID of the departmnet.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DepartmentInfo.DepartmentDisplayName">
            <summary>
            Display name of the department.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DepartmentInfo.DepartmentDefaultTaxClassID">
            <summary>
            Department default tax class ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DepartmentInfo.DepartmentGUID">
            <summary>
            Department GUID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DepartmentInfo.DepartmentLastModified">
            <summary>
            Object last modified.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DepartmentInfo.DepartmentSiteID">
            <summary>
            Department site ID. Set to 0 for global department.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.DepartmentInfoProvider">
            <summary>
            Class providing DepartmentInfo management.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.DepartmentInfoProvider.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.DepartmentInfoProvider.GetDepartments(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all departments matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.Ecommerce.DepartmentInfoProvider.GetDepartments(System.String,System.String)">
            <summary>
            Returns dataset of all departments matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
        </member>
        <member name="M:CMS.Ecommerce.DepartmentInfoProvider.GetDepartmentInfo(System.Int32)">
            <summary>
            Returns department with specified ID.
            </summary>
            <param name="departmentId">Department ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.DepartmentInfoProvider.GetDepartmentInfo(System.String,System.String)">
            <summary>
            Returns department with specified name.
            </summary>
            <param name="departmentName">Department name</param>                
            <param name="siteName">Site name</param>                
        </member>
        <member name="M:CMS.Ecommerce.DepartmentInfoProvider.SetDepartmentInfo(CMS.Ecommerce.DepartmentInfo)">
            <summary>
            Sets (updates or inserts) specified department.
            </summary>
            <param name="departmentObj">Department to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.DepartmentInfoProvider.DeleteDepartmentInfo(CMS.Ecommerce.DepartmentInfo)">
            <summary>
            Deletes specified department.
            </summary>
            <param name="departmentObj">Department to be deleted</param>
        </member>
        <member name="M:CMS.Ecommerce.DepartmentInfoProvider.DeleteDepartmentInfo(System.Int32)">
            <summary>
            Deletes department with specified ID.
            </summary>
            <param name="departmentId">Department ID</param>
        </member>
        <member name="M:CMS.Ecommerce.DepartmentInfoProvider.Clear(System.Boolean)">
            <summary>
            Clears hashtables.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.Ecommerce.DepartmentInfoProvider.GetDepartments(System.String,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Returns dataset of all departments for specified site matching the specified parameters.
            </summary>       
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
            <param name="siteId">Site ID</param>            
        </member>
        <member name="M:CMS.Ecommerce.DepartmentInfoProvider.GetDepartments(System.Int32)">
            <summary>
            Returns dataset of all departments for specified site.
            </summary>
            <param name="siteId">Site ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.DepartmentInfoProvider.GetUserDepartments(System.Int32)">
            <summary>
            Returns dataset of all departments for specified user.
            </summary>
            <param name="userId">User ID</param>
        </member>
        <member name="M:CMS.Ecommerce.DepartmentInfoProvider.GetDiscountLevelDepartments(System.Int32)">
            <summary>
            Returns dataset of all departments which are assigned to the specified discount level.
            </summary>
            <param name="levelId">User ID</param>
        </member>
        <member name="M:CMS.Ecommerce.DepartmentInfoProvider.CheckDependencies(System.Int32)">
            <summary>
            Checks dependencies, returns true if dependent.
            </summary>
            <param name="departmentId">Department ID</param>
        </member>
        <member name="M:CMS.Ecommerce.DepartmentInfoProvider.GetDepartmentsInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all departments matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.Ecommerce.DepartmentInfoProvider.GetDepartmentInfoInternal(System.Int32)">
            <summary>
            Returns department with specified ID.
            </summary>
            <param name="departmentId">Department ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.DepartmentInfoProvider.GetDepartmentInfoInternal(System.String,System.String)">
            <summary>
            Returns department with specified name.
            </summary>
            <param name="departmentName">Department name</param>                
            <param name="siteName">Site name</param>         
        </member>
        <member name="M:CMS.Ecommerce.DepartmentInfoProvider.SetDepartmentInfoInternal(CMS.Ecommerce.DepartmentInfo)">
            <summary>
            Sets (updates or inserts) specified department.
            </summary>
            <param name="departmentObj">Department to be set</param>        
        </member>
        <member name="M:CMS.Ecommerce.DepartmentInfoProvider.DeleteDepartmentInfoInternal(CMS.Ecommerce.DepartmentInfo)">
            <summary>
            Deletes specified department.
            </summary>
            <param name="departmentObj">Department to be deleted</param>        
        </member>
        <member name="M:CMS.Ecommerce.DepartmentInfoProvider.GetDepartmentsInternal(System.String,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Returns dataset of all departments for specified site matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
            <param name="siteId">Site ID</param> 
        </member>
        <member name="M:CMS.Ecommerce.DepartmentInfoProvider.GetDepartmentsInternal(System.Int32)">
            <summary>
            Returns dataset of all departments for specified site.
            </summary>
            <param name="siteId">Site ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.DepartmentInfoProvider.GetUserDepartmentsInternal(System.Int32)">
            <summary>
            Returns dataset of all departments for specified user.
            </summary>
            <param name="userId">User ID</param>
        </member>
        <member name="M:CMS.Ecommerce.DepartmentInfoProvider.GetDiscountLevelDepartmentsInternal(System.Int32)">
            <summary>
            Returns dataset of all departments which are assigned to the specified discount level.
            </summary>
            <param name="levelId">Discount level ID</param>
        </member>
        <member name="T:CMS.Ecommerce.DepartmentTaxClassInfo">
            <summary>
            DepartmentTaxClassInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.DepartmentTaxClassInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.DepartmentTaxClassInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.DepartmentTaxClassInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.DepartmentTaxClassInfo.#ctor">
            <summary>
            Constructor - Creates an empty DepartmentTaxClassInfo object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.DepartmentTaxClassInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new DepartmentTaxClassInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.DepartmentTaxClassInfo.CheckPermissions(CMS.SettingsProvider.PermissionsEnum,System.String,CMS.SettingsProvider.IUserInfo)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
        </member>
        <member name="P:CMS.Ecommerce.DepartmentTaxClassInfo.DepartmentID">
            <summary>
            Department ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DepartmentTaxClassInfo.TaxClassID">
            <summary>
            TaxClass ID.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.DepartmentTaxClassInfoProvider">
            <summary>
            Class providing DepartmentTaxClassInfo management.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.DepartmentTaxClassInfoProvider.GetDepartmentTaxClasses(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all relationships between departments and tax classes matching the specified criteria.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.Ecommerce.DepartmentTaxClassInfoProvider.GetDepartmentTaxClasses(System.String,System.String)">
            <summary>
            Returns dataset of all relationships between departments and tax classes matching the specified criteria.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
        </member>
        <member name="M:CMS.Ecommerce.DepartmentTaxClassInfoProvider.GetDepartmentTaxClassInfo(System.Int32,System.Int32)">
            <summary>
            Returns relationship between specified department and tax class.
            </summary>
            <param name="departmentId">Department ID</param>
            <param name="taxClassId">Tax class ID</param>
        </member>
        <member name="M:CMS.Ecommerce.DepartmentTaxClassInfoProvider.SetDepartmentTaxClassInfo(CMS.Ecommerce.DepartmentTaxClassInfo)">
            <summary>
            Sets relationship between specified department and tax class.
            </summary>
            <param name="infoObj">Department-tax class relationship to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.DepartmentTaxClassInfoProvider.DeleteDepartmentTaxClassInfo(CMS.Ecommerce.DepartmentTaxClassInfo)">
            <summary>
            Deletes relationship between specified department and tax class.
            </summary>
            <param name="infoObj">Department-tax class relationship to be deleted</param>
        </member>
        <member name="M:CMS.Ecommerce.DepartmentTaxClassInfoProvider.AddTaxClassToDepartment(System.Int32,System.Int32)">
            <summary>
            Sets relationship between specified department and tax class.
            </summary>  
            <param name="taxClassId">Tax class ID</param>
            <param name="departmentId">Department ID</param>
        </member>
        <member name="M:CMS.Ecommerce.DepartmentTaxClassInfoProvider.RemoveTaxClassFromDepartment(System.Int32,System.Int32)">
            <summary>
            Deletes relationship between specified department and tax class.
            </summary>
            <param name="taxClassId">Tax class ID</param>
            <param name="departmentId">Department ID</param>
        </member>
        <member name="M:CMS.Ecommerce.DepartmentTaxClassInfoProvider.GetDepartmentTaxClassesInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all relationships between departments and tax classes matching the specified criteria.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>    
        </member>
        <member name="M:CMS.Ecommerce.DepartmentTaxClassInfoProvider.GetDepartmentTaxClassInfoInternal(System.Int32,System.Int32)">
            <summary>
            Returns relationship between specified department and tax class.
            </summary>
            <param name="departmentId">Department ID</param>
            <param name="taxClassId">Tax class ID</param>
        </member>
        <member name="M:CMS.Ecommerce.DepartmentTaxClassInfoProvider.SetDepartmentTaxClassInfoInternal(CMS.Ecommerce.DepartmentTaxClassInfo)">
            <summary>
            Sets relationship between specified department and tax class.
            </summary>
            <param name="infoObj">Department-tax class relationship to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.DepartmentTaxClassInfoProvider.DeleteDepartmentTaxClassInfoInternal(CMS.Ecommerce.DepartmentTaxClassInfo)">
            <summary>
            Deletes relationship between specified department and tax class.
            </summary>
            <param name="infoObj">Department-tax class relationship to be deleted</param>
        </member>
        <member name="T:CMS.Ecommerce.DiscountCouponInfo">
            <summary>
            DiscountCouponInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.DiscountCouponInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.DiscountCouponInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.DiscountCouponInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.DiscountCouponInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor for deserialization.
            </summary>
            <param name="info">Serialization info</param>
            <param name="context">Streaming context</param>
        </member>
        <member name="M:CMS.Ecommerce.DiscountCouponInfo.#ctor">
            <summary>
            Constructor - Creates an empty DiscountCouponInfo object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.DiscountCouponInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new DiscountCouponInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.DiscountCouponInfo.CheckPermissions(CMS.SettingsProvider.PermissionsEnum,System.String,CMS.SettingsProvider.IUserInfo)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
        </member>
        <member name="P:CMS.Ecommerce.DiscountCouponInfo.DiscountCouponIsExcluded">
            <summary>
            Indicates whether the discount coupon is excluded or not.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountCouponInfo.DiscountCouponID">
            <summary>
            ID of the discount coupon.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountCouponInfo.DiscountCouponValue">
            <summary>
            Value of the discount coupon.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountCouponInfo.DiscountCouponValidTo">
            <summary>
            Date until the coupon is valid.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountCouponInfo.DiscountCouponCode">
            <summary>
            Code of the coupon.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountCouponInfo.DiscountCouponIsFlatValue">
            <summary>
            Indicates whether the value is flat or not.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountCouponInfo.DiscountCouponDisplayName">
            <summary>
            Display name of the coupon.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountCouponInfo.DiscountCouponValidFrom">
            <summary>
            Date the coupon is valid from.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountCouponInfo.IsValid">
            <summary>
            Determines whether discount coupon is valid or not.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountCouponInfo.DiscountCouponGUID">
            <summary>
            DiscountCoupon GUID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountCouponInfo.DiscountCouponLastModified">
            <summary>
            Object last modified.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountCouponInfo.DiscountCouponSiteID">
            <summary>
            Discount coupon site ID. Set to 0 for global discount coupon.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountCouponInfo.IsObjectValid">
            <summary>
            Returns true if the data are valid.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountCouponInfo.ItemDiscountType">
            <summary>
            Discount type. Used for discount calculation in the shopping cart.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountCouponInfo.ItemDiscountID">
            <summary>
            Discount identifier. Used for discount calculation in the shopping cart.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountCouponInfo.ItemDiscountDisplayName">
            <summary>
            Discount display name. Used for discount calculation in the shopping cart.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountCouponInfo.ItemDiscountValue">
            <summary>
            Discount value. Used for discount calculation in the shopping cart.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountCouponInfo.ItemDiscountIsFlat">
            <summary>
            True - discount value is flat, False - discount value is relative. Used for discount calculation in the shopping cart.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountCouponInfo.ItemDiscountIsGlobal">
            <summary>
            True - says that discounts value is set in global main currency, False - says that discounts value is set in site main currency. 
            Takes effect only if discount value is flat. Used for discount calculation in the shopping cart.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountCouponInfo.ItemDiscountedUnits">
            <summary>
            Number of units the discount should be applied to
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountCouponInfo.ItemDiscountCustomData">
            <summary>
            Discount custom data.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.DiscountCouponInfoProvider">
            <summary>
            Class providing DiscountCouponInfo management.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.DiscountCouponInfoProvider.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.DiscountCouponInfoProvider.GetDiscountCoupons(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all discount coupons matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.Ecommerce.DiscountCouponInfoProvider.GetDiscountCoupons(System.String,System.String)">
            <summary>
            Returns dataset of all discount coupons matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
        </member>
        <member name="M:CMS.Ecommerce.DiscountCouponInfoProvider.GetDiscountCouponInfo(System.Int32)">
            <summary>
            Returns discount coupon with specified ID.
            </summary>
            <param name="couponId">Discount coupon ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.DiscountCouponInfoProvider.GetDiscountCouponInfo(System.String,System.String)">
            <summary>
            Returns discount coupon with specified code. If site coupon is not found and global coupons are allowed, tries to search for global coupon with the same code.
            </summary>
            <param name="couponCode">Discount coupon code</param>                
            <param name="siteName">Site name</param>                
        </member>
        <member name="M:CMS.Ecommerce.DiscountCouponInfoProvider.SetDiscountCouponInfo(CMS.Ecommerce.DiscountCouponInfo)">
            <summary>
            Sets (updates or inserts) specified discount coupon.
            </summary>
            <param name="couponObj">Discount coupon to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.DiscountCouponInfoProvider.DeleteDiscountCouponInfo(CMS.Ecommerce.DiscountCouponInfo)">
            <summary>
            Deletes specified discount coupon.
            </summary>
            <param name="couponObj">Discount coupon to be deleted</param>
        </member>
        <member name="M:CMS.Ecommerce.DiscountCouponInfoProvider.DeleteDiscountCouponInfo(System.Int32)">
            <summary>
            Deletes discount coupon with specified ID.
            </summary>
            <param name="couponId">Discount coupon ID</param>
        </member>
        <member name="M:CMS.Ecommerce.DiscountCouponInfoProvider.Clear(System.Boolean)">
            <summary>
            Clears hashtables.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.Ecommerce.DiscountCouponInfoProvider.GetDiscountCoupons(System.String,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Returns dataset of all discount coupons for specified site matching the specified parameters.
            </summary>       
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
            <param name="siteId">Site ID</param>            
        </member>
        <member name="M:CMS.Ecommerce.DiscountCouponInfoProvider.GetDiscountCoupons(System.Int32)">
            <summary>
            Returns dataset of all discount coupons for specified site.
            </summary>
            <param name="siteId">Site ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.DiscountCouponInfoProvider.CheckDependencies(System.Int32)">
            <summary>
            Checks dependencies, returns true if dependent.
            </summary>
            <param name="couponId">Discount coupon ID</param>
        </member>
        <member name="M:CMS.Ecommerce.DiscountCouponInfoProvider.RecalculateDiscountCoupons(System.Single,System.Int32,System.Boolean,System.Boolean,System.String,System.Int32)">
            <summary>
            Recalculates coupons values using the given coefficient.
            </summary>
            <param name="coefficient">Factor by which values are recalculated</param>        
            <param name="roundTo">Number of significant digits the number should be rounded to</param>
            <param name="flatValues">Indicates if flat values should be recalculated</param>
            <param name="relativeValues">Indicates if relative values should be recalculated</param>
            <param name="where">Additional WHERE condition</param>
            <param name="siteId">ID of the site which records are to be recalculated</param>
        </member>
        <member name="M:CMS.Ecommerce.DiscountCouponInfoProvider.ValidateDiscountCoupon(CMS.Ecommerce.ShoppingCartItemInfo,CMS.Ecommerce.DiscountCouponInfo)">
            <summary>
            Returns True if discount coupon is valid and can be applied to the specified shopping cart item, otherwise returns False.
            </summary>
            <param name="item">Shopping cart item to which the discount couon should be applied</param>
            <param name="discount">Discount coupon data</param>        
        </member>
        <member name="M:CMS.Ecommerce.DiscountCouponInfoProvider.CalculateUnitDiscount(CMS.Ecommerce.ShoppingCartItemInfo,CMS.Ecommerce.DiscountCouponInfo)">
            <summary>
            Validates discount coupon and calculates shopping cart item unit discount after the discount coupon is applied.
            </summary>
            <param name="item">Shopping cart item to which the discount coupon should be applied</param>
            <param name="discount">Discount coupon data</param>
        </member>
        <member name="M:CMS.Ecommerce.DiscountCouponInfoProvider.IsUserAuthorizedToModifyDiscountCoupon(CMS.Ecommerce.DiscountCouponInfo,System.String,CMS.SiteProvider.UserInfo)">
            <summary>
            Indicates if user is authorized to modify specific discount coupon. 
            For global discount coupon: 'EcommerceGlobalModify' permission is checked. 
            For site-specific discount coupon: 'EcommerceModify' OR 'ModifyDiscounts' permission is checked.
            </summary>
            <param name="coupon">Discount coupon to be checked</param>        
            <param name="siteName">Site name</param>
            <param name="user">User to be checked</param>
        </member>
        <member name="M:CMS.Ecommerce.DiscountCouponInfoProvider.IsUserAuthorizedToModifyDiscountCoupon(System.Boolean,System.String,CMS.SiteProvider.UserInfo)">
            <summary>
            Indicates if user is authorized to modify discount coupons.
            </summary>
            <param name="global">For global discount coupons (global = True): 'EcommerceGlobalModify' permission is checked. 
            For site-specific discount coupons (global = False): 'EcommerceModify' OR 'ModifyDiscounts' permission is checked.</param>        
            <param name="siteName">Site name</param>
            <param name="user">User to be checked</param>
        </member>
        <member name="M:CMS.Ecommerce.DiscountCouponInfoProvider.GetDiscountCouponsInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all discount coupons matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.Ecommerce.DiscountCouponInfoProvider.GetDiscountCouponInfoInternal(System.Int32)">
            <summary>
            Returns discount coupon with specified ID.
            </summary>
            <param name="couponId">Discount coupon ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.DiscountCouponInfoProvider.GetDiscountCouponInfoInternal(System.String,System.String)">
            <summary>
            Returns discount coupon with specified code. If site coupon is not found and global coupons are allowed, tries to search for global coupon with the same code.
            </summary>
            <param name="couponCode">Discount coupon code</param>                
            <param name="siteName">Site name</param>         
        </member>
        <member name="M:CMS.Ecommerce.DiscountCouponInfoProvider.SetDiscountCouponInfoInternal(CMS.Ecommerce.DiscountCouponInfo)">
            <summary>
            Sets (updates or inserts) specified discount coupon.
            </summary>
            <param name="couponObj">Discount coupon to be set</param>        
        </member>
        <member name="M:CMS.Ecommerce.DiscountCouponInfoProvider.DeleteDiscountCouponInfoInternal(CMS.Ecommerce.DiscountCouponInfo)">
            <summary>
            Deletes specified discount coupon.
            </summary>
            <param name="couponObj">Discount coupon to be deleted</param>        
        </member>
        <member name="M:CMS.Ecommerce.DiscountCouponInfoProvider.GetDiscountCouponsInternal(System.String,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Returns dataset of all discount coupons for specified site matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
            <param name="siteId">Site ID</param> 
        </member>
        <member name="M:CMS.Ecommerce.DiscountCouponInfoProvider.GetDiscountCouponsInternal(System.Int32)">
            <summary>
            Returns dataset of all discount coupons for specified site.
            </summary>
            <param name="siteId">Site ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.DiscountCouponInfoProvider.RecalculateDiscountCouponsInternal(System.Single,System.Int32,System.Boolean,System.Boolean,System.String,System.Int32)">
            <summary>
            Recalculates coupons values using the given coefficient.
            </summary>
            <param name="coefficient">Factor by which values are recalculated</param>        
            <param name="roundTo">Number of significant digits the number should be rounded to</param>
            <param name="flatValues">Indicates if flat values should be recalculated</param>
            <param name="relativeValues">Indicates if relative values should be recalculated</param>
            <param name="where">Additional WHERE condition</param>
            <param name="siteId">ID of the site which records are to be recalculated</param>
        </member>
        <member name="M:CMS.Ecommerce.DiscountCouponInfoProvider.ValidateDiscountCouponInternal(CMS.Ecommerce.ShoppingCartItemInfo,CMS.Ecommerce.DiscountCouponInfo)">
            <summary>
            Returns True if discount coupon is valid and can be applied to the specified shopping cart item, otherwise returns False.
            </summary>
            <param name="item">Shopping cart item to which the discount couon should be applied</param>
            <param name="discount">Discount coupon data</param>        
        </member>
        <member name="M:CMS.Ecommerce.DiscountCouponInfoProvider.CalculateUnitDiscountInternal(CMS.Ecommerce.ShoppingCartItemInfo,CMS.Ecommerce.DiscountCouponInfo)">
            <summary>
            Validates discount coupon and calculates shopping cart item unit discount after the discount coupon is applied.
            </summary>
            <param name="item">Shopping cart item to which the discount coupon should be applied</param>        
            <param name="discount">Discount coupon data</param>
        </member>
        <member name="T:CMS.Ecommerce.DiscountLevelDepartmentInfo">
            <summary>
            DiscountLevelDepartmentInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.DiscountLevelDepartmentInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.DiscountLevelDepartmentInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.DiscountLevelDepartmentInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.DiscountLevelDepartmentInfo.#ctor">
            <summary>
            Constructor - Creates an empty DiscountLevelDepartmentInfo object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.DiscountLevelDepartmentInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new DiscountLevelDepartmentInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.DiscountLevelDepartmentInfo.CheckPermissions(CMS.SettingsProvider.PermissionsEnum,System.String,CMS.SettingsProvider.IUserInfo)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
        </member>
        <member name="P:CMS.Ecommerce.DiscountLevelDepartmentInfo.DepartmentID">
            <summary>
            ID of the department.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountLevelDepartmentInfo.DiscountLevelID">
            <summary>
            ID of the discount level.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.DiscountLevelDepartmentInfoProvider">
            <summary>
            Class providing DiscountLevelDepartmentInfo management.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.DiscountLevelDepartmentInfoProvider.GetDiscountLevelDepartments(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all relationships between discount levels and departments matching the specified criteria.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.Ecommerce.DiscountLevelDepartmentInfoProvider.GetDiscountLevelDepartments(System.String,System.String)">
            <summary>
            Returns dataset of all relationships between discount levels and departments matching the specified criteria.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
        </member>
        <member name="M:CMS.Ecommerce.DiscountLevelDepartmentInfoProvider.GetDiscountLevelDepartmentInfo(System.Int32,System.Int32)">
            <summary>
            Returns relationship between specified discount level and department.
            </summary>
            <param name="discountLevelId">Discount level ID</param>
            <param name="departmentId">Department ID</param>
        </member>
        <member name="M:CMS.Ecommerce.DiscountLevelDepartmentInfoProvider.SetDiscountLevelDepartmentInfo(CMS.Ecommerce.DiscountLevelDepartmentInfo)">
            <summary>
            Sets relationship between specified discount level and department.
            </summary>
            <param name="infoObj">Discount level-department relationship to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.DiscountLevelDepartmentInfoProvider.DeleteDiscountLevelDepartmentInfo(CMS.Ecommerce.DiscountLevelDepartmentInfo)">
            <summary>
            Deletes relationship between specified discount level and department.
            </summary>
            <param name="infoObj">Discount level-department relationship to be deleted</param>
        </member>
        <member name="M:CMS.Ecommerce.DiscountLevelDepartmentInfoProvider.AddDiscountLevelToDepartment(System.Int32,System.Int32)">
            <summary>
            Sets relationship between specified discount level and department.
            </summary>  
            <param name="discountLevelId">Discount level ID</param>
            <param name="departmentId">Department ID</param>
        </member>
        <member name="M:CMS.Ecommerce.DiscountLevelDepartmentInfoProvider.RemoveDiscountLevelFromDepartment(System.Int32,System.Int32)">
            <summary>
            Deletes relationship between specified discount level and department.
            </summary>
            <param name="discountLevelId">Discount level ID</param>
            <param name="departmentId">Department ID</param>
        </member>
        <member name="M:CMS.Ecommerce.DiscountLevelDepartmentInfoProvider.GetDiscountLevelDepartmentsInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all relationships between discount levels and departments matching the specified criteria.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.Ecommerce.DiscountLevelDepartmentInfoProvider.GetDiscountLevelDepartmentInfoInternal(System.Int32,System.Int32)">
            <summary>
            Returns relationship between specified discount level and department.
            </summary>
            <param name="discountLevelId">Discount level ID</param>
            <param name="departmentId">Department ID</param>
        </member>
        <member name="M:CMS.Ecommerce.DiscountLevelDepartmentInfoProvider.SetDiscountLevelDepartmentInfoInternal(CMS.Ecommerce.DiscountLevelDepartmentInfo)">
            <summary>
            Sets relationship between specified discount level and department.
            </summary>
            <param name="infoObj">Discount level-department relationship to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.DiscountLevelDepartmentInfoProvider.DeleteDiscountLevelDepartmentInfoInternal(CMS.Ecommerce.DiscountLevelDepartmentInfo)">
            <summary>
            Deletes relationship between specified discount level and department.
            </summary>
            <param name="infoObj">Discount level-department relationship to be deleted</param>
        </member>
        <member name="T:CMS.Ecommerce.DiscountLevelInfo">
            <summary>
            DiscountlLevelInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.DiscountLevelInfo.tableLock">
            <summary>
            Table lock for loading.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.DiscountLevelInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.DiscountLevelInfo.LoadDepartments">
            <summary>
            Loads the table of departments.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.DiscountLevelInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor for deserialization.
            </summary>
            <param name="info">Serialization inf</param>
            <param name="context">Streaming context</param>
        </member>
        <member name="M:CMS.Ecommerce.DiscountLevelInfo.#ctor">
            <summary>
            Constructor - Creates an empty DiscountlLevelInfo object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.DiscountLevelInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new DiscountlLevelInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.DiscountLevelInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets object data.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.DiscountLevelInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.DiscountLevelInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.DiscountLevelInfo.IsInDepartment(System.String)">
            <summary>
            Returns true, if the discount level is assigned to the department.
            </summary>
            <param name="departmentName">Department name to check</param>
        </member>
        <member name="M:CMS.Ecommerce.DiscountLevelInfo.IsInDepartment(System.Int32)">
            <summary>
            Returns true, if the discount level is assigned to the department.
            </summary>
            <param name="departmentId">Department id</param>
        </member>
        <member name="M:CMS.Ecommerce.DiscountLevelInfo.CheckPermissions(CMS.SettingsProvider.PermissionsEnum,System.String,CMS.SettingsProvider.IUserInfo)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
        </member>
        <member name="P:CMS.Ecommerce.DiscountLevelInfo.Departments">
            <summary>
            Hashtable of departments where the discount level is assigned.
            DepartmentName (lowercase) is a key and DepartmentID is value.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountLevelInfo.DiscountLevelValidFrom">
            <summary>
            Discount level valid from.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountLevelInfo.DiscountLevelEnabled">
            <summary>
            Discount level enabled.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountLevelInfo.DiscountLevelName">
            <summary>
            Discount level name.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountLevelInfo.DiscountLevelValue">
            <summary>
            Discount level value.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountLevelInfo.DiscountLevelValidTo">
            <summary>
            Discount level valid to.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountLevelInfo.IsValid">
            <summary>
            Determines whether discount level is valid or not.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountLevelInfo.DiscountLevelDisplayName">
            <summary>
            Discount level display name.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountLevelInfo.DiscountLevelID">
            <summary>
            Discount level ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountLevelInfo.DiscountLevelGUID">
            <summary>
            Discount level GUID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountLevelInfo.DiscountLevelLastModified">
            <summary>
            Object last modified.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountLevelInfo.DiscountLevelSiteID">
            <summary>
            Discount level site ID. Set to 0 for global discount level.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountLevelInfo.IsObjectValid">
            <summary>
            Returns true if the data are valid.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountLevelInfo.ItemDiscountType">
            <summary>
            Discount type. Used for discount calculation in the shopping cart.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountLevelInfo.ItemDiscountID">
            <summary>
            Discount identifier. Used for discount calculation in the shopping cart.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountLevelInfo.ItemDiscountDisplayName">
            <summary>
            Discount display name. Used for discount calculation in the shopping cart.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountLevelInfo.ItemDiscountValue">
            <summary>
            Discount value. Used for discount calculation in the shopping cart.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountLevelInfo.ItemDiscountIsFlat">
            <summary>
            True - discount value is flat, False - discount value is relative. Used for discount calculation in the shopping cart.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountLevelInfo.ItemDiscountIsGlobal">
            <summary>
            True - says that discounts value is set in global main currency, False - says that discounts value is set in site main currency. 
            Takes effect only if discount value is flat. Used for discount calculation in the shopping cart.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountLevelInfo.ItemDiscountedUnits">
            <summary>
            Number of units the discount should be applied to
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountLevelInfo.ItemDiscountCustomData">
            <summary>
            Discount custom data.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.DiscountLevelInfoProvider">
            <summary>
            Class providing DiscountLevelInfo management.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.DiscountLevelInfoProvider.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.DiscountLevelInfoProvider.GetDiscountLevels(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all discount levels matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.Ecommerce.DiscountLevelInfoProvider.GetDiscountLevels(System.String,System.String)">
            <summary>
            Returns dataset of all discount levels matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
        </member>
        <member name="M:CMS.Ecommerce.DiscountLevelInfoProvider.GetDiscountLevelInfo(System.Int32)">
            <summary>
            Returns discount level with specified ID.
            </summary>
            <param name="levelId">Discount level ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.DiscountLevelInfoProvider.GetDiscountLevelInfo(System.String,System.String)">
            <summary>
            Returns discount level with specified name.
            </summary>
            <param name="levelName">Discount level name</param>                
            <param name="siteName">Site name</param>                
        </member>
        <member name="M:CMS.Ecommerce.DiscountLevelInfoProvider.SetDiscountLevelInfo(CMS.Ecommerce.DiscountLevelInfo)">
            <summary>
            Sets (updates or inserts) specified discount level.
            </summary>
            <param name="levelObj">Discount level to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.DiscountLevelInfoProvider.DeleteDiscountLevelInfo(CMS.Ecommerce.DiscountLevelInfo)">
            <summary>
            Deletes specified discount level.
            </summary>
            <param name="levelObj">Discount level to be deleted</param>
        </member>
        <member name="M:CMS.Ecommerce.DiscountLevelInfoProvider.DeleteDiscountLevelInfo(System.Int32)">
            <summary>
            Deletes discount level with specified ID.
            </summary>
            <param name="levelId">Discount level ID</param>
        </member>
        <member name="M:CMS.Ecommerce.DiscountLevelInfoProvider.Clear(System.Boolean)">
            <summary>
            Clears hashtables.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.Ecommerce.DiscountLevelInfoProvider.GetDiscountLevels(System.String,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Returns dataset of all discount levels for specified site matching the specified parameters.
            </summary>       
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
            <param name="siteId">Site ID</param>            
        </member>
        <member name="M:CMS.Ecommerce.DiscountLevelInfoProvider.GetDiscountLevels(System.Int32,System.Boolean)">
            <summary>
            Returns dataset of all discount levels for specified site.
            </summary>
            <param name="siteId">Site ID</param>  
            <param name="onlyEnabled">True - only enable discount levels are returned.
            False - both enabled and disabled discount levels are returned.</param>
        </member>
        <member name="M:CMS.Ecommerce.DiscountLevelInfoProvider.ValidateDiscountLevel(CMS.Ecommerce.ShoppingCartItemInfo,CMS.Ecommerce.DiscountLevelInfo)">
            <summary>
            Returns True if discount level is valid and can be applied to the specified shopping cart item, otherwise returns False.
            </summary>
            <param name="item">Shopping cart item to which the discount level should be applied</param>
            <param name="discount">Discount level data</param>        
        </member>
        <member name="M:CMS.Ecommerce.DiscountLevelInfoProvider.CalculateUnitDiscount(CMS.Ecommerce.ShoppingCartItemInfo,CMS.Ecommerce.DiscountLevelInfo)">
            <summary>
            Calculates shopping cart item unit discount after the specified discount level is applied.
            </summary>
            <param name="item">Shopping cart item to which the discount level should be applied</param>
            <param name="discount">Discount level data</param>
        </member>
        <member name="M:CMS.Ecommerce.DiscountLevelInfoProvider.CheckDependencies(System.Int32)">
            <summary>
            Checks dependencies, returns true if dependent.
            </summary>
            <param name="levelId">Discount level ID</param>
        </member>
        <member name="M:CMS.Ecommerce.DiscountLevelInfoProvider.IsUserAuthorizedToModifyDiscountLevel(CMS.Ecommerce.DiscountLevelInfo,System.String,CMS.SiteProvider.UserInfo)">
            <summary>
            Indicates if user is authorized to modify specific discount level. 
            For global discount level: 'EcommerceGlobalModify' permission is checked. 
            For site-specific discount level: 'EcommerceModify' OR 'ModifyDiscounts' permission is checked.
            </summary>
            <param name="level">Discount level to be checked</param>        
            <param name="siteName">Site name</param>
            <param name="user">User to be checked</param>
        </member>
        <member name="M:CMS.Ecommerce.DiscountLevelInfoProvider.IsUserAuthorizedToModifyDiscountLevel(System.Boolean,System.String,CMS.SiteProvider.UserInfo)">
            <summary>
            Indicates if user is authorized to modify discount level.
            </summary>
            <param name="global">For global discount level (global = True): 'EcommerceGlobalModify' permission is checked. 
            For site-specific discount level (global = False): 'EcommerceModify' OR 'ModifyDiscounts' permission is checked.</param>        
            <param name="siteName">Site name</param>
            <param name="user">User to be checked</param>
        </member>
        <member name="M:CMS.Ecommerce.DiscountLevelInfoProvider.GetDiscountLevelsInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all discount levels matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.Ecommerce.DiscountLevelInfoProvider.GetDiscountLevelInfoInternal(System.Int32)">
            <summary>
            Returns discount level with specified ID.
            </summary>
            <param name="levelId">Discount level ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.DiscountLevelInfoProvider.GetDiscountLevelInfoInternal(System.String,System.String)">
            <summary>
            Returns discount level with specified name. If site discount level is not found and global discount levels are allowed, tries to search for global discount level with the same name.
            </summary>
            <param name="levelName">Discount level name</param>                
            <param name="siteName">Site name</param>         
        </member>
        <member name="M:CMS.Ecommerce.DiscountLevelInfoProvider.SetDiscountLevelInfoInternal(CMS.Ecommerce.DiscountLevelInfo)">
            <summary>
            Sets (updates or inserts) specified discount level.
            </summary>
            <param name="levelObj">Discount level to be set</param>        
        </member>
        <member name="M:CMS.Ecommerce.DiscountLevelInfoProvider.DeleteDiscountLevelInfoInternal(CMS.Ecommerce.DiscountLevelInfo)">
            <summary>
            Deletes specified discount level.
            </summary>
            <param name="levelObj">Discount level to be deleted</param>        
        </member>
        <member name="M:CMS.Ecommerce.DiscountLevelInfoProvider.GetDiscountLevelsInternal(System.String,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Returns dataset of all discount levels for specified site matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
            <param name="siteId">Site ID</param> 
        </member>
        <member name="M:CMS.Ecommerce.DiscountLevelInfoProvider.GetDiscountLevelsInternal(System.Int32,System.Boolean)">
            <summary>
            Returns dataset of all discount levels for specified site.
            </summary>
            <param name="siteId">Site ID</param>  
            <param name="onlyEnabled">True - only enable discount levels are returned.
            False - both enabled and disabled discount levels are returned.</param>
        </member>
        <member name="M:CMS.Ecommerce.DiscountLevelInfoProvider.ValidateDiscountLevelInternal(CMS.Ecommerce.ShoppingCartItemInfo,CMS.Ecommerce.DiscountLevelInfo)">
            <summary>
            Returns True if discount level is valid and can be applied to the specified shopping cart item, otherwise returns False.
            </summary>
            <param name="item">Shopping cart item to which the discount level should be applied</param>
            <param name="discount">Discount level data</param>        
        </member>
        <member name="M:CMS.Ecommerce.DiscountLevelInfoProvider.CalculateUnitDiscountInternal(CMS.Ecommerce.ShoppingCartItemInfo,CMS.Ecommerce.DiscountLevelInfo)">
            <summary>
            Validates discount level and calculates shopping cart item unit discount after the discount level is applied.
            </summary>
            <param name="item">Shopping cart item to which the discount level should be applied</param>
            <param name="discount">Discount level data</param>
        </member>
        <member name="T:CMS.Ecommerce.ECommerceHelper">
            <summary>
            Custom E-commerce helper.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceHelper.ECOMMERCE_RESOURCE_NAME">
            <summary>
            Resource name for Ecommerce.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceHelper.IsUserAuthorizedToModifyConfiguration(System.Boolean,System.String,CMS.SiteProvider.UserInfo)">
            <summary>
            Checks whether the user is authorized to modify site/global e-commerce configuration.
            </summary>
            <param name="global">True - permission 'ConfigurationGlobalModify' is checked, False - permission 'ConfigurationGlobalModify' is checked</param>
            <param name="siteName">Site name</param>
            <param name="user">User to be checked</param>
            <returns></returns>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceHelper.IsUserAuthorizedForPermission(System.String,System.String,CMS.SiteProvider.UserInfo)">
            <summary>
            Checks the specified ecommerce permission for the given user.
            </summary>
            <param name="permissionName">Permission name to be checked</param>
            <param name="siteName">Site name</param>
            <param name="user">User to be checked</param>        
        </member>
        <member name="M:CMS.Ecommerce.ECommerceHelper.IsUserAuthorizedForDepartment(System.Int32,System.String,CMS.SiteProvider.UserInfo)">
            <summary>
            Checks whether the user is authorized to access products from the specified department. 
            Returns true if user is global admin or is granted with 'AcessAllDepartments' e-commerce module permission or he is administrator of the given department.
            </summary>
            <param name="departmentId">ID of the department</param>
            <param name="user">User to be checked</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceHelper.GetSiteID(System.String,System.String)">
            <summary>
            Returns 0 if specified site uses global objects based on the specified e-commerce setting, otherwise returns site ID of the specified site.
            </summary>
            <param name="siteName">Site name</param>
            <param name="settingsKey">One of the e-commerce settings keys which determine if specific global objects are used</param>        
        </member>
        <member name="M:CMS.Ecommerce.ECommerceHelper.GetSiteID(System.Int32,System.String)">
            <summary>
            Returns 0 if specified site uses global objects based on the specified e-commerce setting, otherwise returns site ID without any change.
            </summary>
            <param name="siteId">Site ID</param>
            <param name="settingsKey">One of the e-commerce settings keys which determine if specific global objects are used</param>        
        </member>
        <member name="M:CMS.Ecommerce.ECommerceHelper.GetTableColumSum(System.Data.DataTable,System.String)">
            <summary>
            Returns sum of all values from the specified table column.
            </summary>
            <param name="table">Table</param>
            <param name="column">Column name</param>        
        </member>
        <member name="M:CMS.Ecommerce.ECommerceHelper.GetDiscountValue(System.Double,System.Double,System.Boolean)">
            <summary>
            Returns discount calculated from the specified price.
            </summary>
            <param name="price">Price from which the discount should be calculated</param>
            <param name="value">Discount value</param>
            <param name="isFlat">True - discount value is flat, False - discount value is relative</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceHelper.GetDiscountsTypeEnum(System.String)">
            <summary>
            Converts discount type string value to DiscountTypeEnum. Default value is DiscountTypeEnum.CustomDiscount.
            </summary>
            <param name="type">Discounts type. 
            'DiscountLevel' for discount level, 'DiscountCoupon' for discount coupon, 
            'VolumeDiscount' for volume discount, 'CustomDiscount' for custom discount.</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceHelper.GetDiscountTypeString(CMS.Ecommerce.DiscountTypeEnum)">
            <summary>
            Converts DiscountTypeEnum to discount type string value. Default value is 'CUSTOMDISCOUNT'.
            </summary>
            <param name="type">Discount type.</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceHelper.TrackOrderConversion(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Tracks order conversion.
            </summary>
            <param name="cart">Shopping cart data</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceHelper.TrackOrderConversion(CMS.Ecommerce.ShoppingCartInfo,System.String)">
            <summary>
            Tracks order conversion.
            </summary>
            <param name="cart">Shopping cart data</param>
            <param name="name">Order conversion name. If it is set, it is used instead of the 'Order' conversion name from the settings.</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceHelper.TrackRegistrationConversion(System.String)">
            <summary>
            Tracks registration conversion.
            </summary>
            <param name="siteName">Name of the site the registration should be tracked for.</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceHelper.TrackRegistrationConversion(System.String,System.String)">
            <summary>
            Tracks registration conversion.
            </summary>
            <param name="siteName">Name of the site the registration should be tracked for.</param>
            <param name="name">Registration conversion name. If it is set, it is used instead of the 'Registration' convertion name from the settings.</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceHelper.TrackAddToShoppingCartConversion(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Tracks add to shopping cart conversion.
            </summary>
            <param name="product">Product for which the adding to the shopping cart should be tracked.</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceHelper.TrackAddToShoppingCartConversion(CMS.Ecommerce.ShoppingCartItemInfo,System.String)">
            <summary>
            Tracks add to shopping cart conversion.
            </summary>
            <param name="product">Product for which the adding to the shopping cart should be tracked.</param>
            <param name="name">Add to shopping cart convertion name. If it is set, it is used instead of the 'Add to shopping cart' conversion name from the settings.</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceHelper.TrackOrderItemsConversions(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Tracks conversions of all order items
            </summary>
            <param name="cart">Shopping cart data</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceHelper.IsUserAuthorizedPerEcommerce(System.String,System.String,CMS.SiteProvider.UserInfo)">
            <summary>
            Checks whether the user is authorized for given permission, returns true if so.
            </summary>
            <param name="permissionName">Permision name to check</param>
            <param name="siteName">Site name</param>
            <param name="user">User to be checked</param>        
        </member>
        <member name="M:CMS.Ecommerce.ECommerceHelper.TrackConversion(System.String,System.Double,System.String)">
            <summary>
            Logs conversion with the given name and value.
            </summary>
            <param name="objectName">Conversion name</param>
            <param name="value">Conversion value</param>
            <param name="siteName">Name of the site the conversion should be logged for</param>
        </member>
        <member name="T:CMS.Ecommerce.ECommerceObjectType">
            <summary>
            Ecommerce object type constants.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceObjectType.GROUP_ECOMMERCE">
            <summary>
            E-commerce object types - Group constant.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceObjectType.SUPPLIER">
            <summary>
            Code name for ecommerce suppliers.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceObjectType.MANUFACTURER">
            <summary>
            Code name for ecommerce manufacturer.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceObjectType.CURRENCY">
            <summary>
            Code name for ecommerce currencies.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceObjectType.PAYMENTOPTION">
            <summary>
            Code name for payment options.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceObjectType.PUBLICSTATUS">
            <summary>
            Code name for public status.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceObjectType.ORDERITEM">
            <summary>
            Code name for order item.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceObjectType.ORDERITEMSKUFILE">
            <summary>
            Code name for order item SKU files.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceObjectType.ORDERSTATUS">
            <summary>
            Code name for order status.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceObjectType.ORDERSTATUSUSER">
            <summary>
            Code name for order status history.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceObjectType.INTERNALSTATUS">
            <summary>
            Code name for internal status.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceObjectType.DEPARTMENT">
            <summary>
            Code name for department.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceObjectType.DEPARTMENTTAXCLASS">
            <summary>
            Code name for department tax class.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceObjectType.DISCOUNTCOUPON">
            <summary>
            Code name for discount coupon.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceObjectType.DISCOUNTLEVEL">
            <summary>
            Code name for discount level.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceObjectType.SHIPPINGOPTION">
            <summary>
            Code name for shipping option.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceObjectType.EXCHANGETABLE">
            <summary>
            Code name for exchange table.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceObjectType.TAXCLASS">
            <summary>
            Code name for tax classes.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceObjectType.TAXCLASSSTATE">
            <summary>
            Code name for tax class states.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceObjectType.TAXCLASSCOUNTRY">
            <summary>
            Code name for tax class countries.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceObjectType.ADDRESS">
            <summary>
            Code name for addresses.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceObjectType.CUSTOMER">
            <summary>
            Code name for customers.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceObjectType.CUSTOMERLIST">
            <summary>
            Code name for customer list virtual object.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceObjectType.CREDITEVENT">
            <summary>
            Code name for customers.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceObjectType.OPTIONCATEGORY">
            <summary>
            Code name for option categories.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceObjectType.ORDER">
            <summary>
            Code name for orders.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceObjectType.ORDERLIST">
            <summary>
            Code name for order list virtual object.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceObjectType.SKU">
            <summary>
            Code name for SKUs.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceObjectType.SKUFILE">
            <summary>
            Code name for SKU files.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceObjectType.SKULIST">
            <summary>
            Code name for SKUList virutal objects.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceObjectType.BUNDLE">
            <summary>
            Code name for bundles.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceObjectType.EXCHANGERATE">
            <summary>
            Code name for exchange rates.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceObjectType.VOLUMEDISCOUNT">
            <summary>
            Code name for volume discounts.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceObjectType.SHIPPINGCOST">
            <summary>
            Code name for shipping costs.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceObjectType.WISHLIST">
            <summary>
            Code name for wishlist.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceObjectType.SHOPPINGCART">
            <summary>
            Code name for shopping cart.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceObjectType.SHOPPINGCARTITEM">
            <summary>
            Code name for shopping cart item.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceObjectType.DISCOUNTLEVELDEPARTMENT">
            <summary>
            Discount level department binding.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceObjectType.SKUDISCOUNTCOUPON">
            <summary>
            SKU Discount coupon binding.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceObjectType.SKUOPTIONCATEGORY">
            <summary>
            SKU Option category binding.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceObjectType.SKUTAXCLASS">
            <summary>
            SKU Tax class binding.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceObjectType.SHIPPINGOPTIONTAXCLASS">
            <summary>
            Shipping option Tax class binding.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceObjectType.USERDEPARTMENT">
            <summary>
            User department binding.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceObjectType.PAYMENTSHIPPING">
            <summary>
            Payment shipping binding.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceObjectType.GetObject(System.Data.DataRow,System.String)">
            <summary>
            Gets the object created from the given DataRow.
            </summary>
            <param name="objectRow">Object DataRow</param>
            <param name="objectType">Object type</param>
        </member>
        <member name="T:CMS.Ecommerce.ExchangeRateInfo">
            <summary>
            ExchangeRateInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ExchangeRateInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ExchangeRateInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ExchangeRateInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ExchangeRateInfo.#ctor">
            <summary>
            Constructor - Creates an empty ExchangeRateInfo object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ExchangeRateInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new ExchangeRateInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ExchangeRateInfo.CheckPermissions(CMS.SettingsProvider.PermissionsEnum,System.String,CMS.SettingsProvider.IUserInfo)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
        </member>
        <member name="P:CMS.Ecommerce.ExchangeRateInfo.ExchangeTableID">
            <summary>
            ID of the exchange table.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ExchangeRateInfo.ExchagneRateID">
            <summary>
            ID of the exchange rate.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ExchangeRateInfo.ExchangeRateToCurrencyID">
            <summary>
            ID of the target currency.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ExchangeRateInfo.ExchangeRateValue">
            <summary>
            Value of the rate.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ExchangeRateInfo.ExchangeRateGUID">
            <summary>
            Exchange rate GUID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ExchangeRateInfo.ExchangeRateLastModified">
            <summary>
            Object last modified.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.ExchangeRateInfoProvider">
            <summary>
            Class providing ExchangeRateInfo management.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ExchangeRateInfoProvider.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ExchangeRateInfoProvider.GetExchangeRates(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all exchange rates matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.Ecommerce.ExchangeRateInfoProvider.GetExchangeRates(System.String,System.String)">
            <summary>
            Returns dataset of all exchange rates matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
        </member>
        <member name="M:CMS.Ecommerce.ExchangeRateInfoProvider.GetExchangeRateInfo(System.Int32)">
            <summary>
            Returns exchange rate with specified ID.
            </summary>
            <param name="rateId">Exchange rate ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.ExchangeRateInfoProvider.SetExchangeRateInfo(CMS.Ecommerce.ExchangeRateInfo)">
            <summary>
            Sets (updates or inserts) specified exchange rate.
            </summary>
            <param name="rateObj">Exchange rate to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.ExchangeRateInfoProvider.DeleteExchangeRateInfo(CMS.Ecommerce.ExchangeRateInfo)">
            <summary>
            Deletes specified exchange rate.
            </summary>
            <param name="rateObj">Exchange rate to be deleted</param>
        </member>
        <member name="M:CMS.Ecommerce.ExchangeRateInfoProvider.DeleteExchangeRateInfo(System.Int32)">
            <summary>
            Deletes exchange rate with specified ID.
            </summary>
            <param name="rateId">Exchange rate ID</param>
        </member>
        <member name="M:CMS.Ecommerce.ExchangeRateInfoProvider.Clear(System.Boolean)">
            <summary>
            Clears hashtables.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.Ecommerce.ExchangeRateInfoProvider.GetExchangeRates(System.Int32)">
            <summary>
            Returns dataset of all exchange rates of the specified exchange table.
            </summary>
            <param name="tableId">Exchange table ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.ExchangeRateInfoProvider.GetExchangeRateInfo(System.Int32,System.Int32)">
            <summary>
            Returns exchange rate from specified exchange table which is applied to specified currency.
            </summary>
            <param name="currencyId">Currency ID</param>        
            <param name="tableId">Exchange table ID</param>  
        </member>
        <member name="M:CMS.Ecommerce.ExchangeRateInfoProvider.GetLastExchangeRate(System.Int32,System.Int32)">
            <summary>
            Returns valid exchange rate between main currency of the specified site and currency specified by currencyID
            or last invalid exchange rate if no valid rate found or 1 if no exchange rate found.
            </summary>
            <param name="currencyId">ID of the currency to which we want exchange</param>
            <param name="siteId">ID of the site for which the exchange rate should be returned</param>
        </member>
        <member name="M:CMS.Ecommerce.ExchangeRateInfoProvider.GetLastExchangeRate(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Returns valid exchange rate between main currency of the specified site and currency specified by currencyID
            or last invalid exchange rate if no valid rate found or 1 if no exchange rate found.
            </summary>
            <param name="currencyId">ID of the currency to which we want exchange</param>
            <param name="siteId">ID of the site for which the exchange rate should be returned</param>
            <param name="fromGlobal">If set to true, exchange rate between global main currency and specified site currency is calculated and returned. Has effect only when converting to site currency</param>
        </member>
        <member name="M:CMS.Ecommerce.ExchangeRateInfoProvider.ApplyExchangeRate(System.Double,System.Double)">
            <summary>
            Returns the value modified using the given exchange rate.
            </summary>
            <param name="value">Value the exchange rate should be applied to</param>
            <param name="rate">Exchange rate value</param>
        </member>
        <member name="M:CMS.Ecommerce.ExchangeRateInfoProvider.CopyExchangeRates(System.Int32,System.Int32)">
            <summary>
            Copies exchange rates from source table to target table. Updates only rates with same currency code. Rates in target table which does not
            have corresponding rate in source table will not be updated.
            </summary>
            <param name="sourceTableId">Id of the source exchange table</param>
            <param name="targetTableId">Id of the target exchange table</param>
        </member>
        <member name="M:CMS.Ecommerce.ExchangeRateInfoProvider.RecalculateExchangeRates(System.Single,System.Int32,System.String,System.Int32)">
            <summary>
            Recalculates exchange rates values using the given coefficient.
            </summary>
            <param name="coefficient">Factor by which values are recalculated</param>        
            <param name="roundTo">Number of significant digits the number should be rounded to</param>
            <param name="where">Additional WHERE condition</param>
            <param name="siteId">Id of the site which records are to be recalculated</param>
        </member>
        <member name="M:CMS.Ecommerce.ExchangeRateInfoProvider.GetExchangeRatesInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all exchange rates matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.Ecommerce.ExchangeRateInfoProvider.GetExchangeRateInfoInternal(System.Int32)">
            <summary>
            Returns exchange rate with specified ID.
            </summary>
            <param name="rateId">Exchange rate ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.ExchangeRateInfoProvider.SetExchangeRateInfoInternal(CMS.Ecommerce.ExchangeRateInfo)">
            <summary>
            Sets (updates or inserts) specified exchange rate.
            </summary>
            <param name="rateObj">Exchange rate to be set</param>        
        </member>
        <member name="M:CMS.Ecommerce.ExchangeRateInfoProvider.DeleteExchangeRateInfoInternal(CMS.Ecommerce.ExchangeRateInfo)">
            <summary>
            Deletes specified exchange rate.
            </summary>
            <param name="rateObj">Exchange rate to be deleted</param>        
        </member>
        <member name="M:CMS.Ecommerce.ExchangeRateInfoProvider.GetExchangeRatesInternal(System.Int32)">
            <summary>
            Returns dataset of all exchange rates of the specified exchange table.
            </summary>
            <param name="tableId">Exchange table ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.ExchangeRateInfoProvider.GetExchangeRateInfoInternal(System.Int32,System.Int32)">
            <summary>
            Returns exchange rate from specified exchange table which is applied to specified currency.
            </summary>
            <param name="currencyId">Currency ID</param>        
            <param name="tableId">Exchange table ID</param>  
        </member>
        <member name="M:CMS.Ecommerce.ExchangeRateInfoProvider.GetLastExchangeRateInternal(System.Int32,System.Int32)">
            <summary>
            Returns valid exchange rate between main currency of the specified site and currency specified by currencyID
            or last invalid exchange rate if no valid rate found or 1 if no exchange rate found.
            </summary>
            <param name="currencyId">ID of the currency to which we want exchange</param>
            <param name="siteId">ID of the site for which the exchange rate should be returned</param>
        </member>
        <member name="M:CMS.Ecommerce.ExchangeRateInfoProvider.GetLastExchangeRateInternal(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Returns valid exchange rate between main currency of the specified site and currency specified by currencyID
            or last invalid exchange rate if no valid rate found or 1 if no exchange rate found.
            </summary>
            <param name="currencyId">ID of the currency to which we want exchange</param>
            <param name="siteId">ID of the site for which the exchange rate should be returned</param>
            <param name="fromGlobal">If set to true, exchange rate between global main currency and specified site currency is calculated and returned. Has effect only when converting to site currency</param>
        </member>
        <member name="M:CMS.Ecommerce.ExchangeRateInfoProvider.ApplyExchangeRateInternal(System.Double,System.Double)">
            <summary>
            Returns the value modified using the given exchange rate.
            </summary>
            <param name="value">Value the exchange rate should be applied to</param>
            <param name="rate">Exchange rate value</param>
        </member>
        <member name="M:CMS.Ecommerce.ExchangeRateInfoProvider.CopyExchangeRatesInternal(System.Int32,System.Int32)">
            <summary>
            Copies exchange rates from source table to target table. Updates only rates with same currency code. Rates in target table which does not
            have corresponding rate in source table will not be updated.
            </summary>
            <param name="sourceTableId">Id of the source exchange table</param>
            <param name="targetTableId">Id of the target exchange table</param>
        </member>
        <member name="M:CMS.Ecommerce.ExchangeRateInfoProvider.RecalculateExchangeRatesInternal(System.Single,System.Int32,System.String,System.Int32)">
            <summary>
            Recalculates exchange rates values using the given coefficient.
            </summary>
            <param name="coefficient">Factor by which values are multiplied</param>        
            <param name="roundTo">Number of significant digits the number should be rounded to</param>
            <param name="where">Additional WHERE condition</param>
            <param name="siteId">ID of the site which records are to be recalculated</param>
        </member>
        <member name="M:CMS.Ecommerce.ExchangeRateInfoProvider.GetLastExchangeRateForSite(System.Int32,System.Int32)">
            <summary>
            Returns valid exchange rate between main currency of the specified site and currency specified by ID
            or last invalid exchange rate if no valid rate found or 1 if no exchange rate found.
            </summary>
            <param name="currencyId">ID of the currency to which we want exchange</param>
            <param name="siteId">ID of the site for which the exchange rate should be returned</param>
        </member>
        <member name="T:CMS.Ecommerce.ExchangeTableInfo">
            <summary>
            ExchangeTableInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ExchangeTableInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ExchangeTableInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ExchangeTableInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ExchangeTableInfo.#ctor">
            <summary>
            Constructor - Creates an empty ExchangeTableInfo object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ExchangeTableInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new ExchangeTableInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ExchangeTableInfo.CheckPermissions(CMS.SettingsProvider.PermissionsEnum,System.String,CMS.SettingsProvider.IUserInfo)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
        </member>
        <member name="P:CMS.Ecommerce.ExchangeTableInfo.ExchangeTableValidFrom">
            <summary>
            Valid from.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ExchangeTableInfo.ExchangeTableID">
            <summary>
            ID of the exchange table.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ExchangeTableInfo.ExchangeTableDisplayName">
            <summary>
            Table display name.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ExchangeTableInfo.ExchangeTableValidTo">
            <summary>
            Valid to.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ExchangeTableInfo.ExchangeTableGUID">
            <summary>
            Exchange table GUID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ExchangeTableInfo.ExchangeTableLastModified">
            <summary>
            Object last modified.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ExchangeTableInfo.ExchangeTableSiteID">
            <summary>
            Exchange table site ID. Set to 0 for global exchange table.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ExchangeTableInfo.ExchangeTableRateFromGlobalCurrency">
            <summary>
            Rate from global main currency to site main currency.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.ExchangeTableInfoProvider">
            <summary>
            Class providing ExchangeTableInfo management.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ExchangeTableInfoProvider.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ExchangeTableInfoProvider.GetExchangeTables(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all exchange tables matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.Ecommerce.ExchangeTableInfoProvider.GetExchangeTables(System.String,System.String)">
            <summary>
            Returns dataset of all exchange tables matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
        </member>
        <member name="M:CMS.Ecommerce.ExchangeTableInfoProvider.GetExchangeTableInfo(System.Int32)">
            <summary>
            Returns exchange table with specified ID.
            </summary>
            <param name="tableId">Exchange table ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.ExchangeTableInfoProvider.SetExchangeTableInfo(CMS.Ecommerce.ExchangeTableInfo)">
            <summary>
            Sets (updates or inserts) specified exchange table.
            </summary>
            <param name="tableObj">Exchange table to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.ExchangeTableInfoProvider.DeleteExchangeTableInfo(CMS.Ecommerce.ExchangeTableInfo)">
            <summary>
            Deletes specified exchange table.
            </summary>
            <param name="tableObj">Exchange table to be deleted</param>
        </member>
        <member name="M:CMS.Ecommerce.ExchangeTableInfoProvider.DeleteExchangeTableInfo(System.Int32)">
            <summary>
            Deletes exchange table with specified ID.
            </summary>
            <param name="tableId">Exchange table ID</param>
        </member>
        <member name="M:CMS.Ecommerce.ExchangeTableInfoProvider.Clear(System.Boolean)">
            <summary>
            Clears hashtables.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.Ecommerce.ExchangeTableInfoProvider.GetExchangeTables(System.String,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Returns dataset of all exchange tables for specified site matching the specified parameters.
            </summary>       
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
            <param name="siteId">Site ID</param>            
        </member>
        <member name="M:CMS.Ecommerce.ExchangeTableInfoProvider.GetExchangeTables(System.Int32)">
            <summary>
            Returns dataset of all exchange tables for specified site.
            </summary>
            <param name="siteId">Site ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.ExchangeTableInfoProvider.GetExchangeTableInfo(System.String,System.String)">
            <summary>
            Returns exchange table with specified display name.
            </summary>
            <param name="tableName">Exchange table display name</param>        
            <param name="siteName">Exchange table site name</param>        
        </member>
        <member name="M:CMS.Ecommerce.ExchangeTableInfoProvider.GetLastExchangeTableInfo(System.Int32)">
            <summary>
            For specified site returns last valid exchange table or last invalid exchange table if no valid table found or 
            null if no exchange table found.
            </summary>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.Ecommerce.ExchangeTableInfoProvider.IsExchangeRateFromGlobalMainCurrencyMissing(System.Int32)">
            <summary>
            Indicates if exchange rate from global main currency is missing in the last valid exchange table. Returns false if site uses
            global currencies or global exchange rates or code of site main currency is the same as code of global main currency.
            </summary>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.Ecommerce.ExchangeTableInfoProvider.RecalculateExchangeRateFromGlobalMainCurrency(System.Single,System.Int32,System.String,System.Int32)">
            <summary>
            Recalculates exchange rates from global main currency using the given coefficient.
            </summary>
            <param name="coefficient">Factor by which values are recalculated</param>        
            <param name="roundTo">Number of significant digits the number should be rounded to</param>
            <param name="where">Additional WHERE condition</param>
            <param name="siteId">Id of the site which records are to be recalculated</param>
        </member>
        <member name="M:CMS.Ecommerce.ExchangeTableInfoProvider.GetLastExchangeRateFromGlobalMainCurrency(System.Int32)">
            <summary>
            Returns valid exchange rate from global main currency to the currency of the specified site
            or last invalid exchange rate if no valid rate found or 1 if no exchange rate found.
            If site uses global currencies or global currency code equals site currency code, 1 is returned automatically.
            </summary>
            <param name="siteId">ID of the site for which the exchange rate should be returned</param>  
        </member>
        <member name="M:CMS.Ecommerce.ExchangeTableInfoProvider.GetExchangeTablesInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all exchange tables matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.Ecommerce.ExchangeTableInfoProvider.GetExchangeTableInfoInternal(System.Int32)">
            <summary>
            Returns exchange table with specified ID.
            </summary>
            <param name="tableId">Exchange table ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.ExchangeTableInfoProvider.SetExchangeTableInfoInternal(CMS.Ecommerce.ExchangeTableInfo)">
            <summary>
            Sets (updates or inserts) specified exchange table.
            </summary>
            <param name="tableObj">Exchange table to be set</param>        
        </member>
        <member name="M:CMS.Ecommerce.ExchangeTableInfoProvider.DeleteExchangeTableInfoInternal(CMS.Ecommerce.ExchangeTableInfo)">
            <summary>
            Deletes specified exchange table.
            </summary>
            <param name="tableObj">Exchange table to be deleted</param>        
        </member>
        <member name="M:CMS.Ecommerce.ExchangeTableInfoProvider.GetExchangeTablesInternal(System.String,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Returns dataset of all exchange tables for specified site matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
            <param name="siteId">Site ID</param> 
        </member>
        <member name="M:CMS.Ecommerce.ExchangeTableInfoProvider.GetExchangeTablesInternal(System.Int32)">
            <summary>
            Returns dataset of all exchange tables for specified site.
            </summary>
            <param name="siteId">Site ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.ExchangeTableInfoProvider.GetExchangeTableInfoInternal(System.String,System.String)">
            <summary>
            Returns exchange table with specified display name.
            </summary>
            <param name="tableName">Exchange table display name</param>        
            <param name="siteName">Exchange table site name</param>        
        </member>
        <member name="M:CMS.Ecommerce.ExchangeTableInfoProvider.GetLastExchangeTableInfoInternal(System.Int32)">
            <summary>
            For specified site returns last valid exchange table or last invalid exchange table if no valid table found or 
            null if no exchange table found.
            </summary>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.Ecommerce.ExchangeTableInfoProvider.IsExchangeRateFromGlobalMainCurrencyMissingInternal(System.Int32)">
            <summary>
            Indicates if exchange rate from global main currency is missing in the last valid exchange table. Returns false if site uses
            global currencies or global exchange rates or code of site main currency is the same as code of global main currency.
            </summary>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.Ecommerce.ExchangeTableInfoProvider.RecalculateExchangeRateFromGlobalMainCurrencyInternal(System.Single,System.Int32,System.String,System.Int32)">
            <summary>
            Recalculates exchange rates from global main currency using the given coefficient.
            </summary>
            <param name="coefficient">Factor by which values are recalculated</param>        
            <param name="roundTo">Number of significant digits the number should be rounded to</param>
            <param name="where">Additional WHERE condition</param>
            <param name="siteId">ID of the site which records are to be recalculated</param>
        </member>
        <member name="M:CMS.Ecommerce.ExchangeTableInfoProvider.GetLastExchangeRateFromGlobalMainCurrencyInternal(System.Int32)">
            <summary>
            Returns valid exchange rate from global main currency to the currency of the specified site
            or last invalid exchange rate if no valid rate found or 1 if no exchange rate found.
            If site uses global currencies or global currency code equals site currency code, 1 is returned automatically.
            </summary>
            <param name="siteId">ID of the site for which the exchange rate should be returned</param>      
        </member>
        <member name="T:CMS.Ecommerce.InternalStatusInfo">
            <summary>
            InternalStatusInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.InternalStatusInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.InternalStatusInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.InternalStatusInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.InternalStatusInfo.CopyDataFrom(CMS.Ecommerce.InternalStatusInfo)">
            <summary>
            Fills data properties with values from given template.
            </summary>
            <param name="status">Template to copy data from</param>
        </member>
        <member name="M:CMS.Ecommerce.InternalStatusInfo.#ctor">
            <summary>
            Constructor - Creates an empty InternalStatusInfo object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.InternalStatusInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new InternalStatusInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.InternalStatusInfo.CheckPermissions(CMS.SettingsProvider.PermissionsEnum,System.String,CMS.SettingsProvider.IUserInfo)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
        </member>
        <member name="P:CMS.Ecommerce.InternalStatusInfo.InternalStatusEnabled">
            <summary>
            Indicates whether the status is enabled or not.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.InternalStatusInfo.InternalStatusID">
            <summary>
            ID of the status.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.InternalStatusInfo.InternalStatusName">
            <summary>
            Code name of the status.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.InternalStatusInfo.InternalStatusDisplayName">
            <summary>
            Display name of the status.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.InternalStatusInfo.InternalStatusGUID">
            <summary>
            InternalStatus GUID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.InternalStatusInfo.InternalStatusLastModified">
            <summary>
            Object last modified.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.InternalStatusInfo.InternalStatusSiteID">
            <summary>
            Internal status site ID. Set to 0 for global internal status.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.InternalStatusInfoProvider">
            <summary>
            Class providing InternalStatusInfo management.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.InternalStatusInfoProvider.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.InternalStatusInfoProvider.GetInternalStatuses(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all internal statuses matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.Ecommerce.InternalStatusInfoProvider.GetInternalStatuses(System.String,System.String)">
            <summary>
            Returns dataset of all internal statuses matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
        </member>
        <member name="M:CMS.Ecommerce.InternalStatusInfoProvider.GetInternalStatusInfo(System.Int32)">
            <summary>
            Returns internal status with specified ID.
            </summary>
            <param name="statusId">Internal status ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.InternalStatusInfoProvider.GetInternalStatusInfo(System.String,System.String)">
            <summary>
            Returns internal status with specified name.
            </summary>
            <param name="statusName">Internal status name</param>                
            <param name="siteName">Site name</param>                
        </member>
        <member name="M:CMS.Ecommerce.InternalStatusInfoProvider.SetInternalStatusInfo(CMS.Ecommerce.InternalStatusInfo)">
            <summary>
            Sets (updates or inserts) specified internal status.
            </summary>
            <param name="statusObj">Internal status to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.InternalStatusInfoProvider.DeleteInternalStatusInfo(CMS.Ecommerce.InternalStatusInfo)">
            <summary>
            Deletes specified internal status.
            </summary>
            <param name="statusObj">Internal status to be deleted</param>
        </member>
        <member name="M:CMS.Ecommerce.InternalStatusInfoProvider.DeleteInternalStatusInfo(System.Int32)">
            <summary>
            Deletes internal status with specified ID.
            </summary>
            <param name="statusId">Internal status ID</param>
        </member>
        <member name="M:CMS.Ecommerce.InternalStatusInfoProvider.Clear(System.Boolean)">
            <summary>
            Clears hashtables.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.Ecommerce.InternalStatusInfoProvider.GetInternalStatuses(System.String,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Returns dataset of all internal statuses for specified site matching the specified parameters.
            </summary>       
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
            <param name="siteId">Site ID</param>            
        </member>
        <member name="M:CMS.Ecommerce.InternalStatusInfoProvider.GetInternalStatuses(System.Int32,System.Boolean)">
            <summary>
            Returns dataset of all internal statuses for specified site.
            </summary>
            <param name="siteId">Site ID</param> 
            <param name="onlyEnabled">True - only enable internal statuses are returned.
            False - both enabled and disabled internal statuses are returned.</param>
        </member>
        <member name="M:CMS.Ecommerce.InternalStatusInfoProvider.CopyFromGlobal(System.Int32)">
            <summary>
            Copies global internal statuses to the specified site.
            </summary>
            <param name="siteId">ID of the target site</param>
        </member>
        <member name="M:CMS.Ecommerce.InternalStatusInfoProvider.CheckDependencies(System.Int32)">
            <summary>
            Checks dependencies, returns true if dependent.
            </summary>
            <param name="statusId">Internal status ID</param>
        </member>
        <member name="M:CMS.Ecommerce.InternalStatusInfoProvider.GetInternalStatusesInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all internal statuses matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.Ecommerce.InternalStatusInfoProvider.GetInternalStatusInfoInternal(System.Int32)">
            <summary>
            Returns internal status with specified ID.
            </summary>
            <param name="statusId">Internal status ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.InternalStatusInfoProvider.GetInternalStatusInfoInternal(System.String,System.String)">
            <summary>
            Returns internal status with specified name.
            </summary>
            <param name="statusName">Internal status name</param>                
            <param name="siteName">Site name</param>         
        </member>
        <member name="M:CMS.Ecommerce.InternalStatusInfoProvider.SetInternalStatusInfoInternal(CMS.Ecommerce.InternalStatusInfo)">
            <summary>
            Sets (updates or inserts) specified internal status.
            </summary>
            <param name="statusObj">Internal status to be set</param>        
        </member>
        <member name="M:CMS.Ecommerce.InternalStatusInfoProvider.DeleteInternalStatusInfoInternal(CMS.Ecommerce.InternalStatusInfo)">
            <summary>
            Deletes specified internal status.
            </summary>
            <param name="statusObj">Internal status to be deleted</param>        
        </member>
        <member name="M:CMS.Ecommerce.InternalStatusInfoProvider.GetInternalStatusesInternal(System.String,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Returns dataset of all internal statuses for specified site matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
            <param name="siteId">Site ID</param> 
        </member>
        <member name="M:CMS.Ecommerce.InternalStatusInfoProvider.GetInternalStatusesInternal(System.Int32,System.Boolean)">
            <summary>
            Returns dataset of all internal statuses for specified site.
            </summary>
            <param name="siteId">Site ID</param> 
            <param name="onlyEnabled">True - only enable internal statuses are returned.
            False - both enabled and disabled internal statuses are returned.</param>
        </member>
        <member name="M:CMS.Ecommerce.InternalStatusInfoProvider.CopyFromGlobalInternal(System.Int32)">
            <summary>
            Copies site-specific status options from global status list.
            </summary>
            <param name="siteId">Id of the site for which new statuses are to be created</param>
        </member>
        <member name="M:CMS.Ecommerce.InternalStatusInfoProvider.DeleteOrDisableStatus(CMS.Ecommerce.InternalStatusInfo)">
            <summary>
            Attempts to delete status. Disables status if something depends on this status.
            </summary>
            <param name="status">Status to be deleted or disabled</param>
        </member>
        <member name="T:CMS.Ecommerce.ManufacturerInfo">
            <summary>
            ManufacturerInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ManufacturerInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ManufacturerInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ManufacturerInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ManufacturerInfo.#ctor">
            <summary>
            Constructor - Creates an empty ManufacturerInfo object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ManufacturerInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new ManufacturerInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ManufacturerInfo.CheckPermissions(CMS.SettingsProvider.PermissionsEnum,System.String,CMS.SettingsProvider.IUserInfo)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
        </member>
        <member name="P:CMS.Ecommerce.ManufacturerInfo.ManufacturerEnabled">
            <summary>
            Manufacturer enabled.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ManufacturerInfo.ManufacturerID">
            <summary>
            Manufacturer ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ManufacturerInfo.ManufacturerDisplayName">
            <summary>
            Manufacturer display name.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ManufacturerInfo.ManufactureHomepage">
            <summary>
            Manufacture homepage.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ManufacturerInfo.ManufacturerGUID">
            <summary>
            Manufacturer GUID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ManufacturerInfo.ManufacturerLastModified">
            <summary>
            Object last modified.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ManufacturerInfo.ManufacturerSiteID">
            <summary>
            Manufacturer site ID. Set to 0 for global manufacturer.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.ManufacturerInfoProvider">
            <summary>
            Class providing ManufacturerInfo management.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ManufacturerInfoProvider.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ManufacturerInfoProvider.GetManufacturers(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all manufacturers matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.Ecommerce.ManufacturerInfoProvider.GetManufacturers(System.String,System.String)">
            <summary>
            Returns dataset of all manufacturers matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
        </member>
        <member name="M:CMS.Ecommerce.ManufacturerInfoProvider.GetManufacturerInfo(System.Int32)">
            <summary>
            Returns manufacturer with specified ID.
            </summary>
            <param name="manufacturerId">Manufacturer ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.ManufacturerInfoProvider.SetManufacturerInfo(CMS.Ecommerce.ManufacturerInfo)">
            <summary>
            Sets (updates or inserts) specified manufacturer.
            </summary>
            <param name="manufacturerObj">Manufacturer to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.ManufacturerInfoProvider.DeleteManufacturerInfo(CMS.Ecommerce.ManufacturerInfo)">
            <summary>
            Deletes specified manufacturer.
            </summary>
            <param name="manufacturerObj">Manufacturer to be deleted</param>
        </member>
        <member name="M:CMS.Ecommerce.ManufacturerInfoProvider.DeleteManufacturerInfo(System.Int32)">
            <summary>
            Deletes manufacturer with specified ID.
            </summary>
            <param name="manufacturerId">Manufacturer ID</param>
        </member>
        <member name="M:CMS.Ecommerce.ManufacturerInfoProvider.Clear(System.Boolean)">
            <summary>
            Clears hashtables.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.Ecommerce.ManufacturerInfoProvider.GetManufacturers(System.String,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Returns dataset of all manufacturers for specified site matching the specified parameters.
            </summary>       
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
            <param name="siteId">Site ID</param>            
        </member>
        <member name="M:CMS.Ecommerce.ManufacturerInfoProvider.GetManufacturers(System.Int32,System.Boolean)">
            <summary>
            Returns dataset of all manufacturers for specified site.
            </summary>
            <param name="siteId">Site ID</param>   
            <param name="onlyEnabled">True - only enable manufacturers are returned.
            False - both enabled and disabled manufacturers are returned.</param>
        </member>
        <member name="M:CMS.Ecommerce.ManufacturerInfoProvider.GetManufacturerInfo(System.String,System.String)">
            <summary>
            Returns manufacturer with specified display name.
            </summary>
            <param name="manufacturerName">Manufacturer display name</param>        
            <param name="siteName">Manufacturer site name</param>        
        </member>
        <member name="M:CMS.Ecommerce.ManufacturerInfoProvider.CheckDependencies(System.Int32)">
            <summary>
            Checks dependencies, returns true if dependent.
            </summary>
            <param name="manufacturerId">Manufacturer ID</param>
        </member>
        <member name="M:CMS.Ecommerce.ManufacturerInfoProvider.IsUserAuthorizedToModifyManufacturer(CMS.Ecommerce.ManufacturerInfo,System.String,CMS.SiteProvider.UserInfo)">
            <summary>
            Indicates if user is authorized to modify specific manufacturer. 
            For global manufacturer: 'EcommerceGlobalModify' permission is checked. 
            For site-specific manufacturer: 'EcommerceModify' OR 'ModifyManufacturers' permission is checked.
            </summary>
            <param name="manufacturer">Manufacturer to be checked</param>        
            <param name="siteName">Site name</param>
            <param name="user">User to be checked</param>
        </member>
        <member name="M:CMS.Ecommerce.ManufacturerInfoProvider.IsUserAuthorizedToModifyManufacturer(System.Boolean,System.String,CMS.SiteProvider.UserInfo)">
            <summary>
            Indicates if user is authorized to modify manufacturers.
            </summary>
            <param name="global">For global manufacturers (global = True): 'EcommerceGlobalModify' permission is checked. 
            For site-specific manufacturers (global = False): 'EcommerceModify' OR 'ModifyManufacturers' permission is checked.</param>        
            <param name="siteName">Site name</param>
            <param name="user">User to be checked</param>
        </member>
        <member name="M:CMS.Ecommerce.ManufacturerInfoProvider.GetManufacturersInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all manufacturers matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.Ecommerce.ManufacturerInfoProvider.GetManufacturerInfoInternal(System.Int32)">
            <summary>
            Returns manufacturer with specified ID.
            </summary>
            <param name="manufacturerId">Manufacturer ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.ManufacturerInfoProvider.SetManufacturerInfoInternal(CMS.Ecommerce.ManufacturerInfo)">
            <summary>
            Sets (updates or inserts) specified manufacturer.
            </summary>
            <param name="manufacturerObj">Manufacturer to be set</param>        
        </member>
        <member name="M:CMS.Ecommerce.ManufacturerInfoProvider.DeleteManufacturerInfoInternal(CMS.Ecommerce.ManufacturerInfo)">
            <summary>
            Deletes specified manufacturer.
            </summary>
            <param name="manufacturerObj">Manufacturer to be deleted</param>        
        </member>
        <member name="M:CMS.Ecommerce.ManufacturerInfoProvider.GetManufacturersInternal(System.String,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Returns dataset of all manufacturers for specified site matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
            <param name="siteId">Site ID</param> 
        </member>
        <member name="M:CMS.Ecommerce.ManufacturerInfoProvider.GetManufacturersInternal(System.Int32,System.Boolean)">
            <summary>
            Returns dataset of all manufacturers for specified site.
            </summary>
            <param name="siteId">Site ID</param>   
            <param name="onlyEnabled">True - only enable manufacturers are returned.
            False - both enabled and disabled manufacturers are returned.</param>
        </member>
        <member name="M:CMS.Ecommerce.ManufacturerInfoProvider.GetManufacturerInfoInternal(System.String,System.String)">
            <summary>
            Returns manufacturer with specified display name.
            </summary>
            <param name="manufacturerName">Manufacturer display name</param>        
            <param name="siteName">Manufacturer site name</param>        
        </member>
        <member name="T:CMS.Ecommerce.OptionCategoryInfo">
            <summary>
            OptionCategoryInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.OptionCategoryInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OptionCategoryInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OptionCategoryInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OptionCategoryInfo.GetChildObject(System.String)">
            <summary>
            Gets child object info
            </summary>
            <param name="objectType">Child object type</param>
        </member>
        <member name="M:CMS.Ecommerce.OptionCategoryInfo.#ctor(CMS.Ecommerce.OptionCategoryInfo,System.Boolean)">
            <summary>
            Constructor - Creates a new OptionCategoryInfo object from the given DataClass.
            </summary>
            <param name="oci">Source category info</param>
            <param name="keepSourceData">If true, source data are kept in the object</param>
        </member>
        <member name="M:CMS.Ecommerce.OptionCategoryInfo.#ctor">
            <summary>
            Constructor - Creates an empty OptionCategoryInfo object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OptionCategoryInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new OptionCategoryInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OptionCategoryInfo.CheckPermissions(CMS.SettingsProvider.PermissionsEnum,System.String,CMS.SettingsProvider.IUserInfo)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
        </member>
        <member name="P:CMS.Ecommerce.OptionCategoryInfo.CategoryDisplayName">
            <summary>
            Category Display Name (simple text or localizable string).
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OptionCategoryInfo.CategoryName">
            <summary>
            Category Code Name.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OptionCategoryInfo.CategoryID">
            <summary>
            Category ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OptionCategoryInfo.CategorySiteID">
            <summary>
            Category site ID. Set to 0 for global category.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OptionCategoryInfo.CategoryIsGlobal">
            <summary>        
            Indicates if category is global or site-specific.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OptionCategoryInfo.CategorySelectionType">
            <summary>
            Category Selection Type.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OptionCategoryInfo.CategoryDefaultOptions">
            <summary>
            Category default options.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OptionCategoryInfo.CategoryDescription">
            <summary>
            Category description (simple text or localizable string).
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OptionCategoryInfo.CategoryDefaultRecord">
            <summary>
            Default record text (simple text or localizable string).
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OptionCategoryInfo.CategoryEnabled">
            <summary>
            Indicates whether option category is enabled.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OptionCategoryInfo.CategoryGUID">
            <summary>
            CategoryOption GUID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OptionCategoryInfo.CategoryLastModified">
            <summary>
            Object last modified.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OptionCategoryInfo.CategoryDisplayPrice">
            <summary>
            Indicates whether the option price should be displayed with option.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OptionCategoryInfo.CategoryTextMaxLength">
            <summary>
            Maximum length of the text product option text. It has no effect, if the category has no text product option.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.OptionCategoryInfoProvider">
            <summary>
            Class providing OptionCategoryInfo management.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OptionCategoryInfoProvider.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OptionCategoryInfoProvider.GetOptionCategories(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all option categories matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.Ecommerce.OptionCategoryInfoProvider.GetOptionCategories(System.String,System.String)">
            <summary>
            Returns dataset of all option categories matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
        </member>
        <member name="M:CMS.Ecommerce.OptionCategoryInfoProvider.GetOptionCategoryInfo(System.Int32)">
            <summary>
            Returns option category with specified ID.
            </summary>
            <param name="categoryId">Option category ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.OptionCategoryInfoProvider.GetOptionCategoryInfo(System.String,System.String)">
            <summary>
            Returns option category with specified name.
            </summary>
            <param name="categoryName">Option category name</param>                
            <param name="siteName">Site name</param>                
        </member>
        <member name="M:CMS.Ecommerce.OptionCategoryInfoProvider.SetOptionCategoryInfo(CMS.Ecommerce.OptionCategoryInfo)">
            <summary>
            Sets (updates or inserts) specified option category.
            </summary>
            <param name="categoryObj">Option category to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.OptionCategoryInfoProvider.DeleteOptionCategoryInfo(CMS.Ecommerce.OptionCategoryInfo)">
            <summary>
            Deletes specified option category.
            </summary>
            <param name="categoryObj">Option category to be deleted</param>
        </member>
        <member name="M:CMS.Ecommerce.OptionCategoryInfoProvider.DeleteOptionCategoryInfo(System.Int32)">
            <summary>
            Deletes option category with specified ID.
            </summary>
            <param name="categoryId">Option category ID</param>
        </member>
        <member name="M:CMS.Ecommerce.OptionCategoryInfoProvider.Clear(System.Boolean)">
            <summary>
            Clears hashtables.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.Ecommerce.OptionCategoryInfoProvider.GetOptionCategories(System.String,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Returns dataset of all option categories for specified site matching the specified parameters.
            </summary>       
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
            <param name="siteId">Site ID</param>            
        </member>
        <member name="M:CMS.Ecommerce.OptionCategoryInfoProvider.GetOptionCategories(System.Int32)">
            <summary>
            Returns dataset of all option categories for specified site.
            </summary>
            <param name="siteId">Site ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.OptionCategoryInfoProvider.GetSKUOptionCategories(System.Int32,System.Boolean)">
            <summary>
            Returns DataSet with all option categories which are assigned to the specified SKU.
            </summary>
            <param name="skuId">SKU ID</param>
            <param name="onlyEnabled">True - only enabled option categories are included, False - all option categories are included</param>
        </member>
        <member name="M:CMS.Ecommerce.OptionCategoryInfoProvider.CheckDependencies(System.Int32)">
            <summary>
            Checks option category dependencies. Returns TRUE if category is depended, otherwise returns FALSE.
            </summary>
            <param name="categoryId">Option category ID</param>
        </member>
        <member name="M:CMS.Ecommerce.OptionCategoryInfoProvider.IsUserAuthorizedToModifyOptionCategory(CMS.Ecommerce.OptionCategoryInfo,System.String,CMS.SiteProvider.UserInfo)">
            <summary>
            Indicates if user is authorized to modify specific option category. 
            For global option category: 'EcommerceGlobalModify' permission is checked. 
            For site-specific manufacturer: 'EcommerceModify' OR 'ModifyProducts' permission is checked.
            </summary>
            <param name="categoryObj">Option category to be checked</param>        
            <param name="siteName">Site name</param>
            <param name="user">User to be checked</param>
        </member>
        <member name="M:CMS.Ecommerce.OptionCategoryInfoProvider.IsUserAuthorizedToModifyOptionCategory(System.Boolean,System.String,CMS.SiteProvider.UserInfo)">
            <summary>
            Indicates if user is authorized to modify option categories.
            </summary>
            <param name="global">For global option categories (global = True): 'EcommerceGlobalModify' permission is checked. 
            For site-specific option categories (global = False): 'EcommerceModify' OR 'ModifyProducts' permission is checked.</param>        
            <param name="siteName">Site name</param>
            <param name="user">User to be checked</param>
        </member>
        <member name="M:CMS.Ecommerce.OptionCategoryInfoProvider.GetOptionCategoriesInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all option categories matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.Ecommerce.OptionCategoryInfoProvider.GetOptionCategoryInfoInternal(System.Int32)">
            <summary>
            Returns option category with specified ID.
            </summary>
            <param name="categoryId">Option category ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.OptionCategoryInfoProvider.GetOptionCategoryInfoInternal(System.String,System.String)">
            <summary>
            Returns option category with specified name.
            </summary>
            <param name="categoryName">Option category name</param>                
            <param name="siteName">Site name</param>         
        </member>
        <member name="M:CMS.Ecommerce.OptionCategoryInfoProvider.SetOptionCategoryInfoInternal(CMS.Ecommerce.OptionCategoryInfo)">
            <summary>
            Sets (updates or inserts) specified option category.
            </summary>
            <param name="categoryObj">Option category to be set</param>        
        </member>
        <member name="M:CMS.Ecommerce.OptionCategoryInfoProvider.DeleteOptionCategoryInfoInternal(CMS.Ecommerce.OptionCategoryInfo)">
            <summary>
            Deletes specified option category.
            </summary>
            <param name="categoryObj">Option category to be deleted</param>        
        </member>
        <member name="M:CMS.Ecommerce.OptionCategoryInfoProvider.GetOptionCategoriesInternal(System.String,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Returns dataset of all option categories for specified site matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.Ecommerce.OptionCategoryInfoProvider.GetSKUOptionCategoriesInternal(System.Int32,System.Boolean)">
            <summary>
            Returns DataSet with all option categories which are assigned to the specified SKU.
            </summary>
            <param name="skuId">SKU ID</param>
            <param name="onlyEnabled">True - only enabled option categories are included, False - all option categories are included</param>
        </member>
        <member name="M:CMS.Ecommerce.OptionCategoryInfoProvider.CheckObjectDependencies(System.Int32)">
            <summary>
            Checks option category dependencies. Returns TRUE if category is depended, otherwise returns FALSE.
            </summary>
            <param name="categoryId">Option category ID</param>
        </member>
        <member name="T:CMS.Ecommerce.OptionCategorySelectionTypeEnum">
            <summary>
            Type of control to select product options.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.OptionCategorySelectionTypeEnum.Dropdownlist">
            <summary>
            DropDownList.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.OptionCategorySelectionTypeEnum.RadioButtonsVertical">
            <summary>
            RadioButtons in vertical layout.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.OptionCategorySelectionTypeEnum.RadioButtonsHorizontal">
            <summary>
            RadioButtons in horizontal layout.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.OptionCategorySelectionTypeEnum.CheckBoxesVertical">
            <summary>
            Checkboxes in vertical layout.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.OptionCategorySelectionTypeEnum.CheckBoxesHorizontal">
            <summary>
            Checkboxes in horizontal layout.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.OptionCategorySelectionTypeEnum.TextBox">
            <summary>
            Text box.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.OptionCategorySelectionTypeEnum.TextArea">
            <summary>
            Text area.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.OrderInfo">
            <summary>
            OrderInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.OrderInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.OrderInfo.mOrderCustomData">
            <summary>
            Order custom data.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.OrderInfo.mOrderPaymentResult">
            <summary>
            Payment result.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfo.#ctor">
            <summary>
            Constructor - Creates an empty OrderInfo object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new OrderInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor - Creates a new OrderInfo object from serialized data.
            </summary>        
            <param name="info">Serialization data</param>
            <param name="context">Context</param> 
        </member>
        <member name="M:CMS.Ecommerce.OrderInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets object data.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfo.CheckPermissions(CMS.SettingsProvider.PermissionsEnum,System.String,CMS.SettingsProvider.IUserInfo)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
        </member>
        <member name="P:CMS.Ecommerce.OrderInfo.OrderID">
            <summary>
            Order ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderInfo.OrderPaymentOptionID">
            <summary>
            Order payment option ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderInfo.OrderSiteID">
            <summary>
            Order site ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderInfo.OrderTotalTax">
            <summary>
            Order total tax.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderInfo.OrderShippingAddressID">
            <summary>
            Order shipping address ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderInfo.OrderInvoiceNumber">
            <summary>
            Order invoice number.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderInfo.OrderCurrencyID">
            <summary>
            Order currency ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderInfo.OrderShippingOptionID">
            <summary>
            Order shipping option ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderInfo.OrderInvoice">
            <summary>
            Order invoice.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderInfo.OrderNote">
            <summary>
            Order note.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderInfo.OrderCompletedByUserID">
            <summary>
            Order created by user ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderInfo.OrderBillingAddressID">
            <summary>
            Order billing address ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderInfo.OrderCountryID">
            <summary>
            Country ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderInfo.OrderCustomerID">
            <summary>
            Order customer ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderInfo.OrderStatusID">
            <summary>
            Order status ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderInfo.OrderTotalPrice">
            <summary>
            Order total price.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderInfo.OrderTotalPriceInMainCurrency">
            <summary>
            Order total price in main currency.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderInfo.OrderTotalShipping">
            <summary>
            Order total shipping.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderInfo.OrderDate">
            <summary>
            Order date.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderInfo.OrderPaymentResult">
            <summary>
            Order payment result.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderInfo.OrderDiscountCouponID">
            <summary>
            Order discount coupon ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderInfo.OrderCompanyAddressID">
            <summary>
            Order company address ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderInfo.OrderTrackingNumber">
            <summary>
            Order tracking number.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderInfo.OrderCustomData">
            <summary>
            Order custom data.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderInfo.OrderGUID">
            <summary>
            Order GUID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderInfo.OrderLastModified">
            <summary>
            Object last modified.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderInfo.OrderIsPaid">
            <summary>
            Order is paid.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderInfo.OrderCulture">
            <summary>
            Culture of the order.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.OrderInfoProvider">
            <summary>
            Class providing OrderInfo management.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.GetOrders(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all orders matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.GetOrders(System.String,System.String)">
            <summary>
            Returns dataset of all orders matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.GetOrderInfo(System.Int32)">
            <summary>
            Returns order with specified ID.
            </summary>
            <param name="orderId">Order ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.SetOrderInfo(CMS.Ecommerce.OrderInfo)">
            <summary>
            Sets (updates or inserts) specified order.
            </summary>
            <param name="orderObj">Order to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.DeleteOrderInfo(CMS.Ecommerce.OrderInfo)">
            <summary>
            Deletes specified order.
            </summary>
            <param name="orderObj">Order to be deleted</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.DeleteOrderInfo(System.Int32)">
            <summary>
            Deletes order with specified ID.
            </summary>
            <param name="orderId">Order ID</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.Clear(System.Boolean)">
            <summary>
            Clears hashtables.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.GetOrders(System.String,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Returns dataset of all orders for specified site matching the specified parameters.
            </summary>       
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
            <param name="siteId">Site ID</param>            
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.GetOrders(System.Int32)">
            <summary>
            Returns dataset of all orders for specified site.
            </summary>
            <param name="siteId">Site ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.GetOrderList(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns the order list joined with order status, and the customer data.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.GetOrderList(System.String,System.String)">
            <summary>
            Returns the order list joined with order status, and the customer data.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.GetInvoice(System.Int32)">
            <summary>
            Returns html code that represents invoice of order specified by ID.
            </summary>
            <param name="orderId">Order ID</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.GetAddress(System.Int32)">
            <summary>
            Returns html code that represents address. Used for generating of invoice.
            </summary>
            <param name="addressId">Address ID</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.GetPaymentOption(System.Int32)">
            <summary>
            Returns html code that represents payment option. Used for generating of invoice.
            </summary>
            <param name="paymentId">Payment option ID</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.GetShippingOption(System.Int32)">
            <summary>
            Returns html code that represents shipping option. Used for generating of invoice.
            </summary>
            <param name="shippingId">Shipping option ID</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.GetInvoiceNumber(CMS.Ecommerce.OrderInfo)">
            <summary>
            Returns html code that represents invoice number. Used for generating of invoice.
            </summary>
            <param name="order">Order data</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.GetOrderDate(CMS.Ecommerce.OrderInfo)">
            <summary>
            Returns html code that represents date of order. Used for generating of invoice.
            </summary>
            <param name="order">Order data</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.GetOrderNote(CMS.Ecommerce.OrderInfo)">
            <summary>
            Returns html code that represents note of order. Used for generating of invoice.
            </summary>
            <param name="order">Order data</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.GetProductList(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Returns html code that represents product list. Used for generating of invoice.
            </summary>
            <param name="cart">Shopping cart data</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.GetTotalPrice(System.Double,CMS.Ecommerce.CurrencyInfo)">
            <summary>
            Returns html code that represents total price of order. Used for generating of invoice.
            </summary>
            <param name="value">Price value</param>
            <param name="currency">Currency to use</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.GetTaxRecapitulation(System.Data.DataTable,CMS.Ecommerce.CurrencyInfo)">
            <summary>
            Returns html code that represents info about used taxes. Used for generating of invoice.
            </summary>
            <param name="dt">Table with the tax summary</param>
            <param name="currency">Currency data</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.GetTaxRegistrationID(CMS.Ecommerce.CustomerInfo)">
            <summary>
            Returns html code that represents info about customer taxregistrationID. Used for generating of invoice.
            </summary>
            <param name="customerObj">Customer data</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.GetOrganizationID(CMS.Ecommerce.CustomerInfo)">
            <summary>
            Returns html code that represents info about customer taxregistrationID. Used for generating of invoice.
            </summary>
            <param name="customerObj">Customer data</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.GetTotalShipping(System.Double,CMS.Ecommerce.CurrencyInfo)">
            <summary>
            Returns html code that represents total shipping of order. Used for generating of invoice.
            </summary>
            <param name="value">Price value</param>
            <param name="currency">Currency to use</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.CreateEmailMacroResolver(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Creates the macro resolver for the given shopping cart.
            </summary>
            <param name="cartObj">Shopping data</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.SendOrderNotificationToCustomer(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Sends order notification to customer.
            </summary>
            <param name="cartObj">Shopping cart data</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.SendOrderNotificationToCustomer(CMS.Ecommerce.ShoppingCartInfo,System.String)">
            <summary>
            Sends order notification to customer.
            </summary>
            <param name="cartObj">Shopping cart data</param>
            <param name="templateName">Name of the template which is used for e-mail. If null or empty, 'Ecommerce.OrderNotificationToCustomer' template is used</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.SendOrderNotificationToAdministrator(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Sends order notification to administrator.
            </summary>
            <param name="cartObj">Shopping cart data</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.SendOrderNotificationToAdministrator(CMS.Ecommerce.ShoppingCartInfo,System.String)">
            <summary>
            Sends order notification to administrator.
            </summary>
            <param name="cartObj">Shopping cart data</param>
            <param name="templateName">Name of the template which is used for e-mail. If null or empty, 'Ecommerce.OrderNotificationToAdmin' template is used</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.SendOrderPaymentNotificationToCustomer(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Sends order payment notification to customer.
            </summary>
            <param name="cartObj">Shopping cart data</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.SendOrderPaymentNotificationToCustomer(CMS.Ecommerce.ShoppingCartInfo,System.String)">
            <summary>
            Sends order payment notification to customer.
            </summary>
            <param name="cartObj">Shopping cart data</param>
            <param name="templateName">Name of the template which is used for e-mail. If null or empty, 'Ecommerce.OrderPaymentNotificationToCustomer' template is used</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.SendOrderPaymentNotificationToAdministrator(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Sends order payment notification to administrator.
            </summary>
            <param name="cartObj">Shopping cart data</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.SendOrderPaymentNotificationToAdministrator(CMS.Ecommerce.ShoppingCartInfo,System.String)">
            <summary>
            Sends order payment notification to administrator.
            </summary>
            <param name="cartObj">Shopping cart data</param>
            <param name="templateName">Name of the template which is used for e-mail. If null or empty, 'Ecommerce.OrderPaymentNotificationToAdmin' template is used</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.SendOrderStatusNotificationToCustomer(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Sends order status notification to customer.
            </summary>
            <param name="cartObj">Shopping cart data</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.SendOrderStatusNotificationToCustomer(CMS.Ecommerce.ShoppingCartInfo,System.String)">
            <summary>
            Sends order status notification to customer.
            </summary>
            <param name="cartObj">Shopping cart data</param>
            <param name="templateName">Name of the template which is used for e-mail. If null or empty, 'Ecommerce.OrderStatusNotificationToCustomer' template is used</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.SendOrderStatusNotificationToAdministrator(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Sends order status notification to administrator.
            </summary>
            <param name="cartObj">Shopping cart data</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.SendOrderStatusNotificationToAdministrator(CMS.Ecommerce.ShoppingCartInfo,System.String)">
            <summary>
            Sends order status notification to administrator.
            </summary>
            <param name="cartObj">Shopping cart data</param>
            <param name="templateName">Name of the template which is used for e-mail. If null or empty, 'Ecommerce.OrderStatusNotificationToAdmin' template is used</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.RecalculateOrders(System.Single,System.Int32,System.String,System.Int32)">
            <summary>
            Recalculates order prices expressed in main currency using the given coefficient.
            </summary>
            <param name="coefficient">Factor by which values are recalculated</param>        
            <param name="roundTo">Number of significant digits the number should be rounded to</param>
            <param name="where">Additional WHERE condition</param>
            <param name="siteId">ID of the site which records are to be recalculated</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.GetOrdersInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all orders matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.GetOrderInfoInternal(System.Int32)">
            <summary>
            Returns order with specified ID.
            </summary>
            <param name="orderId">Order ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.SetOrderInfoInternal(CMS.Ecommerce.OrderInfo)">
            <summary>
            Sets (updates or inserts) specified order.
            </summary>
            <param name="orderObj">Order to be set</param>        
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.DeleteOrderInfoInternal(CMS.Ecommerce.OrderInfo)">
            <summary>
            Deletes specified order.
            </summary>
            <param name="orderObj">Order to be deleted</param>        
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.GetOrdersInternal(System.String,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Returns dataset of all orders for specified site matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
            <param name="siteId">Site ID</param> 
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.GetOrderListInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns the order list joined with order status, and the customer data.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.RecalculateOrdersInternal(System.Single,System.Int32,System.String,System.Int32)">
            <summary>
            Recalculates order prices expressed in main currency using the given coefficient.
            </summary>
            <param name="coefficient">Factor by which values are recalculated</param>        
            <param name="roundTo">Number of significant digits the number should be rounded to</param>
            <param name="where">Where condition</param>
            <param name="siteId">ID of the site which records are to be recalculated</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.GetInvoiceInternal(System.Int32)">
            <summary>
            Returns html code that represents invoice of order specified by ID.
            </summary>
            <param name="orderId">Order ID</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.GetAddressInternal(System.Int32)">
            <summary>
            Returns html code that represents address. Used for generating of invoice.
            </summary>
            <param name="addressId">Address ID</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.GetPaymentOptionInternal(System.Int32)">
            <summary>
            Returns html code that represents payment option. Used for generating of invoice.
            </summary>
            <param name="paymentId">Payment option ID</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.GetShippingOptionInternal(System.Int32)">
            <summary>
            Returns html code that represents shipping option. Used for generating of invoice.
            </summary>
            <param name="shippingId">Shipping option ID</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.GetInvoiceNumberInternal(CMS.Ecommerce.OrderInfo)">
            <summary>
            Returns html code that represents invoice number. Used for generating of invoice.
            </summary>
            <param name="order">Order data</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.GetOrderDateInternal(CMS.Ecommerce.OrderInfo)">
            <summary>
            Returns html code that represents date of order. Used for generating of invoice.
            </summary>
            <param name="order">Order data</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.GetOrderNoteInternal(CMS.Ecommerce.OrderInfo)">
            <summary>
            Returns html code that represents note of order. Used for generating of invoice.
            </summary>
            <param name="order">Order data</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.GetProductListInternal(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Returns html code that represents product list. Used for generating of invoice.
            </summary>
            <param name="cart">Shopping cart data</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.GetTotalPriceInternal(System.Double,CMS.Ecommerce.CurrencyInfo)">
            <summary>
            Returns html code that represents total price of order. Used for generating of invoice.
            </summary>
            <param name="value">Price value</param>
            <param name="currency">Currency to use</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.GetTaxRecapitulationInternal(System.Data.DataTable,CMS.Ecommerce.CurrencyInfo)">
            <summary>
            Returns html code that represents info about used taxes. Used for generating of invoice.
            </summary>
            <param name="dt">Table with the tax summary</param>
            <param name="currency">Currency data</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.GetTaxRegistrationIDInternal(CMS.Ecommerce.CustomerInfo)">
            <summary>
            Returns html code that represents info about customer taxregistrationID. Used for generating of invoice.
            </summary>
            <param name="customerObj">Customer data</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.GetOrganizationIDInternal(CMS.Ecommerce.CustomerInfo)">
            <summary>
            Returns html code that represents info about customer taxregistrationID. Used for generating of invoice.
            </summary>
            <param name="customerObj">Customer data</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.GetTotalShippingInternal(System.Double,CMS.Ecommerce.CurrencyInfo)">
            <summary>
            Returns html code that represents total shipping of order. Used for generating of invoice.
            </summary>
            <param name="value">Price value</param>
            <param name="currency">Currency to use</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.CreateEmailMacroResolverInternal(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Creates the macro resolver for the given shopping cart.
            </summary>
            <param name="cartObj">Shopping data</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.SendOrderNotificationToCustomerInternal(CMS.Ecommerce.ShoppingCartInfo,System.String)">
            <summary>
            Sends order notification to customer.
            </summary>
            <param name="cartObj">Shopping cart data</param>
            <param name="templateName">Name of the template which is used for e-mail. If null or empty, 'Ecommerce.OrderNotificationToCustomer' template is used</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.SendOrderNotificationToAdministratorInternal(CMS.Ecommerce.ShoppingCartInfo,System.String)">
            <summary>
            Sends order notification to administrator.
            </summary>
            <param name="cartObj">Shopping cart data</param>
            <param name="templateName">Name of the template which is used for e-mail. If null or empty, 'Ecommerce.OrderNotificationToAdmin' template is used</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.SendOrderPaymentNotificationToCustomerInternal(CMS.Ecommerce.ShoppingCartInfo,System.String)">
            <summary>
            Sends order payment notification to customer.
            </summary>
            <param name="cartObj">Shopping cart data</param>
            <param name="templateName">Name of the template which is used for e-mail. If null or empty, 'Ecommerce.OrderPaymentNotificationToCustomer' template is used</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.SendOrderPaymentNotificationToAdministratorInternal(CMS.Ecommerce.ShoppingCartInfo,System.String)">
            <summary>
            Sends order payment notification to administrator.
            </summary>
            <param name="cartObj">Shopping cart data</param>
            <param name="templateName">Name of the template which is used for e-mail. If null or empty, 'Ecommerce.OrderPaymentNotificationToAdmin' template is used</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.SendOrderStatusNotificationToCustomerInternal(CMS.Ecommerce.ShoppingCartInfo,System.String)">
            <summary>
            Sends order status notification to customer.
            </summary>
            <param name="cartObj">Shopping cart data</param>
            <param name="templateName">Name of the template which is used for e-mail. If null or empty, 'Ecommerce.OrderStatusNotificationToCustomer' template is used</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.SendOrderStatusNotificationToAdministratorInternal(CMS.Ecommerce.ShoppingCartInfo,System.String)">
            <summary>
            Sends order status notification to administrator.
            </summary>
            <param name="cartObj">Shopping cart data</param>
            <param name="templateName">Name of the template which is used for e-mail. If null or empty, 'Ecommerce.OrderStatusNotificationToAdmin' template is used</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.UpdateOrderStatusHistory(CMS.Ecommerce.OrderInfo,System.Int32,System.Boolean)">
            <summary>
            Updates order status history and sends notification emails about order status change.
            </summary>
            <param name="orderObj">Order data</param>
            <param name="originalStatusId">ID of the status before change. Don't care if newOrder == true</param>
            <param name="newOrder">True - it is a new order, False - it is an existing order</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.SendEmailNotification(CMS.Ecommerce.ShoppingCartInfo,System.String,System.String,System.String,System.Boolean,System.String)">
            <summary>
            Sends order notification to customer.
            </summary>
            <param name="cartObj">Shopping cart info object</param>
            <param name="templateName">Name of the e-mail template which should be used for creating an e-mail</param>
            <param name="defaultTemplate">Name of the e-mail template which is used if primary template is not specified</param>
            <param name="defaultSubject">E-mail default subject. It is used if template subject is not specified</param>
            <param name="toCustomer">True - it is a notification to customer. False - it is a notification to administrator</param>
            <param name="eventSource">Source of the event which is logged when sending fails</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.ProcessOrderIsPaidChange(CMS.Ecommerce.OrderInfo)">
            <summary>
            Process order items of given order according to order is paid change.
            </summary>
            <param name="oi">Order</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.ProcessMembership(CMS.Ecommerce.OrderInfo,CMS.Ecommerce.OrderItemInfo,CMS.Ecommerce.SKUInfo,CMS.SiteProvider.UserInfo,System.DateTime)">
            <summary>
            Process user's membership according to given parameters.
            </summary>
            <param name="oi">Order</param>
            <param name="oii">Order item</param>
            <param name="skui">SKU</param>
            <param name="ui">User</param>
            <param name="now">Date and time to use as current date and time value</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.ProcessEProduct(CMS.Ecommerce.OrderInfo,CMS.Ecommerce.OrderItemInfo,CMS.Ecommerce.SKUInfo,System.DateTime)">
            <summary>
            Process e-product according to given parameters.
            </summary>
            <param name="oi">Order</param>
            <param name="oii">Order item</param>
            <param name="skui">SKU</param>
            <param name="now">Date and time to use as current date and time value</param>
        </member>
        <member name="P:CMS.Ecommerce.OrderInfoProvider.EventLogProvider">
            <summary>
            Gets event log provider instance.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.OrderItemInfo">
            <summary>
            OrderItemInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.OrderItemInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.OrderItemInfo.mOrderItemCustomData">
            <summary>
            Order item custom data.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OrderItemInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OrderItemInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OrderItemInfo.#ctor">
            <summary>
            Constructor - Creates an empty OrderItemInfo object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OrderItemInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new OrderItemInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OrderItemInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor - Creates a new OrderItemInfo object from serialized data.
            </summary>        
            <param name="info">Serialization data</param>
            <param name="context">Context</param> 
        </member>
        <member name="M:CMS.Ecommerce.OrderItemInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets object data.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OrderItemInfo.CheckPermissions(CMS.SettingsProvider.PermissionsEnum,System.String,CMS.SettingsProvider.IUserInfo)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
        </member>
        <member name="P:CMS.Ecommerce.OrderItemInfo.OrderItemUnitPrice">
            <summary>
            Price of the item per unit, corresponds to the price of the related SKU.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderItemInfo.OrderItemPrice">
            <summary>
            If set, it is used instead of the OrderItemUnitPrice in price calculation process. 
            It is set only when order item represents donation. Then it is amount of donation. 
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderItemInfo.OrderItemTotalPriceInMainCurrency">
            <summary>
            Total order item price in main currency.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderItemInfo.OrderItemOrderID">
            <summary>
            ID of the order.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderItemInfo.OrderItemID">
            <summary>
            ID of the order item.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderItemInfo.OrderItemSKUName">
            <summary>
            Name of the order item.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderItemInfo.OrderItemSKUID">
            <summary>
            ID of the SKU for this order item.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderItemInfo.OrderItemUnitCount">
            <summary>
            Number of units within the order.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderItemInfo.OrderItemGUID">
            <summary>
            Order item unique identifier. Order item means collection of the product and its selected product options.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderItemInfo.OrderItemParentGUID">
            <summary>
            Unique identifier of the parent order item. When set current product is a product option, otherwise it is a product.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderItemInfo.OrderItemBundleGUID">
            <summary>
            Unique identifier of parent bundle product. If set, this product is a bundle item.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderItemInfo.OrderItemCustomData">
            <summary>
            Order item custom data.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderItemInfo.OrderItemLastModified">
            <summary>
            Object last modified.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderItemInfo.OrderItemIsPrivate">
            <summary>
            Order item is private.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderItemInfo.OrderItemValidTo">
            <summary>
            Order item valid to date and time.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderItemInfo.OrderItemSendNotification">
            <summary>
            Indicates if customer is to be notified in advance about expiration of his order item.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderItemInfo.OrderItemSKU">
            <summary>
            Associated SKU object.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderItemInfo.OrderItemText">
            <summary>
            Text assigned to the order item.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.OrderItemInfoProvider">
            <summary>
            Class providing OrderItemInfo management.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OrderItemInfoProvider.GetOrderItems(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all order items matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderItemInfoProvider.GetOrderItems(System.String,System.String)">
            <summary>
            Returns dataset of all order items matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderItemInfoProvider.GetOrderItemInfo(System.Int32)">
            <summary>
            Returns order item with specified ID.
            </summary>
            <param name="itemId">Order item ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.OrderItemInfoProvider.SetOrderItemInfo(CMS.Ecommerce.OrderItemInfo)">
            <summary>
            Sets (updates or inserts) specified order item.
            </summary>
            <param name="itemObj">Order item to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderItemInfoProvider.DeleteOrderItemInfo(CMS.Ecommerce.OrderItemInfo)">
            <summary>
            Deletes specified order item.
            </summary>
            <param name="itemObj">Order item to be deleted</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderItemInfoProvider.DeleteOrderItemInfo(System.Int32)">
            <summary>
            Deletes order item with specified ID.
            </summary>
            <param name="itemId">Order item ID</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderItemInfoProvider.GetOrderItemInfo(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Returns order item created form shopping cart item data.
            </summary>
            <param name="item">Shopping cart item.</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderItemInfoProvider.GetOrderItems(System.Int32)">
            <summary>
            Returns dataset of all order items for specified order.
            </summary>
            <param name="orderId">Order ID</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderItemInfoProvider.GetExpiringOrderItems(System.Int32,System.Int32,System.String)">
            <summary>
            Returns dataset of all expiring order items matching given parameters along with additional relevant information.
            </summary>
            <param name="days">Number of days before order item expiration</param>
            <param name="siteId">Site ID. Set to 0 to get expiring order items on all sites.</param>
            <param name="where">Additional where condition</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderItemInfoProvider.GetExpiringOrderItems(System.Int32,System.Int32,System.String,System.Boolean)">
            <summary>
            Returns dataset of all expiring order items matching given parameters along with additional relevant information.
            </summary>
            <param name="days">Number of days before order item expiration</param>
            <param name="siteId">Site ID. Set to 0 to get expiring order items on all sites.</param>
            <param name="where">Additional where condition</param>
            <param name="onlyWithSendNotification">Get only records with send notification flag set to true.</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderItemInfoProvider.GetDonations(System.String,System.String)">
            <summary>
            Returns dataset of order items representing donation products matching given where condition along with related order, customer and SKU information.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderItemInfoProvider.GetDonations(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of order items representing donation products matching given where condition along with related order, customer and SKU information.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by</param>
            <param name="topN">Top N</param>
            <param name="columns">Columns</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderItemInfoProvider.RecalculateOrderItems(System.Single,System.Int32,System.String)">
            <summary>
            Recalculates order items using given coefficient.
            </summary>
            <param name="coefficient">Factor by which values are recalculated</param>
            <param name="roundTo">Number of significant digits the number should be rounded to</param>
            <param name="where">Additional WHERE condition</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderItemInfoProvider.DeleteOrderItems(System.Int32)">
            <summary>
            Delete all order items for specified order.
            </summary>
            <param name="orderId">Order ID</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderItemInfoProvider.GetOrderItemsInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all order items matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderItemInfoProvider.GetOrderItemInfoInternal(System.Int32)">
            <summary>
            Returns order item with specified ID.
            </summary>
            <param name="itemId">Order item ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.OrderItemInfoProvider.SetOrderItemInfoInternal(CMS.Ecommerce.OrderItemInfo)">
            <summary>
            Sets (updates or inserts) specified order item.
            </summary>
            <param name="itemObj">Order item to be set</param>        
        </member>
        <member name="M:CMS.Ecommerce.OrderItemInfoProvider.DeleteOrderItemInfoInternal(CMS.Ecommerce.OrderItemInfo)">
            <summary>
            Deletes specified order item.
            </summary>
            <param name="itemObj">Order item to be deleted</param>        
        </member>
        <member name="M:CMS.Ecommerce.OrderItemInfoProvider.GetOrderItemInfoInternal(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Returns order item created form shopping cart item data.
            </summary>
            <param name="item">Shopping cart item.</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderItemInfoProvider.GetOrderItemsInternal(System.Int32)">
            <summary>
            Returns dataset of all order items for specified order.
            </summary>
            <param name="orderId">Order ID</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderItemInfoProvider.GetExpiringOrderItemsInternal(System.Int32,System.Int32,System.String,System.Boolean)">
            <summary>
            Returns dataset of all expiring order items matching given parameters along with additional relevant information.
            </summary>
            <param name="days">Number of days before order item expiration</param>
            <param name="siteId">Site ID. Set to 0 to get expiring order items on all sites.</param>
            <param name="where">Additional where condition</param>
            <param name="onlyWithSendNotification">Get only records with send notification flag set to true.</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderItemInfoProvider.GetDonationsInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of order items representing donation products matching given where condition along with related order, customer and SKU information.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by</param>
            <param name="topN">Top N</param>
            <param name="columns">Columns</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderItemInfoProvider.RecalculateOrderItemsInternal(System.Single,System.Int32,System.String)">
            <summary>
            Recalculates order items using given coefficient.
            </summary>
            <param name="coefficient">Factor by which values are recalculated</param>
            <param name="roundTo">Number of significant digits the number should be rounded to</param>
            <param name="where">Additional WHERE condition</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderItemInfoProvider.DeleteOrderItemsInternal(System.Int32)">
            <summary>
            Delete all order items for specified order.
            </summary>
            <param name="orderId">Order ID</param>
        </member>
        <member name="T:CMS.Ecommerce.OrderStatusInfo">
            <summary>
            OrderStatusInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.OrderStatusInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusInfo.CopyDataFrom(CMS.Ecommerce.OrderStatusInfo)">
            <summary>
            Fills data properties with values from given template.
            </summary>
            <param name="status">Template to copy data from</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusInfo.#ctor">
            <summary>
            Constructor - Creates an empty OrderStatusInfo object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new OrderStatusInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusInfo.CheckPermissions(CMS.SettingsProvider.PermissionsEnum,System.String,CMS.SettingsProvider.IUserInfo)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
        </member>
        <member name="P:CMS.Ecommerce.OrderStatusInfo.StatusOrder">
            <summary>
            Order of the status.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderStatusInfo.StatusID">
            <summary>
            ID of the status.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderStatusInfo.StatusEnabled">
            <summary>
            Indicates whether the status is enabled or not.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderStatusInfo.StatusDisplayName">
            <summary>
            Display name of the status.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderStatusInfo.StatusName">
            <summary>
            Code name of the status.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderStatusInfo.StatusColor">
            <summary>
            Status color in hexa format (#xxxxxx).
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderStatusInfo.StatusGUID">
            <summary>
            Order status GUID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderStatusInfo.StatusLastModified">
            <summary>
            Order status last modified.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderStatusInfo.StatusSendNotification">
            <summary>
            Indicates if notification should be send to the customer and administrator when order status is changed to this status.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderStatusInfo.StatusSiteID">
            <summary>
            Order status site ID. Set to 0 for global order status.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderStatusInfo.StatusOrderIsPaid">
            <summary>
            Order status is paid.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.OrderStatusInfoProvider">
            <summary>
            Class providing OrderStatusInfo management.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusInfoProvider.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusInfoProvider.GetOrderStatuses(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all order statuses matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusInfoProvider.GetOrderStatuses(System.String,System.String)">
            <summary>
            Returns dataset of all order statuses matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusInfoProvider.GetOrderStatusInfo(System.Int32)">
            <summary>
            Returns order status with specified ID.
            </summary>
            <param name="statusId">Order status ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusInfoProvider.GetOrderStatusInfo(System.String,System.String)">
            <summary>
            Returns order status with specified name.
            </summary>
            <param name="statusName">Order status name</param>                
            <param name="siteName">Site name</param>                
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusInfoProvider.SetOrderStatusInfo(CMS.Ecommerce.OrderStatusInfo)">
            <summary>
            Sets (updates or inserts) specified order status.
            </summary>
            <param name="statusObj">Order status to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusInfoProvider.DeleteOrderStatusInfo(CMS.Ecommerce.OrderStatusInfo)">
            <summary>
            Deletes specified order status.
            </summary>
            <param name="statusObj">Order status to be deleted</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusInfoProvider.DeleteOrderStatusInfo(System.Int32)">
            <summary>
            Deletes order status with specified ID.
            </summary>
            <param name="statusId">Order status ID</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusInfoProvider.Clear(System.Boolean)">
            <summary>
            Clears hashtables.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusInfoProvider.GetOrderStatuses(System.String,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Returns dataset of all order statuses for specified site matching the specified parameters.
            </summary>       
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
            <param name="siteId">Site ID</param>            
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusInfoProvider.GetOrderStatuses(System.Int32,System.Boolean)">
            <summary>
            Returns dataset of all order statuses matching the specified parameters.
            </summary>
            <param name="siteId">ID of the site the order statuses should be retrieved from. If set to 0, global order statuses are retrieved</param>
            <param name="onlyEnabled">True - only enabled order statuses from the specified site are returned. False - all site order statuses are returned</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusInfoProvider.CheckDependencies(System.Int32)">
            <summary>
            Checks the order status dependencies. Returns true if there are depending objects.
            </summary>
            <param name="statusId">Status ID</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusInfoProvider.MoveStatusUp(System.Int32)">
            <summary>
            Moves status up (decreases its order).
            </summary>
            <param name="statusId">ID of status to move</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusInfoProvider.MoveStatusDown(System.Int32)">
            <summary>
            Moves status down (increases its order).
            </summary>
            <param name="statusId">ID of status to move</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusInfoProvider.GetLastStatusOrder(System.Int32)">
            <summary>
            Returns order of last status item for given site.
            </summary>
            <param name="siteId">Id of the site (0 for global)</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusInfoProvider.GetFirstEnabledStatus(System.Int32)">
            <summary>
            Returns first enabled order status in order progress for given site.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusInfoProvider.GetNextEnabledStatus(System.Int32)">
            <summary>
            Returns next enabled order status in order progress.
            </summary>
            <param name="statusId">Current order status id</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusInfoProvider.GetPreviousEnabledStatus(System.Int32)">
            <summary>
            Returns previous enabled order status in order progress.
            </summary>
            <param name="statusId">Current order status id</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusInfoProvider.CopyFromGlobal(System.Int32)">
            <summary>
            Copies site-specific status options from global status list.
            </summary>
            <param name="siteId">Id of the site for which new statuses are to be created</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusInfoProvider.GetOrderStatusesInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all order statuses matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusInfoProvider.GetOrderStatusInfoInternal(System.Int32)">
            <summary>
            Returns order status with specified ID.
            </summary>
            <param name="statusId">Order status ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusInfoProvider.GetOrderStatusInfoInternal(System.String,System.String)">
            <summary>
            Returns order status with specified name.
            </summary>
            <param name="statusName">Order status name</param>                
            <param name="siteName">Site name</param>         
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusInfoProvider.SetOrderStatusInfoInternal(CMS.Ecommerce.OrderStatusInfo)">
            <summary>
            Sets (updates or inserts) specified order status.
            </summary>
            <param name="statusObj">Order status to be set</param>        
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusInfoProvider.DeleteOrderStatusInfoInternal(CMS.Ecommerce.OrderStatusInfo)">
            <summary>
            Deletes specified order status.
            </summary>
            <param name="statusObj">Order status to be deleted</param>        
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusInfoProvider.GetOrderStatusesInternal(System.String,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Returns dataset of all order statuses for specified site matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusInfoProvider.GetOrderStatusesInternal(System.Int32,System.Boolean)">
            <summary>
            Returns dataset of all order statuses matching the specified parameters.
            </summary>
            <param name="siteId">ID of the site the statuses should be retrieved from. If set to 0, global order statuses are retrieved</param>
            <param name="onlyEnabled">True - only enabled statuses from the specified site are returned. False - all site statuses are returned</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusInfoProvider.MoveStatusUpInternal(System.Int32)">
            <summary>
            Moves status up (decreases its order).
            </summary>
            <param name="statusId">ID of status to move</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusInfoProvider.MoveStatusDownInternal(System.Int32)">
            <summary>
            Moves status down (increases its order).
            </summary>
            <param name="statusId">ID of status to move</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusInfoProvider.InitStatusesOrderInternal(System.Int32)">
            <summary>
            Initializes the order of statuses in site scope. Site is specified by status id.
            </summary>
            <param name="statusId">Id of the status for obtaining site id</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusInfoProvider.GetLastStatusOrderInternal(System.Int32)">
            <summary>
            Returns order of last status item for given site.
            </summary>
            <param name="siteId">Id of the site (or 0 for global)</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusInfoProvider.GetFirstEnabledStatusInternal(System.Int32)">
            <summary>
            Returns first enabled order status in order progress.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusInfoProvider.GetNextEnabledStatusInternal(System.Int32)">
            <summary>
            Returns next enabled status in order progress.
            </summary>
            <param name="statusId">Current order status id</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusInfoProvider.GetPreviousEnabledStatusInternal(System.Int32)">
            <summary>
            Returns previous enabled status in order progress.
            </summary>
            <param name="statusId">Current order status id</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusInfoProvider.CopyFromGlobalInternal(System.Int32)">
            <summary>
            Copies site-specific status options from global status list.
            </summary>
            <param name="siteId">Id of the site for which new statuses are to be created</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusInfoProvider.DeleteOrDisableStatus(CMS.Ecommerce.OrderStatusInfo)">
            <summary>
            Attempts to delete status info. Disables status if something depends on this status.
            </summary>
            <param name="status">Status to delete or disable</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusInfoProvider.LogChangeOrderSynchronization(System.Int32)">
            <summary>
            Logs synchronization tasks when order status order was changed.
            </summary>
            <param name="statusId">ID of the moved status</param>
        </member>
        <member name="T:CMS.Ecommerce.OrderStatusUserInfo">
            <summary>
            OrderStatusUserInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.OrderStatusUserInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusUserInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusUserInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusUserInfo.#ctor">
            <summary>
            Constructor - Creates an empty OrderStatusUserInfo object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusUserInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new OrderStatusUserInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusUserInfo.CheckPermissions(CMS.SettingsProvider.PermissionsEnum,System.String,CMS.SettingsProvider.IUserInfo)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
        </member>
        <member name="P:CMS.Ecommerce.OrderStatusUserInfo.OrderID">
            <summary>
            ID of the order.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderStatusUserInfo.ToStatusID">
            <summary>
            To status ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderStatusUserInfo.ChangedByUserID">
            <summary>
            Changed by user ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderStatusUserInfo.Note">
            <summary>
            Note of the order status.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderStatusUserInfo.Date">
            <summary>
            Date of the change.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderStatusUserInfo.OrderStatusUserID">
            <summary>
            Order status user ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderStatusUserInfo.FromStatusID">
            <summary>
            From status ID.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.OrderStatusUserInfoProvider">
            <summary>
            Class providing OrderStatusUserInfo management.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusUserInfoProvider.GetOrderStatusHistory(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all order status history items matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusUserInfoProvider.GetOrderStatusHistory(System.String,System.String)">
            <summary>
            Returns dataset of all order status history items matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusUserInfoProvider.GetOrderStatusUserInfo(System.Int32)">
            <summary>
            Returns order status history item with specified ID.
            </summary>
            <param name="itemId">Order status history item ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusUserInfoProvider.SetOrderStatusUserInfo(CMS.Ecommerce.OrderStatusUserInfo)">
            <summary>
            Sets (updates or inserts) specified order status history item.
            </summary>
            <param name="itemObj">Order status history item to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusUserInfoProvider.DeleteOrderStatusUserInfo(CMS.Ecommerce.OrderStatusUserInfo)">
            <summary>
            Deletes specified order status history item.
            </summary>
            <param name="itemObj">Order status history item to be deleted</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusUserInfoProvider.DeleteOrderStatusUserInfo(System.Int32)">
            <summary>
            Deletes order status history item with specified ID.
            </summary>
            <param name="itemId">Order status history item ID</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusUserInfoProvider.GetOrderStatusHistory(System.Int32)">
            <summary>
            Returns the dataset of order status history for specified order.
            </summary>
            <param name="orderId">Order ID</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusUserInfoProvider.GetOrderStatusHistoryList(System.Int32)">
            <summary>
            Returns the dataset of order status history for specified order (both statuses and user joined).
            </summary>
            <param name="orderId">Order ID</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusUserInfoProvider.GetOrderStatusHistoryInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all order status history items matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusUserInfoProvider.GetOrderStatusUserInfoInternal(System.Int32)">
            <summary>
            Returns order status history item with specified ID.
            </summary>
            <param name="itemId">Order status history item ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusUserInfoProvider.SetOrderStatusUserInfoInternal(CMS.Ecommerce.OrderStatusUserInfo)">
            <summary>
            Sets (updates or inserts) specified order status history item.
            </summary>
            <param name="itemObj">Order status history item to be set</param>        
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusUserInfoProvider.DeleteOrderStatusUserInfoInternal(CMS.Ecommerce.OrderStatusUserInfo)">
            <summary>
            Deletes specified order status history item.
            </summary>
            <param name="itemObj">Order status history item to be deleted</param>        
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusUserInfoProvider.GetOrderStatusHistoryInternal(System.Int32)">
            <summary>
            Returns dataset containig order status history for given  oredrId.
            </summary>
            <param name="orderId">ID of the order to get history for</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusUserInfoProvider.GetOrderStatusHistoryListInternal(System.Int32)">
            <summary>
            Returns the dataset of order status history for specified order (both statuses and user joined).
            </summary>
            <param name="orderId">Order ID</param>
        </member>
        <member name="T:CMS.Ecommerce.PaymentOptionInfo">
            <summary>
            PaymentOptionInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.PaymentOptionInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.PaymentOptionInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor for deserialization.
            </summary>
            <param name="info">Serialization inf</param>
            <param name="context">Streaming context</param>
        </member>
        <member name="M:CMS.Ecommerce.PaymentOptionInfo.#ctor">
            <summary>
            Constructor - Creates an empty PaymentOptionInfo object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.PaymentOptionInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new PaymentOptionInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.PaymentOptionInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.PaymentOptionInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.PaymentOptionInfo.IsInShipping(System.Int32)">
            <summary>
            Returns true, if the payment option is  in the specified shipping option.
            </summary>
            <param name="shippingId">Shipping option ID</param>
        </member>
        <member name="M:CMS.Ecommerce.PaymentOptionInfo.CheckPermissions(CMS.SettingsProvider.PermissionsEnum,System.String,CMS.SettingsProvider.IUserInfo)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
        </member>
        <member name="P:CMS.Ecommerce.PaymentOptionInfo.PaymentOptionID">
            <summary>
            ID of the payment option.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.PaymentOptionInfo.PaymentOptionName">
            <summary>
            Code name of the payment option.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.PaymentOptionInfo.PaymentOptionSiteID">
            <summary>
            Payment option site ID. Set to 0 for global payment option.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.PaymentOptionInfo.PaymentOptionEnabled">
            <summary>
            Indicates whether the payment option is enabled or not.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.PaymentOptionInfo.PaymentOptionPaymentGateUrl">
            <summary>
            Payment option - Payment gate url.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.PaymentOptionInfo.PaymentOptionDisplayName">
            <summary>
            Code name of the payment option.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.PaymentOptionInfo.PaymentOptionAssemblyName">
            <summary>
            Payment gateway assembly name.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.PaymentOptionInfo.PaymentOptionClassName">
            <summary>
            Payment gateway class name.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.PaymentOptionInfo.PaymentOptionSucceededOrderStatusID">
            <summary>
            ID of the status which is considered to be "payment successful" status.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.PaymentOptionInfo.PaymentOptionFailedOrderStatusID">
            <summary>
            ID of the status which is considered to be "payment failed" status.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.PaymentOptionInfo.PaymentOptionGUID">
            <summary>
            Payment option GUID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.PaymentOptionInfo.PaymentOptionLastModified">
            <summary>
            Object last modified.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.PaymentOptionInfo.PaymentOptionAllowIfNoShipping">
            <summary>
            Allow payment option to be selected if order does not need shipping.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.PaymentOptionInfo.IsObjectValid">
            <summary>
            Returns true if the data are valid.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.PaymentOptionInfoProvider">
            <summary>
            Class providing PaymentOptionInfo management.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.PaymentOptionInfoProvider.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.PaymentOptionInfoProvider.GetPaymentOptions(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all payment options matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.Ecommerce.PaymentOptionInfoProvider.GetPaymentOptions(System.String,System.String)">
            <summary>
            Returns dataset of all payment options matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
        </member>
        <member name="M:CMS.Ecommerce.PaymentOptionInfoProvider.GetPaymentOptionInfo(System.Int32)">
            <summary>
            Returns payment option with specified ID.
            </summary>
            <param name="optionId">Payment option ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.PaymentOptionInfoProvider.GetPaymentOptionInfo(System.String,System.String)">
            <summary>
            Returns payment option with specified name.
            </summary>
            <param name="optionName">Payment option name</param>                
            <param name="siteName">Site name</param>                
        </member>
        <member name="M:CMS.Ecommerce.PaymentOptionInfoProvider.SetPaymentOptionInfo(CMS.Ecommerce.PaymentOptionInfo)">
            <summary>
            Sets (updates or inserts) specified payment option.
            </summary>
            <param name="optionObj">Payment option to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.PaymentOptionInfoProvider.DeletePaymentOptionInfo(CMS.Ecommerce.PaymentOptionInfo)">
            <summary>
            Deletes specified payment option.
            </summary>
            <param name="optionObj">Payment option to be deleted</param>
        </member>
        <member name="M:CMS.Ecommerce.PaymentOptionInfoProvider.DeletePaymentOptionInfo(System.Int32)">
            <summary>
            Deletes payment option with specified ID.
            </summary>
            <param name="optionId">Payment option ID</param>
        </member>
        <member name="M:CMS.Ecommerce.PaymentOptionInfoProvider.Clear(System.Boolean)">
            <summary>
            Clears hashtables.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.Ecommerce.PaymentOptionInfoProvider.GetPaymentOptions(System.String,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Returns dataset of all payment options for specified site matching the specified parameters.
            </summary>       
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
            <param name="siteId">Site ID</param>            
        </member>
        <member name="M:CMS.Ecommerce.PaymentOptionInfoProvider.GetPaymentOptions(System.Int32,System.Boolean)">
            <summary>
            Returns dataset of all payment options matching the specified parameters.
            </summary>
            <param name="siteId">ID of the site the options should be retrieved from. If set to 0, global payment options are retrieved</param>
            <param name="onlyEnabled">True - only enabled payment options from the specified site are returned. False - all site options are returned</param>
        </member>
        <member name="M:CMS.Ecommerce.PaymentOptionInfoProvider.GetPaymentOptionsForShipping(System.Int32,System.Boolean)">
            <summary>
            Returns dataset of payment options bound to specified shipping option.
            </summary>
            <param name="shippingId">Id of the sipping option</param>
            <param name="onlyEnabled">True - only enabled payment options from the specified shipping option are returned. False - all options bound to shipping are returned</param>
        </member>
        <member name="M:CMS.Ecommerce.PaymentOptionInfoProvider.GetPaymentURL(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Returns URL to payment gateway.
            </summary>
            <param name="cartObj">Shopping cart object</param>
        </member>
        <member name="M:CMS.Ecommerce.PaymentOptionInfoProvider.ResolveUrlMacros(System.String,CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Resolves macros of payment gateway URL.
            </summary>
            <param name="url">URL to resolve</param>
            <param name="cartObj">Cart object</param>
        </member>
        <member name="M:CMS.Ecommerce.PaymentOptionInfoProvider.CheckDependencies(System.Int32)">
            <summary>
            Checks dependencies, returns true if dependent.
            </summary>
            <param name="optionId">Payment option ID</param>
        </member>
        <member name="M:CMS.Ecommerce.PaymentOptionInfoProvider.GetPaymentOptionsInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all payment options matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.Ecommerce.PaymentOptionInfoProvider.GetPaymentOptionInfoInternal(System.Int32)">
            <summary>
            Returns payment option with specified ID.
            </summary>
            <param name="optionId">Payment option ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.PaymentOptionInfoProvider.GetPaymentOptionInfoInternal(System.String,System.String)">
            <summary>
            Returns payment option with specified name.
            </summary>
            <param name="optionName">Payment option name</param>                
            <param name="siteName">Site name</param>         
        </member>
        <member name="M:CMS.Ecommerce.PaymentOptionInfoProvider.SetPaymentOptionInfoInternal(CMS.Ecommerce.PaymentOptionInfo)">
            <summary>
            Sets (updates or inserts) specified payment option.
            </summary>
            <param name="optionObj">Payment option to be set</param>        
        </member>
        <member name="M:CMS.Ecommerce.PaymentOptionInfoProvider.DeletePaymentOptionInfoInternal(CMS.Ecommerce.PaymentOptionInfo)">
            <summary>
            Deletes specified payment option.
            </summary>
            <param name="optionObj">Payment option to be deleted</param>        
        </member>
        <member name="M:CMS.Ecommerce.PaymentOptionInfoProvider.GetPaymentOptionsInternal(System.String,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Returns dataset of all payment options for specified site matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.Ecommerce.PaymentOptionInfoProvider.GetPaymentOptionsInternal(System.Int32,System.Boolean)">
            <summary>
            Returns dataset of all payment options matching the specified parameters.
            </summary>
            <param name="siteId">ID of the site the options should be retrieved from. If set to 0, global payment options are retrieved</param>
            <param name="onlyEnabled">True - only enabled payment options from the specified site are returned. False - all site options are returned</param>
        </member>
        <member name="M:CMS.Ecommerce.PaymentOptionInfoProvider.GetPaymentOptionsForShippingInternal(System.Int32,System.Boolean)">
            <summary>
            Returns dataset of payment options bound to specified shipping option.
            </summary>
            <param name="shippingId">Id of the sipping option</param>
            <param name="onlyEnabled">True - only enabled payment options from the specified shipping option are returned. False - all options bound to shipping are returned</param>
        </member>
        <member name="M:CMS.Ecommerce.PaymentOptionInfoProvider.GetPaymentURLInternal(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Returns URL to payment gateway.
            </summary>
            <param name="cartObj">Shopping cart object</param>
        </member>
        <member name="M:CMS.Ecommerce.PaymentOptionInfoProvider.ResolveUrlMacrosInternal(System.String,CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Resolves macros of payment gateway URL.
            </summary>
            <param name="url">URL to resolve</param>
            <param name="cartObj">Cart object</param>
        </member>
        <member name="T:CMS.Ecommerce.PaymentResultItemInfo">
            <summary>
            Class representing payment result item (= one payment result xml node).
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.PaymentResultItemInfo.#ctor(System.Xml.XmlNode)">
            <summary>
            Creates payment result item from Xml node.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.PaymentResultItemInfo.#ctor">
            <summary>
            Creates empty payment result item.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.PaymentResultItemInfo.Header">
            <summary>
            Payment result item header text.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.PaymentResultItemInfo.Name">
            <summary>
            Payment result item code name.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.PaymentResultItemInfo.Value">
            <summary>
            Payment result item value - inner interpretation.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.PaymentResultItemInfo.Text">
            <summary>
            Payment result item value text interpretation - it is visible to user.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.PaymentShippingInfo">
            <summary>
            PaymentShippingInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.PaymentShippingInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.PaymentShippingInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.PaymentShippingInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.PaymentShippingInfo.#ctor">
            <summary>
            Constructor - Creates an empty PaymentShippingInfo object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.PaymentShippingInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new PaymentShippingInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.PaymentShippingInfo.CheckPermissions(CMS.SettingsProvider.PermissionsEnum,System.String,CMS.SettingsProvider.IUserInfo)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
        </member>
        <member name="P:CMS.Ecommerce.PaymentShippingInfo.PaymentOptionID">
            <summary>
            ID of the payment option.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.PaymentShippingInfo.ShippingOptionID">
            <summary>
            ID of the shipping option.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.PaymentShippingInfoProvider">
            <summary>
            Class providing PaymentShippingInfo management.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.PaymentShippingInfoProvider.GetPaymentShippings(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all relationships between payment options and shipping options matching the specified criteria.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.Ecommerce.PaymentShippingInfoProvider.GetPaymentShippings(System.String,System.String)">
            <summary>
            Returns dataset of all relationships between payment options and shipping options matching the specified criteria.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
        </member>
        <member name="M:CMS.Ecommerce.PaymentShippingInfoProvider.GetPaymentShippingInfo(System.Int32,System.Int32)">
            <summary>
            Returns relationship between specified payment option and shipping option.
            </summary>
            <param name="paymentId">Payment option ID</param>
            <param name="shippingId">Shipping option ID</param>
        </member>
        <member name="M:CMS.Ecommerce.PaymentShippingInfoProvider.SetPaymentShippingInfo(CMS.Ecommerce.PaymentShippingInfo)">
            <summary>
            Sets relationship between specified payment option and shipping option.
            </summary>
            <param name="infoObj">Payment option-shipping option relationship to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.PaymentShippingInfoProvider.DeletePaymentShippingInfo(CMS.Ecommerce.PaymentShippingInfo)">
            <summary>
            Deletes relationship between specified payment option and shipping option.
            </summary>
            <param name="infoObj">Payment option-shipping option relationship to be deleted</param>
        </member>
        <member name="M:CMS.Ecommerce.PaymentShippingInfoProvider.AddPaymentToShipping(System.Int32,System.Int32)">
            <summary>
            Sets relationship between specified payment option and shipping option.
            </summary>  
            <param name="paymentId">Payment option ID</param>
            <param name="shippingId">Shipping option ID</param>
        </member>
        <member name="M:CMS.Ecommerce.PaymentShippingInfoProvider.RemovePaymentFromShipping(System.Int32,System.Int32)">
            <summary>
            Deletes relationship between specified payment option and shipping option.
            </summary>
            <param name="paymentId">Payment option ID</param>
            <param name="shippingId">Shipping option ID</param>
        </member>
        <member name="M:CMS.Ecommerce.PaymentShippingInfoProvider.GetPaymentShippingsInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all relationships between payment options and shipping options matching the specified criteria.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.Ecommerce.PaymentShippingInfoProvider.GetPaymentShippingInfoInternal(System.Int32,System.Int32)">
            <summary>
            Returns relationship between specified payment option and shipping option.
            </summary>
            <param name="paymentId">Payment option ID</param>
            <param name="shippingId">Shipping option ID</param>
        </member>
        <member name="M:CMS.Ecommerce.PaymentShippingInfoProvider.SetPaymentShippingInfoInternal(CMS.Ecommerce.PaymentShippingInfo)">
            <summary>
            Sets relationship between specified payment option and shipping option.
            </summary>
            <param name="infoObj">Payment option-shipping option relationship to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.PaymentShippingInfoProvider.DeletePaymentShippingInfoInternal(CMS.Ecommerce.PaymentShippingInfo)">
            <summary>
            Deletes relationship between specified payment option and shipping option.
            </summary>
            <param name="infoObj">Payment option-shipping option relationship to be deleted</param>
        </member>
        <member name="T:CMS.Ecommerce.PayPalPaymentResultInfo">
            <summary>
            PayPal payment result.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.PayPalPaymentResultInfo.GetPayPalPaymentStatus(System.String)">
            <summary>
            Returns paypal payment status according to the returned status string from the PayPal payment gateway.
            </summary>        
            <param name="status">Payment status string returned from the PayPal payment gateway</param>
        </member>
        <member name="M:CMS.Ecommerce.PayPalPaymentResultInfo.SetPayPalPaymentStatus(CMS.Ecommerce.PayPalPaymentStatusEnum)">
            <summary>
            Sets paypal payment status according to the returned status from tha paypal payment gateway.
            </summary>        
            <param name="status">Payment status string returned from the paypal payment gateway</param>
        </member>
        <member name="M:CMS.Ecommerce.PayPalPaymentResultInfo.GetPayPalPaymentStatusEnum">
            <summary>
            Returns paypal payment status enumeration from payment result status string.
            </summary>        
        </member>
        <member name="M:CMS.Ecommerce.PayPalPaymentResultInfo.#ctor">
            <summary>
            Creates base payment result info object + add PayPal payment result properties.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.PayPalPaymentResultInfo.PayPalPaymentStatus">
            <summary>
            PayPal payment status.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.PayPalPaymentResultInfo.PayPalPaymentVerified">
            <summary>
            TRUE - payment was verified by IPN (Instant payment notification) successfully, payment is VALID.
            FALSE - payment verification by IPN failed, payment is INVALID.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.PayPalPaymentStatusEnum">
            <summary>
            PayPal payment status.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.PayPalPaymentStatusEnum.Unknown">
            <summary>
            Payment status is not known.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.PayPalPaymentStatusEnum.Completed">
            <summary>
            Payment has been completed, and the funds have been added successfully to merchant's account balance.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.PayPalPaymentStatusEnum.CanceledReversal">
            <summary>
            A reversal has been canceled. For example, merchant won a dispute with the customer, and the funds for the transaction that was reversed have been returned to merchant.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.PayPalPaymentStatusEnum.Denied">
            <summary>
            When merchant denied the payment. This happens only if the payment was previously pending.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.PayPalPaymentStatusEnum.Expired">
            <summary>
            This authorization has expired and cannot be captured.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.PayPalPaymentStatusEnum.Failed">
            <summary>
            The payment has failed. This happens only if the payment was made from merchant customer's bank account.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.PayPalPaymentStatusEnum.InProgress">
            <summary>
            The transaction is in process of authorization and capture.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.PayPalPaymentStatusEnum.Pending">
            <summary>
            The payment is pending.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.PayPalPaymentStatusEnum.Processed">
            <summary>
             The payment has been accepted.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.PayPalPaymentStatusEnum.Refunded">
            <summary>
            The payment was refunded.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.PayPalPaymentStatusEnum.Reversed">
            <summary>
            The payment was reversed due to a chargeback or other type of reversal. The funds have been removed from merchant's account balance and returned to the buyer. 
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.PayPalPaymentStatusEnum.Voided">
            <summary>
            This authorization has been voided.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.ProductsDataSource">
            <summary>
            Products data source server control.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ProductsDataSource.OnInit(System.EventArgs)">
            <summary>
            OnInit override, register OnFilter change event.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ProductsDataSource.DataFilter_OnFilterChanged">
            <summary>
            OnFilterChange handler.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ProductsDataSource.GetDataSourceFromDB">
            <summary>
            Gets datasource from DB.
            </summary>
            <returns>Dataset as object</returns>
        </member>
        <member name="M:CMS.Ecommerce.ProductsDataSource.GetDefaultCacheDependendencies">
            <summary>
            Gets the default cache dependencies for the data source.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ProductsDataSource.DataSource">
            <summary>
            Gets Datasource object.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ProductsDataSource.UseDocumentFilter">
            <summary>
            Indicates if the comments should be retrieved according to document filter settings.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ProductsDataSource.Path">
            <summary>
            Path of the documents to be displayed. /% selects all documents.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ProductsDataSource.CultureCode">
            <summary>
            Culture code, such as en-us.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ProductsDataSource.CombineWithDefaultCulture">
            <summary>
            Indicates if the documents from the default culture version should be alternatively used.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ProductsDataSource.SelectOnlyPublished">
            <summary>
            Indicates if only published documents should be displayed.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ProductsDataSource.MaxRelativeLevel">
            <summary>
            Relative level of child documents that should be selected. -1 selects all child documents.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ProductsDataSource.DocumentsWhereCondition">
            <summary>
            Gets or sets the where condition for blog posts.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.PublicStatusInfo">
            <summary>
            PublicStatusInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.PublicStatusInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.PublicStatusInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.PublicStatusInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.PublicStatusInfo.CopyDataFrom(CMS.Ecommerce.PublicStatusInfo)">
            <summary>
            Fills data properties with values from given template.
            </summary>
            <param name="status">Template to copy data from</param>
        </member>
        <member name="M:CMS.Ecommerce.PublicStatusInfo.#ctor">
            <summary>
            Constructor - Creates an empty PublicStatusInfo object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.PublicStatusInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new PublicStatusInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.PublicStatusInfo.CheckPermissions(CMS.SettingsProvider.PermissionsEnum,System.String,CMS.SettingsProvider.IUserInfo)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
        </member>
        <member name="P:CMS.Ecommerce.PublicStatusInfo.PublicStatusName">
            <summary>
            Code name of the status.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.PublicStatusInfo.PublicStatusID">
            <summary>
            ID of the status.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.PublicStatusInfo.PublicStatusEnabled">
            <summary>
            Indicates whether the status is enabled or not.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.PublicStatusInfo.PublicStatusDisplayName">
            <summary>
            Display name of the status.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.PublicStatusInfo.PublicStatusGUID">
            <summary>
            PublicStatus GUID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.PublicStatusInfo.PublicStatusLastModified">
            <summary>
            Object last modified.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.PublicStatusInfo.PublicStatusSiteID">
            <summary>
            Public status site ID. Set to 0 for global public status.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.PublicStatusInfoProvider">
            <summary>
            Class providing PublicStatusInfo management.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.PublicStatusInfoProvider.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.PublicStatusInfoProvider.GetPublicStatuses(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all public statuses matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.Ecommerce.PublicStatusInfoProvider.GetPublicStatuses(System.String,System.String)">
            <summary>
            Returns dataset of all public statuses matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
        </member>
        <member name="M:CMS.Ecommerce.PublicStatusInfoProvider.GetPublicStatusInfo(System.Int32)">
            <summary>
            Returns public status with specified ID.
            </summary>
            <param name="statusId">Public status ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.PublicStatusInfoProvider.GetPublicStatusInfo(System.String,System.String)">
            <summary>
            Returns public status with specified name.
            </summary>
            <param name="statusName">Public status name</param>                
            <param name="siteName">Site name</param>                
        </member>
        <member name="M:CMS.Ecommerce.PublicStatusInfoProvider.SetPublicStatusInfo(CMS.Ecommerce.PublicStatusInfo)">
            <summary>
            Sets (updates or inserts) specified public status.
            </summary>
            <param name="statusObj">Public status to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.PublicStatusInfoProvider.DeletePublicStatusInfo(CMS.Ecommerce.PublicStatusInfo)">
            <summary>
            Deletes specified public status.
            </summary>
            <param name="statusObj">Public status to be deleted</param>
        </member>
        <member name="M:CMS.Ecommerce.PublicStatusInfoProvider.DeletePublicStatusInfo(System.Int32)">
            <summary>
            Deletes public status with specified ID.
            </summary>
            <param name="statusId">Public status ID</param>
        </member>
        <member name="M:CMS.Ecommerce.PublicStatusInfoProvider.Clear(System.Boolean)">
            <summary>
            Clears hashtables.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.Ecommerce.PublicStatusInfoProvider.GetPublicStatuses(System.String,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Returns dataset of all public statuses for specified site matching the specified parameters.
            </summary>       
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
            <param name="siteId">Site ID</param>            
        </member>
        <member name="M:CMS.Ecommerce.PublicStatusInfoProvider.GetPublicStatuses(System.Int32,System.Boolean)">
            <summary>
            Returns dataset of all public statuses matching the specified parameters.
            </summary>
            <param name="siteId">ID of the site the public statuses should be retrieved from. If set to 0, global public statuses are retrieved</param>
            <param name="onlyEnabled">True - only enabled public statuses from the specified site are returned. False - all site public statuses are returned</param>
        </member>
        <member name="M:CMS.Ecommerce.PublicStatusInfoProvider.CheckDependencies(System.Int32)">
            <summary>
            Checks the public status dependencies. Returns true if there are depending objects.
            </summary>
            <param name="statusId">Status ID</param>
        </member>
        <member name="M:CMS.Ecommerce.PublicStatusInfoProvider.CopyFromGlobal(System.Int32)">
            <summary>
            Copies site-specific status options from global status list.
            </summary>
            <param name="siteId">Id of the site for which new statuses are to be created</param>
        </member>
        <member name="M:CMS.Ecommerce.PublicStatusInfoProvider.GetPublicStatusesInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all public statuses matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.Ecommerce.PublicStatusInfoProvider.GetPublicStatusInfoInternal(System.Int32)">
            <summary>
            Returns public status with specified ID.
            </summary>
            <param name="statusId">Public status ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.PublicStatusInfoProvider.GetPublicStatusInfoInternal(System.String,System.String)">
            <summary>
            Returns public status with specified name.
            </summary>
            <param name="statusName">Public status name</param>                
            <param name="siteName">Site name</param>         
        </member>
        <member name="M:CMS.Ecommerce.PublicStatusInfoProvider.SetPublicStatusInfoInternal(CMS.Ecommerce.PublicStatusInfo)">
            <summary>
            Sets (updates or inserts) specified public status.
            </summary>
            <param name="statusObj">Public status to be set</param>        
        </member>
        <member name="M:CMS.Ecommerce.PublicStatusInfoProvider.DeletePublicStatusInfoInternal(CMS.Ecommerce.PublicStatusInfo)">
            <summary>
            Deletes specified public status.
            </summary>
            <param name="statusObj">Public status to be deleted</param>        
        </member>
        <member name="M:CMS.Ecommerce.PublicStatusInfoProvider.GetPublicStatusesInternal(System.String,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Returns dataset of all public statuses for specified site matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.Ecommerce.PublicStatusInfoProvider.GetPublicStatusesInternal(System.Int32,System.Boolean)">
            <summary>
            Returns dataset of all public statuses matching the specified parameters.
            </summary>
            <param name="siteId">ID of the site the statuses should be retrieved from. If set to 0, global public statuses are retrieved</param>
            <param name="onlyEnabled">True - only enabled statuses from the specified site are returned. False - all site statuses are returned</param>
        </member>
        <member name="M:CMS.Ecommerce.PublicStatusInfoProvider.CopyFromGlobalInternal(System.Int32)">
            <summary>
            Copies site-specific status options from global status list.
            </summary>
            <param name="siteId">Id of the site for which new statuses are to be created</param>
        </member>
        <member name="M:CMS.Ecommerce.PublicStatusInfoProvider.DeleteOrDisableStatus(CMS.Ecommerce.PublicStatusInfo)">
            <summary>
            Attempts to delete status info. Disables status if something depends on this status.
            </summary>
            <param name="status">Status to delete or disable</param>
        </member>
        <member name="T:CMS.Ecommerce.ShippingOptionInfo">
            <summary>
            ShippingOptionInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ShippingOptionInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor for deserialization.
            </summary>
            <param name="info">Serialization info</param>
            <param name="context">Streaming context</param>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionInfo.#ctor">
            <summary>
            Constructor - Creates an empty ShippingOptionInfo object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new ShippingOptionInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionInfo.CheckPermissions(CMS.SettingsProvider.PermissionsEnum,System.String,CMS.SettingsProvider.IUserInfo)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
        </member>
        <member name="P:CMS.Ecommerce.ShippingOptionInfo.ShippingOptionSiteID">
            <summary>
            Shipping option site ID. Set to 0 for global shipping option.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShippingOptionInfo.ShippingOptionDisplayName">
            <summary>
            Shipping option display name.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShippingOptionInfo.ShippingOptionCharge">
            <summary>
            Shipping option charge.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShippingOptionInfo.ShippingOptionID">
            <summary>
            ID of the shipping option.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShippingOptionInfo.ShippingOptionName">
            <summary>
            Code name of the shipping option.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShippingOptionInfo.ShippingOptionEnabled">
            <summary>
            Indicates whether the shipping option is enabled or not.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShippingOptionInfo.ShippingOptionGUID">
            <summary>
            ShippingOption GUID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShippingOptionInfo.ShippingOptionLastModified">
            <summary>
            Object last modified.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShippingOptionInfo.IsObjectValid">
            <summary>
            Returns true if the data are valid.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.ShippingOptionInfoProvider">
            <summary>
            Class providing ShippingOptionInfo management.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionInfoProvider.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionInfoProvider.GetShippingOptions(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all shipping options matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionInfoProvider.GetShippingOptions(System.String,System.String)">
            <summary>
            Returns dataset of all shipping options matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionInfoProvider.GetShippingOptionInfo(System.Int32)">
            <summary>
            Returns shipping option with specified ID.
            </summary>
            <param name="optionId">Shipping option ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionInfoProvider.GetShippingOptionInfo(System.String,System.String)">
            <summary>
            Returns shipping option with specified name.
            </summary>
            <param name="optionName">Shipping option name</param>                
            <param name="siteName">Site name</param>                
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionInfoProvider.SetShippingOptionInfo(CMS.Ecommerce.ShippingOptionInfo)">
            <summary>
            Sets (updates or inserts) specified shipping option.
            </summary>
            <param name="optionObj">Shipping option to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionInfoProvider.DeleteShippingOptionInfo(CMS.Ecommerce.ShippingOptionInfo)">
            <summary>
            Deletes specified shipping option.
            </summary>
            <param name="optionObj">Shipping option to be deleted</param>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionInfoProvider.DeleteShippingOptionInfo(System.Int32)">
            <summary>
            Deletes shipping option with specified ID.
            </summary>
            <param name="optionId">Shipping option ID</param>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionInfoProvider.Clear(System.Boolean)">
            <summary>
            Clears hashtables.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionInfoProvider.GetShippingOptions(System.String,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Returns dataset of all shipping options for specified site matching the specified parameters.
            </summary>       
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
            <param name="siteId">Site ID</param>            
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionInfoProvider.GetShippingOptions(System.Int32,System.Boolean)">
            <summary>
            Returns dataset of all shipping options matching the specified parameters.
            </summary>
            <param name="siteId">ID of the site the options should be retrieved from. If set to 0, global shipping options are retrieved</param>
            <param name="onlyEnabled">True - only enabled shipping options from the specified site are returned. False - all site options are returned</param>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionInfoProvider.GetShippingOptions(CMS.Ecommerce.ShoppingCartInfo,System.Boolean)">
            <summary>
            Returns dataset of all shipping options suitable for specified shopping cart.
            </summary>
            <param name="cartObj">Shopping cart info object</param>
            <param name="onlyEnabled">True - only enabled shipping options from the specified site are returned. False - all site options are returned</param>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionInfoProvider.CheckDependencies(System.Int32)">
            <summary>
            Checks dependencies, returns true if dependent.
            </summary>
            <param name="optionId">Shipping option ID</param>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionInfoProvider.GetFormattedWeight(System.Double,System.String)">
            <summary>
            Returns weight formated according site specific weight format string. If no format string speciffied, uses x.xx format instead.
            </summary>
            <param name="weight">Weight</param>
            <param name="siteName">Name of the site for obtaining format string</param>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionInfoProvider.ApplyShippingFreeLimit(System.Double,System.Double,System.Double)">
            <summary>
            Returns shipping price or zero according to site store shipping free limit.
            </summary>
            <param name="shipping">Shipping price</param>
            <param name="totalPrice">Total order price</param>
            <param name="siteStoreFreeLimit">Site store shipping free limit</param>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionInfoProvider.CalculateShipping(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Calculates shipping cost for the given shopping cart. Shipping free limit is applied. Shipping taxes are not included. Result is in site main currency. 
            </summary>
            <param name="cartObj">Shopping cart object</param>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionInfoProvider.CalculateShippingTax(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Calculates tax value of the shipping option for the given shopping cart. Result is in site main currency.
            </summary>
            <param name="cartObj">Shopping cart object.</param>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionInfoProvider.CalculateTotalShipping(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Calculates total shipping for the given shopping cart. Shipping taxes are included. Result is site main currency.
            </summary>
            <param name="cartObj">Shopping cart object</param>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionInfoProvider.RecalculateShippingOptions(System.Single,System.Int32,System.String,System.Int32)">
            <summary>
            Recalculates options charges and their shipping costs using the given coefficient.
            </summary>
            <param name="coefficient">Factor by which values are recalculated</param>        
            <param name="roundTo">Number of significant digits the number should be rounded to</param>
            <param name="where">Additional WHERE condition</param>
            <param name="siteId">ID of the site which records are to be recalculated</param>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionInfoProvider.RecalculateShippingFreeLimit(System.Single,System.Int32,System.Int32)">
            <summary>
            Recalculates shipping free limit for specified site using the given coefficient.
            </summary>
            <param name="coefficient">Factor by which values are recalculated</param>        
            <param name="roundTo">Number of significant digits the number should be rounded to</param>
            <param name="siteId">ID of the site which limit is to be recalculated</param>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionInfoProvider.IsShippingNeeded(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Check if shopping cart needs shipping, return true if it does.
            </summary>
            <param name="cartObj">Shopping cart object</param>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionInfoProvider.GetShippingOptionsInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all shipping options matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionInfoProvider.GetShippingOptionInfoInternal(System.Int32)">
            <summary>
            Returns shipping option with specified ID.
            </summary>
            <param name="optionId">Shipping option ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionInfoProvider.GetShippingOptionInfoInternal(System.String,System.String)">
            <summary>
            Returns shipping option with specified name.
            </summary>
            <param name="optionName">Shipping option name</param>                
            <param name="siteName">Site name</param>         
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionInfoProvider.SetShippingOptionInfoInternal(CMS.Ecommerce.ShippingOptionInfo)">
            <summary>
            Sets (updates or inserts) specified shipping option.
            </summary>
            <param name="optionObj">Shipping option to be set</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionInfoProvider.DeleteShippingOptionInfoInternal(CMS.Ecommerce.ShippingOptionInfo)">
            <summary>
            Deletes specified shipping option.
            </summary>
            <param name="optionObj">Shipping option to be deleted</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionInfoProvider.GetShippingOptionsInternal(System.String,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Returns dataset of all shipping options for specified site matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionInfoProvider.GetShippingOptionsInternal(System.Int32,System.Boolean)">
            <summary>
            Returns dataset of all shipping options matching the specified parameters.
            </summary>
            <param name="siteId">ID of the site the options should be retrieved from. If set to 0, global shipping options are retrieved</param>
            <param name="onlyEnabled">True - only enabled shipping options from the specified site are returned. False - all site options are returned</param>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionInfoProvider.GetShippingOptionsInternal(CMS.Ecommerce.ShoppingCartInfo,System.Boolean)">
            <summary>
            Returns dataset of all shipping options suitable for specified shopping cart.
            </summary>
            <param name="cartObj">Shopping cart info object</param>
            <param name="onlyEnabled">True - only enabled shipping options from the specified site are returned. False - all site options are returned</param>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionInfoProvider.GetFormattedWeightInternal(System.Double,System.String)">
            <summary>
            Returns weight formated according site specific weight format string. If no format string speciffied, uses x.xx format instead.
            </summary>
            <param name="weight">Weight</param>
            <param name="siteName">Name of the site for obtaining format string</param>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionInfoProvider.ApplyShippingFreeLimitInternal(System.Double,System.Double,System.Double)">
            <summary>
            Returns shipping price or zero according to site store shipping free limit.
            </summary>
            <param name="shipping">Shipping price in site main currency</param>
            <param name="totalPrice">Total order price in site main currency</param>
            <param name="siteStoreFreeLimit">Site store shipping free limit</param>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionInfoProvider.CalculateShippingInternal(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Calculates shipping cost for the given shopping cart. Shipping free limit is applied. Shipping taxes are not included. Result is in site main currency. 
            </summary>
            <param name="cartObj">Shopping cart object</param>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionInfoProvider.CalculateShippingTaxInternal(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Calculates tax value of the shipping option for the given shopping cart. Result is in site main currency.
            </summary>
            <param name="cartObj">Shopping cart object.</param>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionInfoProvider.CalculateTotalShippingInternal(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Calculates total shipping for the given shopping cart. Shipping taxes are included. Result is site main currency.
            </summary>
            <param name="cartObj">Shopping cart object</param>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionInfoProvider.RecalculateShippingOptionsInternal(System.Single,System.Int32,System.String,System.Int32)">
            <summary>
            Recalculates options charges and their shipping costs using the given coefficient.
            </summary>
            <param name="coefficient">Factor by which values are recalculated</param>        
            <param name="roundTo">Number of significant digits the number should be rounded to</param>
            <param name="where">Additional WHERE condition</param>
            <param name="siteId">ID of the site which records are to be recalculated</param>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionInfoProvider.RecalculateShippingFreeLimitInternal(System.Single,System.Int32,System.Int32)">
            <summary>
            Recalculates shipping free limit for specified site using the given coefficient.
            </summary>
            <param name="coefficient">Factor by which values are recalculated</param>        
            <param name="roundTo">Number of significant digits the number should be rounded to</param>
            <param name="siteId">ID of the site which limit is to be recalculated</param>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionInfoProvider.IsShippingNeededInternal(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Check if shopping cart needs shipping, return true if it does.
            </summary>
            <param name="cart">Shopping cart</param>
        </member>
        <member name="T:CMS.Ecommerce.RecalculationSettings">
            <summary>
            Class providing settings for prices recalculations.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.RecalculationSettings.ExchangeRates">
            <summary>
            Indicates whether exchange rates will be recalculated.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.RecalculationSettings.FromGlobalCurrencyRates">
            <summary>
            Indicates whether exchange rates from global main currency to site-specific main currency will be recalculated.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.RecalculationSettings.Products">
            <summary>
            Indicates whether product prices will be recalculated.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.RecalculationSettings.Taxes">
            <summary>
            Indicates whether flat taxes will be recalculated.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.RecalculationSettings.DiscountCoupons">
            <summary>
            Indicates whether flat discount coupon values will be recalculated.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.RecalculationSettings.VolumeDiscounts">
            <summary>
            Indicates whether flat volume discount will be recalculated.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.RecalculationSettings.CreditEvents">
            <summary>
            Indicates whether customer credit and its history will be recalculated.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.RecalculationSettings.ShippingOptions">
            <summary>
            Indicates whether shipping options charges and costs will be recalculated.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.RecalculationSettings.Documents">
            <summary>
            Indicates whether prices in used in products will be recalculated.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.RecalculationSettings.ShippingFreeLimit">
            <summary>
            Indicates whether free shipping limit will be recalculated.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.RecalculationSettings.Orders">
            <summary>
            Indicates whether order total price and ordet items' prices in main currency will be recalculated.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.EProductReminder">
            <summary>
            Provides an ITask interface to send notifications to users about their expiring e-product downloads.
            If started as global scheduled task, it sends notifications about expiring e-products on all sites.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.EProductReminder.Execute(CMS.Scheduler.TaskInfo)">
            <summary>
            Executes the task.
            </summary>
            <param name="task">Task to process</param>
        </member>
        <member name="M:CMS.Ecommerce.EProductReminder.GetNotificationEmail(CMS.Ecommerce.EProductReminder.NotificationData)">
            <summary>
            Returns notification email message according to given notification data.
            </summary>
            <param name="notificationData">Notification data</param>
        </member>
        <member name="M:CMS.Ecommerce.EProductReminder.GetNotificationEmailMacroResolver(CMS.Ecommerce.EProductReminder.NotificationData)">
            <summary>
            Get macro resolver for expiring e-products notification email.
            </summary>
            <param name="notificationData">Notification data</param>
        </member>
        <member name="T:CMS.Ecommerce.EProductReminder.NotificationData">
            <summary>
            Represents e-product expiration notification data.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.EProductReminder.NotificationData.CustomerEmail">
            <summary>
            Customer e-mail where the notification is sent
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.EProductReminder.NotificationData.EproductsTable">
            <summary>
            Table with customer expiring e-products
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.ShoppingCartCleaner">
            <summary>
            Provides an ITask interface to delete old shopping carts.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartCleaner.Execute(CMS.Scheduler.TaskInfo)">
            <summary>
            Executes the publish action.
            </summary>
            <param name="task">Task to process</param>
        </member>
        <member name="T:CMS.Ecommerce.ShoppingCartInfo">
            <summary>
            ShoppingCartInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ShoppingCartInfo.NOT_KNOWN">
            <summary>
            Not known double constant.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ShoppingCartInfo.NOT_KNOWN_INT">
            <summary>
            Not known integer constant.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ShoppingCartInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ShoppingCartInfo.mShoppingCartCustomData">
            <summary>
            Shopping cart custom data object
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfo.#ctor">
            <summary>
            Constructor - Creates an empty ShoppingCartInfo object. Use ShoppingCartInfo.CreateShoppingCartInfo(int siteId) instead!
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfo.#ctor(System.Int32)">
            <summary>
            Constructor - Creates an empty ShoppingCartInfo object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new ShoppingCartInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfo.CreateShoppingCartInfo(System.Data.DataRow)">
            <summary>
            Returns new ShoppingCartInfo object created from the given DataRow.
            </summary>
            <param name="dr">DataRow with shopping cart data</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfo.CreateShoppingCartInfo(System.Int32)">
            <summary>
            Returns new empty ShoppingCartInfo object.
            </summary>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfo.CreateShoppingCartInfo(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Returns new ShoppingCartInfo object created from deserialized data.
            </summary>
            <param name="info">Data for deserialization the ShoppingCartInfo object should be created from</param>
            <param name="context">Streaming context</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfo.UpdateShoppingCartCustomData">
            <summary>
            Updates shopping cart custom data in DataClass.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets object data.
            </summary>
            <param name="info">Serialization info</param>
            <param name="context">Serialization context</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor for deserialization.
            </summary>
            <param name="info">Serialization inf</param>
            <param name="context">Streaming context</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfo.RegisterProperties">
            <summary>
            Register the custom properties
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfo.SetShoppingCartItem(CMS.Ecommerce.ShoppingCartItemParameters)">
            <summary>
            Adds product (and its product options) to the shopping cart object. 
            If such product configuration already exists in the shopping cart, only  its quantity is updated.
            Added/updated shopping cart item is returned.
            </summary>        
            <param name="itemParams">Parameters of the shopping cart item which should be used to perform the adding or updating.</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfo.GetShoppingCartItem(System.Int32)">
            <summary>
            Returns shopping cart item from the shopping cart object.
            </summary>
            <param name="cartItemId">Shopping cart item ID</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfo.GetShoppingCartItem(System.Guid)">
            <summary>
            Returns shopping cart item from the shopping cart object.
            </summary>        
            <param name="cartItemGuid">Shopping cart item GUID</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfo.RemoveShoppingCartItem(System.Int32)">
            <summary>
            Removes shopping cart item and its product options from the shopping cart object.
            </summary>
            <param name="cartItemId">Shopping cart item ID</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfo.RemoveShoppingCartItem(System.Guid)">
            <summary>
            Removes shopping cart item and its product options from the shopping cart object.
            </summary>
            <param name="cartItemGuid">Shopping cart item GUID</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfo.InvalidateCalculations">
            <summary>
            Invalidates all calcualions.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfo.ApplyExchangeRate(System.Double)">
            <summary>
            Returns price in shopping cart currency.
            </summary>
            <param name="price">Price in site main currency to which the exchange rate should be applied</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfo.ApplyExchangeRate(System.Double,System.Boolean)">
            <summary>
            Returns price in shopping cart currency.
            </summary>
            <param name="price">Price to which the exchange rate should be applied</param>
            <param name="forGlobalItems">
            True - exchange rate for global items is used (price is expected in global main currency), 
            False - exchange rate for site items is used (price is expected in site main currency).</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfo.ApplyExchangeRateFromGlobalMainCurrency(System.Double)">
            <summary>
            Returns price in main currency of the site the shopping cart belongs to.
            </summary>
            <param name="price">Price in global main currency to which the exchange rate should be applied</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfo.RoundTo(System.Double)">
            <summary>
            Returns rounded price using the shopping cart currency settings.
            </summary>
            <param name="price">Price to be rounded</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfo.GetFormattedPrice(System.Double)">
            <summary>
            Returns formatted price using the shopping cart currency formatting string.
            </summary>
            <param name="price">Price to be formatted</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfo.GetFormattedPrice(System.Double,System.Boolean)">
            <summary>
            Returns formatted price using the shopping cart currency formatting string.
            </summary>
            <param name="price">Price to be formatted</param>
            <param name="rounded">True - price is rounded using the shopping cart currency settings before formatting</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfo.InvalidateCalculations(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Invalidates specific calcualations. Content taxes and shipping taxes are not cleared.
            </summary>
            <param name="contentTable">True - Shopping cart content table is cleared</param>
            <param name="contentTaxesTable">True - Shopping cart content taxes table is cleared</param>
            <param name="shippingTaxesTable">True - Shopping cart shipping taxes table is cleared</param>
            <param name="totals">True - Shopping cart totals (discounts, taxes, prices and shipping) are cleared</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfo.InvalidateCalculations(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Invalidates specific calculations.
            </summary>
            <param name="content">True - Shopping cart content table is cleared, shopping cart items and discounts indicators are invalidated</param>
            <param name="contentTaxesTable">True - Shopping cart content taxes table is cleared</param>
            <param name="shippingTaxesTable">True - Shopping cart shipping taxes table is cleared</param>
            <param name="totals">True - Shopping cart totals (discounts, taxes, prices and shipping) are cleared</param>
            <param name="contentTaxes">True - Shopping cart content taxes are cleared</param>
            <param name="shippingTaxes">True - Shopping cart shipping taxes are cleared</param>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.ShoppingCartID">
            <summary>
            Shopping cart ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.ShoppingCartSiteID">
            <summary>
            Shopping cart site ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.ShoppingCartShippingOptionID">
            <summary>
            Shopping cart shipping option ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.ShoppingCartPaymentOptionID">
            <summary>
            Shopping cart payment option ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.ShoppingCartCustomerID">
            <summary>
            Shopping cart customer ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.ShoppingCartUserID">
            <summary>
            ID of the registered user the shopping cart belongs to.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.ShoppingCartBillingAddressID">
            <summary>
            Shopping cart billing address ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.ShoppingCartShippingAddressID">
            <summary>
            Shopping cart shipping address ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.ShoppingCartCompanyAddressID">
            <summary>
            Shopping cart company address ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.ShoppingCartDiscountCouponID">
            <summary>
            Shopping cart discount coupon ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.ShoppingCartCurrencyID">
            <summary>
            Shopping cart currency ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.ShoppingCartNote">
            <summary>
            Shopping cart note.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.ShoppingCartGUID">
            <summary>
            Shopping cart GUID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.ShoppingCartLastUpdate">
            <summary>
            Date and time when the shopping cart was last updated.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.ShoppingCartCustomData">
            <summary>
            Shopping cart custom data.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.Order">
            <summary>
            Order data. Loaded when the shopping cart is created from an existing order, otherwise it is null.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.CustomerInfoObj">
            <summary>
            Customer info object.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.UserInfoObj">
            <summary>
            UserInfo object.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.DiscountLevelInfoObj">
            <summary>
            Customer's global discount level.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.SiteDiscountLevel">
            <summary>
            Customer's discount level for the site the shopping cart belongs to.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.DiscountCouponInfoObj">
            <summary>
            Discount coupon information.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.ShippingOptionInfoObj">
            <summary>
            Selected shipping option.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.CurrencyInfoObj">
            <summary>
            Selected currency.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.PaymentOptionInfoObj">
            <summary>
            Selected payment method.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.ContentTaxes">
            <summary>
            Taxes which should be applied to the shopping cart items.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.ShippingTaxes">
            <summary>
            Taxes which should be applied to the selected shipping option.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.ContentTable">
            <summary>
            Table with the shopping cart items.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.ContentTaxesTable">
            <summary>
            Table with the summary of the taxes which were applied to the shopping cart items.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.ShippingTaxesTable">
            <summary>
            Table with the summary of the taxes which were applied to the selected shipping option.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.TotalPrice">
            <summary>
            Total price of the shoppping cart in shopping cart currency. All discounts, taxes and shipping are included.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.TotalPriceInMainCurrency">
            <summary>
            Total price of the shoppping cart in site main currency. All discounts, taxes and shipping are included.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.TotalItemsPrice">
            <summary>
            Total price of all shoppping cart items in shopping cart currency. Items discounts and taxes are included.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.TotalItemsPriceInMainCurrency">
            <summary>
            Total price of all shoppping cart items in site main currency. Items discounts and taxes are included.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.OrderDiscount">
            <summary>
            Discount which is applied to the items total price. It is in shopping cart currency.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.OrderDiscountInMainCurrency">
            <summary>
            Discount which is applied to the items total price. It is in site main currency.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.TotalTax">
            <summary>
            Total tax which is applied to all shopping cart items altogether. It is in shopping cart currency.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.TotalTaxInMainCurrency">
            <summary>
            Total tax which is applied to all shopping cart items altogether. It is in site main currency.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.Shipping">
            <summary>
            Shipping cost without taxes. Shipping free limit is applied. Value is in shopping cart currency.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.ShippingInMainCurrency">
            <summary>
            Shipping cost without taxes. Shipping free limit is applied. Value is in site main currency.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.TotalShipping">
            <summary>
            Total shipping in shopping cart currency. Shipping taxes are included.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.TotalShippingInMainCurrency">
            <summary>
            Total shipping in site main currency. Shipping taxes are included.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.RoundedTotalPrice">
            <summary>
            Rounded total price in shopping cart currency. It is rounded according to the shopping cart currency rules.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.RoundedTotalPriceInMainCurrency">
            <summary>
            Rounded total price in site main currency. It is rounded according to the site main currency rules.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.ExchangeRate">
            <summary>
            Exchange rate from site main currency to shopping cart currency. 
            This exchange rate is applied to all site items (products, discounts, taxes, shipping option) which are present in the shopping cart to express their price in shopping curt currency.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.ExchangeRateForGlobalItems">
            <summary>
            Exchange rate from global main currency to shopping cart currency. 
            This exchange rate is applied to all global items (products, discounts, taxes, shipping option) which are present in the shopping cart to express their price in shopping curt currency.
            If site uses global currencies, it is equeal to exchange rate from site main currency to shopping cart currency.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.ExchangeRateToMainCurrency">
            <summary>
            Exchange rate from global main currency to site main currency. 
            This exchange rate is applied to all global items (products, discounts, taxes, shipping option) which are present in the shopping cart to express their price in site main currency.
            If site uses global currencies, it is equeal to 1.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.CartItems">
            <summary>
            List of shopping cart items.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.PaymentGatewayCustomData">
            <summary>
            Payment gateway custom data.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.TotalItemsWeight">
            <summary>
            Total weight of shopping cart items.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.SiteName">
            <summary>
            Name of the site to which the shopping cart belongs.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.IsCreatedFromOrder">
            <summary>
            Indicates if shopping cart object is created from order. 
            It is set automatically when shopping cart object is created by GetShoppingCartInfoFromOrder method.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.OrderId">
            <summary>
            ID of the order to which the shopping cart belongs or from which the shopping cart was created.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.IsDiscountApplied">
            <summary>
            TRUE - some discount is applied at least to one shopping cart item, FALSE - no discount is applied to shopping cart items.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.IsDiscountCouponApplied">
            <summary>
            TRUE - discount coupon is applied at least to one shopping cart item, otherwise FALSE.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.PrivateDataCleared">
            <summary>
            Indicates if private data were cleared from this shopping cart object. 
            It is set automatically when shopping cart private data are cleared by ClearShoppingCartPrivateData method.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.ShoppingCartCulture">
            <summary>
            Shopping cart order culture (or culture of the order user created using the shopping cart).
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.CountryID">
            <summary>
            Country ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.StateID">
            <summary>
            State ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.CheckAvailableItems">
            <summary>
            Indicates whether shopping cart items should be checked for availability.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.ItemsNotAvailable">
            <summary>
            Indicates whether some shopping cart product items are not available.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.ShoppingCartInfoProvider">
            <summary>
            Class providing ShoppingCartInfo management.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.GetShoppingCarts(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all shopping carts matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.GetShoppingCarts(System.String,System.String)">
            <summary>
            Returns dataset of all shopping carts matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.GetShoppingCartInfo(System.Int32)">
            <summary>
            Returns shopping cart with specified ID.
            </summary>
            <param name="cartId">Shopping cart ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.GetShoppingCartInfo(System.Guid)">
            <summary>
            Returns shopping cart with specified GUID.
            </summary>
            <param name="cartGuid">Shopping cart GUID</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.SetShoppingCartInfo(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Sets (updates or inserts) specified shopping cart.
            </summary>
            <param name="cartObj">Shopping cart to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.DeleteShoppingCartInfo(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Deletes specified shopping cart.
            </summary>
            <param name="cartObj">Shopping cart to be deleted</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.DeleteShoppingCartInfo(System.Int32)">
            <summary>
            Deletes shopping cart with specified ID.
            </summary>
            <param name="cartId">Shopping cart ID</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.GetShoppingCarts(System.String,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Returns dataset of all shopping carts for specified site matching the specified parameters.
            </summary>       
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
            <param name="siteId">Site ID</param>            
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.GetShoppingCarts(System.Int32)">
            <summary>
            Returns dataset of all shopping carts for specified site.
            </summary>
            <param name="siteId">Site ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.GetExpiredShoppingCarts(System.Int32)">
            <summary>
            Returns shopping carts that are expired (by default older than 30 days).
            </summary>
            <param name="siteId">Site ID</param> 
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.GetShoppingCartInfo(System.Int32,System.String)">
            <summary>
            Returns shopping cart of the specified user.
            </summary>
            <param name="userId">ID of the user who is the owner of the shopping cart</param>  
            <param name="siteName">Name of the site to which the shopping cart belongs</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.GetShoppingCartInfoFromOrder(System.Int32)">
            <summary>
            Returns ShoppingCartInfo object created from the order data.
            </summary>
            <param name="orderId">ID of the order from which the shopping cart should be created</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.DeleteShoppingCartInfo(System.Guid)">
            <summary>
            Deletes shopping cart with specified GUID.
            </summary>
            <param name="cartGuid">Shopping cart GUID</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.DeleteShoppingCartInfo(System.Int32,System.String)">
            <summary>
            Deletes shopping cart of the specified user.
            </summary>
            <param name="userId">ID of the user who is the owner of the shopping cart</param>  
            <param name="siteName">Name of the site to which the shopping cart belongs</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.DeleteShoppingCartItems(System.Int32)">
            <summary>
            Deletes all items of the specified shopping cart.
            </summary>
            <param name="cartId">Shopping cart ID</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.ClearShoppingCartPrivateData(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Clears customer's private data from shopping cart object.
            </summary>
            <param name="cartObj">Shopping cart object</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.EmptyShoppingCart(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Removes all items from specified shopping cart object.
            </summary>
            <param name="cartObj">Shopping cart object</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.SetOrder(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Creates or updates order based on the data of the specified shopping cart.
            </summary>
            <param name="cartObj">Shopping cart data</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.SetOrder(CMS.Ecommerce.ShoppingCartInfo,System.Boolean)">
            <summary>
            Creates or updates order based on the data of the specified shopping cart.
            </summary>
            <param name="cartObj">Shopping cart data</param>
            <param name="generateInvoice">Indicates if new invoice should be generated from the new order data. It is True by default.</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.SetOrderItems(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Creates or updates order items based on the items of the specified shopping cart.
            </summary>
            <param name="cartObj">Shopping cart data</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.CheckShoppingCart(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Checks shopping cart items. If check fails, the specified error messages seperated by semicolon are returned, otherwise an empty string is returned.
            The following conditions must be met to pass the check:
            1)All shopping cart items are enabled 2)Max units in one order are not exceeded 
            3)There is enough units in the inventory 4) Customer is registered, if there is a membership type product in the cart
            5)Product validity is valid, if there is a membership or e-product type product in the cart
            </summary>
            <param name="cart">Shopping cart to check</param>       
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.CreateShoppingCartInfo(System.Int32)">
            <summary>
            Returns new empty shopping cart object.
            </summary>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.CreateShoppingCartInfo(System.Data.DataRow)">
            <summary>
            Returns new empty shopping cart object created from the given data row.
            </summary>
            <param name="dr">Data row with shopping cart data</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.CreateShoppingCartInfo(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Returns new empty shopping cart object created from deserialized input data.
            </summary>
            <param name="info">Data for deserialization from which the shopping cart object should be created</param>
            <param name="context">Streaming context</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.EvaluateShoppingCart(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Recalculates the whole shopping cart (discounts and taxes of all shopping cart items, content table, content taxes table, shipping and shipping taxes table).
            </summary>
            <param name="cart">Shopping cart</param>       
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.EvaluateShoppingCartItems(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Recalculates discounts and taxes of all shoppping cart items.
            </summary>
            <param name="cart">Shopping cart</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.EvaluateContent(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Recalculates shopping cart content table.
            </summary>
            <param name="cart">Shopping cart</param>       
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.EvaluateContentTaxes(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Recalculates content taxes table (table with summary of all taxes which were applied to the shopping cart items).
            </summary>
            <param name="cart">Shopping cart</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.EvaluateShippingTaxes(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Recalculates shipping taxes table (table with summary of all taxes which were applied to the selected shipping option).
            </summary>
            <param name="cart">Shopping cart</param>    
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.CreateContentTable">
            <summary>
            Creates an empty shopping cart content table.
            </summary>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.FilterContentTable(System.Data.DataTable)">
            <summary>
            Filters shopping cart content table.
            </summary>
            <param name="table">Shopping cart content table</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.CreateContentRow(CMS.Ecommerce.ShoppingCartItemInfo,System.Data.DataTable)">
            <summary>
            Creates one row of the content table with the data which are retrieved from the specified shopping cart item.
            </summary>
            <param name="item">Shopping cart item</param>
            <param name="table">Table from which the content row is created</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.CreateContentTaxesTable">
            <summary>
            Creates an empty content taxes table.
            </summary>         
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.CreateContentTaxRow(CMS.Ecommerce.ShoppingCartItemInfo,System.Data.DataTable,System.Data.DataRow)">
            <summary>
            Creates one row of the content taxes table with the data which are retrieved from the specified shopping cart item tax.
            </summary>
            <param name="item">Shopping cart item</param>
            <param name="taxes">Table from which the tax row is created</param>
            <param name="tax">Shopping cart item tax which is used for initialization of the tax row</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.SetContentTaxRow(CMS.Ecommerce.ShoppingCartItemInfo,System.Data.DataTable)">
            <summary>
            Appends or updates taxes records in table specified by contentTaxesTable parameter according to given item taxes.
            </summary>
            <param name="item">Item which tax classes are to be included to contentTaxesTable</param>
            <param name="contentTaxesTable">Shopping cart content taxes table</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.UpdateContentTaxRow(System.Data.DataRow,System.Data.DataRow)">
            <summary>
            Updates tax record specified by contentTaxRow parameter according to given item tax.
            </summary>
            <param name="contentTaxRow">Content tax row to be be updated.</param>
            <param name="itemTaxRow">Item tax row used as source of data.</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.CreateShippingTaxesTable">
            <summary>
            Creates an empty table where taxes summary of the selected shipping option will be stored.
            </summary>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.CreateShippingTaxRow(CMS.Ecommerce.ShoppingCartInfo,System.Data.DataTable,System.Data.DataRow)">
            <summary>
            Creates one row of the shipping taxes table with the data which are retrieved from the specified shipping option tax.
            </summary>
            <param name="cart">Shopping cart</param>
            <param name="taxes">Table from which the tax row is created</param>
            <param name="shippingTax">Shipping tax which is used for initialization of the tax row</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.CalculateTotalPrice(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Calculates total price of the shoppping cart. All discounts, taxes and shipping are included.
            </summary>
            <param name="cart">Shopping cart</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.CalculateTotalItemsPrice(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Calculates total price of all shoppping cart items in main currency. Discounts and taxes of the shopping cart items are included.
            </summary>
            <param name="cart">Shopping cart</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.CalculateTotalItemsWeight(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Calculates total weight of all shoppping cart items.
            </summary>
            <param name="cart">Shopping cart</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.CalculateOrderDiscount(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Calculates discount which should be applied to the total items price.
            </summary>
            <param name="cart">Shopping cart</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.CalculateTotalTax(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Calculates total tax which is applied to all shopping cart items altogether. Result is in site main currency.
            </summary>
            <param name="cart">Shopping cart</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.SetShoppingCartItem(CMS.Ecommerce.ShoppingCartInfo,CMS.Ecommerce.ShoppingCartItemParameters)">
            <summary>
            Adds product (and its product options) to the specified shopping cart object. 
            If such product configuration already exists in the shopping cart, only  its quantity is updated.
            Added/updated shopping cart item is returned.
            </summary>
            <param name="cart">Shopping cart</param>        
            <param name="itemParams">Parameters of the shopping cart item which should be used to perform the adding or updating.</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.CheckNewShoppingCartItems(CMS.Ecommerce.ShoppingCartInfo,CMS.Ecommerce.ShoppingCartItemParameters)">
            <summary>
            Check new shopping cart items (product-site binding, product option - product binding and needed product options. 
            Returns true on success. 
            </summary>
            <param name="cart">Shopping cart object to check SKUs for.</param>
            <param name="itemParams">Parameters of the shopping cart item which should be used to perform the check.</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.GetShoppingCartItem(CMS.Ecommerce.ShoppingCartInfo,System.Int32)">
            <summary>
            Returns shopping cart item from the specified shopping cart object.
            </summary>
            <param name="cart">Shopping cart</param>
            <param name="cartItemId">Shopping cart item ID</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.GetShoppingCartItem(CMS.Ecommerce.ShoppingCartInfo,System.Guid)">
            <summary>
            Returns shopping cart item from the specified shopping cart object.
            </summary>
            <param name="cart">Shopping cart</param>
            <param name="cartItemGuid">Shopping cart item GUID</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.RemoveShoppingCartItem(CMS.Ecommerce.ShoppingCartInfo,System.Int32)">
            <summary>
            Removes shopping cart item and its product options from the specified shopping cart object.
            </summary>
            <param name="cart">Shopping cart</param>
            <param name="cartItemId">Shopping cart item ID</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.RemoveShoppingCartItem(CMS.Ecommerce.ShoppingCartInfo,System.Guid)">
            <summary>
            Removes shopping cart item and its product options from the specified shopping cart object.
            </summary>
            <param name="cart">Shopping cart</param>
            <param name="cartItemGuid">Shopping cart item GUID</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.RemoveShoppingCartItem(CMS.Ecommerce.ShoppingCartInfo,CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Removes shopping cart item, related bundle items and its product options from the specified shopping cart object.
            </summary>
            <param name="cart">Shopping cart</param>
            <param name="item">Shopping cart item</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.AddShoppingCartItem(CMS.Ecommerce.ShoppingCartInfo,CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Adds new initialized item to the shopping cart items collection.
            </summary>
            <param name="cart">Shopping cart</param>
            <param name="item">Shopping cart item</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.IsProductTypeInShoppingCart(CMS.Ecommerce.ShoppingCartInfo,CMS.Ecommerce.SKUProductTypeEnum)">
            <summary>
            Returns true, if there is at least one product of the specified type in the shopping cart.
            </summary>
            <param name="cart">Shopping cart</param>
            <param name="type">Product type to search for</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.GetShoppingCartResolver(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Returns initialized shopping cart resolver.
            </summary>
            <param name="cart">Shopping cart data</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.GetShoppingCartResolver(CMS.Ecommerce.ShoppingCartInfo,System.Boolean)">
            <summary>
            Returns initialized shopping cart resolver.
            </summary>
            <param name="cart">Shopping cart data to be used for resolver initialization</param>
            <param name="specialMacros">If true, special macros are added to the resolver (due to the backward compatibility).</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.GetOrderInvoice(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Returns the HTML code for the order invoice.
            </summary>
            <param name="cart">Shopping cart data used for generating invoice</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.GetShoppingCartsInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all shopping carts matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.GetShoppingCartInfoInternal(System.Int32)">
            <summary>
            Returns shopping cart with specified ID.
            </summary>
            <param name="cartId">Shopping cart ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.GetShoppingCartInfoInternal(System.Guid)">
            <summary>
            Returns shopping cart with specified GUID.
            </summary>
            <param name="cartGuid">Shopping cart GUID</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.SetShoppingCartInfoInternal(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Sets (updates or inserts) specified shopping cart.
            </summary>
            <param name="cartObj">Shopping cart to be set</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.DeleteShoppingCartInfoInternal(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Deletes specified shopping cart.
            </summary>
            <param name="cartObj">Shopping cart to be deleted</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.GetShoppingCartsInternal(System.String,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Returns dataset of all shopping carts for specified site matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
            <param name="siteId">Site ID</param> 
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.GetExpiredShoppingCartsInternal(System.Int32)">
            <summary>
            Returns shopping carts that are expired (by default older than 30 days).
            </summary>
            <param name="siteId">Site ID</param> 
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.GetShoppingCartInfoInternal(System.Int32,System.String)">
            <summary>
            Returns shopping cart of the specified user.
            </summary>
            <param name="userId">ID of the user who is the owner of the shopping cart</param>  
            <param name="siteName">Name of the site to which the shopping cart belongs</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.GetShoppingCartInfoFromOrderInternal(System.Int32)">
            <summary>
            Returns ShoppingCartInfo object created from the order data.
            </summary>
            <param name="orderId">ID of the order from which the shopping cart should be created</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.DeleteShoppingCartItemsInternal(System.Int32)">
            <summary>
            Deletes items of the specified shopping cart.
            </summary>
            <param name="cartId">Shopping cart ID</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.ClearShoppingCartPrivateDataInternal(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Clears customer's private data from shopping cart.
            </summary>
            <param name="cartObj">Shopping cart object</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.EmptyShoppingCartInternal(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Removes all items from specified shopping cart object.
            </summary>
            <param name="cartObj">Shopping cart object</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.SetOrderInternal(CMS.Ecommerce.ShoppingCartInfo,System.Boolean)">
            <summary>
            Creates or updates order based on the data of the specified shopping cart.
            </summary>
            <param name="cartObj">Shopping cart data</param>
            <param name="generateInvoice">Indicates if new invoice should be generated from the new order data. It is True by default.</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.SetOrderItemsInternal(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Creates or updates order items based on the items of the specified shopping cart.
            </summary>
            <param name="cartObj">Shopping cart data</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.CheckShoppingCartInternal(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Checks shopping cart items. If check fails, the specified error messages seperated by semicolon are returned, otherwise an empty string is returned.
            The following conditions must be met to pass the check:
            1)All shopping cart items are enabled 2)Max units in one order are not exceeded 
            3)There is enough units in the inventory 4) Customer is registered, if there is a membership type product in the cart
            5)Product validity is valid, if there is a membership or e-product type product in the cart
            </summary>
            <param name="cart">Shopping cart to check</param>  
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.CreateShoppingCartInfoInternal(System.Int32)">
            <summary>
            Returns new empty shopping cart object.
            </summary>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.CreateShoppingCartInfoInternal(System.Data.DataRow)">
            <summary>
            Returns new empty shopping cart object created from the given data row.
            </summary>
            <param name="dr">Data row with shopping cart data</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.CreateShoppingCartInfoInternal(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Returns new empty shopping cart object created from deserialized input data.
            </summary>
            <param name="info">Data for deserialization from which the shopping cart object should be created</param>
            <param name="context">Streaming context</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.EvaluateShoppingCartInternal(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Recalculates the whole shopping cart (discounts and taxes of all shopping cart items, content table, content taxes table, shipping and shipping taxes table).
            </summary>
            <param name="cart">Shopping cart</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.EvaluateShoppingCartItemsInternal(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Recalculates discounts and taxes of all shoppping cart items.
            </summary>
            <param name="cart">Shopping cart</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.EvaluateContentInternal(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Recalculates shopping cart content table.
            </summary>
            <param name="cart">Shopping cart</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.EvaluateContentTaxesInternal(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Recalculates content taxes table (table with summary of all taxes which were applied to the shopping cart items).
            </summary>
            <param name="cart">Shopping cart</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.EvaluateShippingTaxesInternal(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Recalculates shipping taxes table (table with summary of all taxes which were applied to the selected shipping option).
            </summary>
            <param name="cart">Shopping cart</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.CreateContentTableInternal">
            <summary>
            Creates an empty shopping cart content table.
            </summary>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.FilterContentTableInternal(System.Data.DataTable)">
            <summary>
            Filters shopping cart content table.
            </summary>
            <param name="table">Shopping cart content table</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.CreateContentRowInternal(CMS.Ecommerce.ShoppingCartItemInfo,System.Data.DataTable)">
            <summary>
            Creates one row of the content table with the data which are retrieved from the specified shopping cart item.
            </summary>
            <param name="item">Shopping cart item</param>
            <param name="table">Table from which the content row is created</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.CreateContentTaxesTableInternal">
            <summary>
            Creates an empty content taxes table.
            </summary>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.CreateContentTaxRowInternal(CMS.Ecommerce.ShoppingCartItemInfo,System.Data.DataTable,System.Data.DataRow)">
            <summary>
            Creates one row of the content taxes table with the data which are retrieved from the specified shopping cart item tax.
            </summary>
            <param name="item">Shopping cart item</param>
            <param name="taxes">Table from which the tax row is created</param>
            <param name="tax">Shopping cart item tax which is used for initialization of the tax row</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.SetContentTaxRowInternal(CMS.Ecommerce.ShoppingCartItemInfo,System.Data.DataTable)">
            <summary>
            Appends or updates taxes records in table specified by contentTaxesTable parameter according to given item taxes.
            </summary>
            <param name="item">Item which tax classes are to be included to content taxes table</param>
            <param name="contentTaxesTable">Shopping cart content taxes table</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.UpdateContentTaxRowInternal(System.Data.DataRow,System.Data.DataRow)">
            <summary>
            Updates tax record specified by contentTaxRow parameter according to given item tax.
            </summary>
            <param name="contentTaxRow">Content tax row to be be updated.</param>
            <param name="itemTaxRow">Item tax row used as source of data.</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.GetContentTaxRowInternal(System.Data.DataTable,System.Int32)">
            <summary>
            Returns row with speciffied tax class ID from given taxes table. Null is returned when tax not found.
            </summary>
            <param name="contentTaxesTable">Table with shopping cart content taxes</param>
            <param name="taxClassId">ID of the tax class to look for</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.CreateShippingTaxesTableInternal">
            <summary>
            Creates an empty shipping taxes table (table where taxes summary of the selected shipping option will be stored).
            </summary>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.CreateShippingTaxRowInternal(CMS.Ecommerce.ShoppingCartInfo,System.Data.DataTable,System.Data.DataRow)">
            <summary>
            Creates one row of the shipping taxes table with the data which are retrieved from the specified shipping option tax.
            </summary>
            <param name="cart">Shopping cart</param>
            <param name="taxes">Table from which the tax row is created</param>
            <param name="tax">Shipping tax which is used for initialization of the tax row</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.CalculateShippingTaxInternal(CMS.Ecommerce.ShoppingCartInfo,System.Data.DataTable,System.Data.DataRow)">
            <summary>
            Calculates single tax which is applied to shipping option. Result is in site main currency.
            </summary>
            <param name="cart">Shopping cart</param>
            <param name="taxes">Table with taxes which were already calculated</param>
            <param name="tax">Data of the tax which is used for tax calculation</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.CalculateTotalPriceInternal(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Calculates total price of the shoppping cart. All discounts, taxes and shipping are included.
            </summary>
            <param name="cart">Shopping cart</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.CalculateTotalItemsPriceInternal(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Calculates total price of all shoppping cart items in main currency. Discounts and taxes of the shopping cart items are included.
            </summary>
            <param name="cart">Shopping cart</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.CalculateTotalItemsWeightInternal(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Calculates total weight of all shoppping cart items.
            </summary>
            <param name="cart">Shopping cart</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.CalculateOrderDiscountInternal(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Calculates discount which should be applied to the total items price.
            </summary>
            <param name="cart">Shopping cart</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.CalculateTotalTaxInternal(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Calculates total tax which is applied to all shopping cart items altogether. Result is in site main currency.
            </summary>
            <param name="cart">Shopping cart</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.SetShoppingCartItemInternal(CMS.Ecommerce.ShoppingCartInfo,CMS.Ecommerce.ShoppingCartItemParameters)">
            <summary>
            Adds product (and its product options) to the specified shopping cart object. If such product configuration already exists in the shopping cart, only  its quantity is updated.
            Added/updated shopping cart item is returned.
            </summary>
            <param name="cart">Shopping cart</param>        
            <param name="itemParams">Parameters of the shopping cart item which should be used to perform the adding or updating.</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.CheckNewShoppingCartItemsInternal(CMS.Ecommerce.ShoppingCartInfo,CMS.Ecommerce.ShoppingCartItemParameters)">
            <summary>
            Check new shopping cart items (product-site binding, product option - product binding and needed product options. 
            Returns true on success. 
            </summary>
            <param name="cart">Shopping cart object to check SKUs for.</param>
            <param name="itemParams">Parameters of the shopping cart item which should be used to perform the check.</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.GetShoppingCartItemInternal(CMS.Ecommerce.ShoppingCartInfo,System.Int32)">
            <summary>
            Returns shopping cart item from the specified shopping cart object.
            </summary>
            <param name="cart">Shopping cart</param>
            <param name="cartItemId">Shopping cart item ID</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.GetShoppingCartItemInternal(CMS.Ecommerce.ShoppingCartInfo,System.Guid)">
            <summary>
            Returns shopping cart item from the specified shopping cart object.
            </summary>
            <param name="cart">Shopping cart</param>
            <param name="cartItemGuid">Shopping cart item GUID</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.RemoveShoppingCartItemInternal(CMS.Ecommerce.ShoppingCartInfo,CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Removes shopping cart item, related bundle items and its product options from the specified shopping cart object.
            </summary>
            <param name="cart">Shopping cart</param>
            <param name="cartItem">Shopping cart item</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.AddShoppingCartItemInternal(CMS.Ecommerce.ShoppingCartInfo,CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Adds new initialized item to the shopping cart items collection.
            </summary>
            <param name="cart">Shopping cart</param>
            <param name="item">Shopping cart item</param> 
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.AddShoppingCartItemInternal(CMS.Ecommerce.ShoppingCartInfo,CMS.Ecommerce.ShoppingCartItemParameters)">
            <summary>
            Adds new item to the shopping cart object and returns its object.
            </summary>
            <param name="cart">Shopping cart</param>
            <param name="itemParams">Parameters from which the new shopping cart item is initialized.</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.UpdateShoppingCartItemInternal(CMS.Ecommerce.ShoppingCartItemInfo,CMS.Ecommerce.ShoppingCartItemParameters)">
            <summary>
            Updates shopping cart item in the specified shopping cart object. By default only units of the specified shopping cart item and units of its product options are updated.
            </summary>
            <param name="item">Shopping cart item to be updated.</param>
            <param name="itemParams">Parameters of the shopping cart item which should be used to perform the update. 
            By default only Quantity parameter is used.</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.GetShoppingCartItemInternal(CMS.Ecommerce.ShoppingCartInfo,CMS.Ecommerce.ShoppingCartItemParameters)">
            <summary>
            Returns specified shopping cart item from the given shopping cart object. If such item is not found, null is returned. 
            By default shopping cart item is searched according to the product SKUID and SKUIDs of its product options.
            </summary>
            <param name="cart">Shopping cart</param>        
            <param name="itemParams">Parameters of the shopping cart item which should be used to perform the search.</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.IsProductTypeInShoppingCartInternal(CMS.Ecommerce.ShoppingCartInfo,CMS.Ecommerce.SKUProductTypeEnum)">
            <summary>
            Returns true, if there is at least one product of the specified type in the shopping cart.
            </summary>
            <param name="cart">Shopping cart</param>
            <param name="type">Product type to search for</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.GetShoppingCartResolverInternal(CMS.Ecommerce.ShoppingCartInfo,System.Boolean)">
            <summary>
            Returns initialized shopping cart resolver
            </summary>
            <param name="cart">Shopping cart data to be used for resolver initialization</param>
            <param name="specialMacros">If true, special macros are added to the resolver (due to the backward compatibility).</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.GetOrderInvoiceInternal(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Returns the HTML code for the order invoice.
            </summary>
            <param name="cart">Shopping cart data used for generating invoice</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.GetShoppingCartResolverData(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Gets the data for the shopping cart resolver. (selector -> data object) of the shopping cart objects
            </summary>
            <param name="cart">Shopping cart from which the data are loaded</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.GetShoppingCartResolverSpecialMacros(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Gets the array of old macros, couples (macro, replacement) for the shopping cart resolver (Due to the backward compatibility).
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.ShoppingCartItemInfo">
            <summary>
            Shopping cart item data container class.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ShoppingCartItemInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfo.#ctor">
            <summary>
            Constructor - Creates an empty ShoppingCartItemInfo object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new ShoppingCartItemInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor - Creates a new ShoppingCartItemInfo object from serialized data.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets object data.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfo.InvalidateCalculations">
            <summary>
            Invalidates all calculations of the shopping cart item.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfo.InvalidateCalculations(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Invalidates calculated discounts, taxes and prices.
            </summary>
            <param name="discounts">True - Both shopping cart item table with calculated discounts and all discounts totals are cleared.</param>
            <param name="taxes">True - Both shopping cart item table with calculated taxes and all taxes totals are cleared.</param>
            <param name="discountsTotals">True - Only shopping cart item discounts totals are cleared.</param>
            <param name="taxesTotals">True - Only shopping cart item taxes totals are cleared.</param> 
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfo.ApplyExchangeRate(System.Double)">
            <summary>
            Returns price in shopping cart currency.
            </summary>
            <param name="price">Price in site main currency to which the exchange rate should be applied</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfo.ApplyExchangeRate(System.Double,System.Boolean)">
            <summary>
            Returns price in shopping cart currency.
            </summary>
            <param name="price">Price to which the shopping cart exchange rate should be applied</param>
            <param name="forGlobalItems">True - shopping cart exchange rate for global items is used, False - shopping cart exchange rate for site items is used</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfo.ApplyExchangeRateFromGlobalMainCurrency(System.Double)">
            <summary>
            Returns price in main currency of the site to which the shopping cart belongs.
            </summary>
            <param name="price">Price in global main currency to which the exchange rate should be applied</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfo.RegisterProperties">
            <summary>
            Registers the properties of this object
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.CartItemID">
            <summary>
            Shopping cart item ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.CartItemGUID">
            <summary>
            Shopping cart item unique identifier. Shopping cart item means collection of the product and its selected product options.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.CartItemParentGUID">
            <summary>
            Unique identifier of the parent shopping cart item. When set current SKU is a product option, otherwise it is a product.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.CartItemBundleGUID">
            <summary>
            Unique identifier of parent shopping cart item. If set, this shopping cart item is a bundle item.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.CartItemCustomData">
            <summary>
            Shopping cart item custom data.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.ShoppingCartID">
            <summary>
            Shopping cart ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.SKUID">
            <summary>
            SKU ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.CartItemUnits">
            <summary>
            Amount of the current shopping cart item in the shopping cart. 
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.CartItemPrice">
            <summary>        
            If set, its value is used instead of the SKUPrice value in price calculation process. 
            It is set only when cart item represents donation. Then it is amount of donation. 
            </summary>    
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.CartItemIsPrivate">
            <summary>
            It is set only when cart item represents donation. Then it indicates if the donation is private.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.CartItemValidTo">
            <summary> 
            It is set only when cart item represents e-product and when the cart item was loaded from the existing e-product order item. 
            Then it is date and time until the e-product download links are valid.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.CartItemText">
            <summary>
            It is set only when cart item represents text product option. 
            Then it is the text defined by the customer, e.g. custom label for a T-shirt.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.OrderItem">
            <summary>
            Order item data. Loaded when the shopping cart is created from an existing order, otherwise it is null.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.ProductDiscounts">
            <summary>
            List of discounts which should be applied to the shopping cart item.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.ProductTaxes">
            <summary>
            List of taxes which should be applied to the shopping cart item.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.DiscountsTable">
            <summary>
            Table with calculated discounts which are applied to the shopping cart item. All table values are in site main currency.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.TaxesTable">
            <summary>
            Table with calculated taxes which are applied to the shopping cart item. All table values are in site main currency.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.UnitPrice">
            <summary>
            Unit price of the shopping cart item in shopping cart currency.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.UnitPriceInMainCurrency">
            <summary>
            Unit price of the shopping cart item in site main currency.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.UnitPriceAfterDiscount">
            <summary>
            Unit price after discount of the shopping cart item in shopping cart currency.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.UnitPriceAfterDiscountInMainCurrency">
            <summary>
            Unit price after discount of the shopping cart item in site main currency.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.UnitTotalPrice">
            <summary>
            Unit total price of the shopping cart item in shopping cart currency.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.UnitTotalPriceInMainCurrency">
            <summary>
            Unit total price of the shopping cart item in site main currency.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.UnitTotalDiscount">
            <summary>
            Unit discount of the shopping cart item in shopping cart currency.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.UnitTotalDiscountInMainCurrency">
            <summary>
            Unit discount of the shopping cart item in site main currency.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.UnitTotalTax">
            <summary>
            Unit tax of the shopping cart item in shopping cart currency.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.UnitTotalTaxInMainCurrency">
            <summary>
            Unit tax of the shopping cart item in site main currency.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.TotalPrice">
            <summary>
            Total price of the shopping cart item in shopping cart currency.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.TotalPriceInMainCurrency">
            <summary>
            Total price of the shopping cart item in site main currency.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.TotalDiscount">
            <summary>
            Total discount in shopping cart currency which is applied to the shopping cart item.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.TotalDiscountInMainCurrency">
            <summary>
            Total discount in site main currency which is applied to the shopping cart item.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.TotalTax">
            <summary>
            Total tax in shopping cart currency which is applied to the shopping cart item.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.TotalTaxInMainCurrency">
            <summary>
            Total tax in site main currency which is applied to the shopping cart item.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.UnitWeight">
            <summary>
            Unit weight of the shopping cart item.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.TotalWeight">
            <summary>
            Total weight of the shopping cart item.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.ShoppingCartObj">
            <summary>
            Data of the shopping cart to which the shopping cart item belongs.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.SKUObj">
            <summary>
            Data of the SKU (product) which is represented by the shopping cart item.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.ProductOptions">
            <summary>
            List with product options of the shopping cart item.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.IsProductOption">
            <summary>
            Indicates if shopping cart item is representing product or product option.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.BundleItems">
            <summary>
            List of bundle items of the shopping cart item.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.IsBundleItem">
            <summary>
            Indicates if shopping cart item is representing bundle item.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.ParentProduct">
            <summary>
            Shopping cart item which represents product in which the current product option is included. 
            If the current item is not product option, returns null.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.ParentBundle">
            <summary>
            Shopping cart item which represents bundle product in which the current bundle item is included. 
            If the current item is not bundle item, returns null.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.IsPartialDiscountApplied">
            <summary>
            Determines whether there is a discount which is not applied to all units of the shopping cart item
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.ShoppingCartItemInfoProvider">
            <summary>
            Class providing ShoppingCartItemInfo management.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.GetShoppingCartItems(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all shopping cart items matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.GetShoppingCartItems(System.String,System.String)">
            <summary>
            Returns dataset of all shopping cart items matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.GetShoppingCartItemInfo(System.Int32)">
            <summary>
            Returns shopping cart item with specified ID.
            </summary>
            <param name="itemId">Shopping cart item ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.GetShoppingCartItemInfo(System.Guid)">
            <summary>
            Returns shopping cart item with specified GUID.
            </summary>
            <param name="itemGuid">Shopping cart item GUID</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.SetShoppingCartItemInfo(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Sets (updates or inserts) specified shopping cart item.
            </summary>
            <param name="itemObj">Shopping cart item to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.DeleteShoppingCartItemInfo(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Deletes specified shopping cart item.
            </summary>
            <param name="itemObj">Shopping cart item to be deleted</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.DeleteShoppingCartItemInfo(System.Int32)">
            <summary>
            Deletes shopping cart item with specified ID.
            </summary>
            <param name="itemId">Shopping cart item ID</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.DeleteShoppingCartItemInfo(System.Guid)">
            <summary>
            Deletes shopping cart item with specified GUID.
            </summary>
            <param name="itemGuid">Shopping cart item GUID</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.GetShoppingCartItemInfo(CMS.Ecommerce.OrderItemInfo,CMS.Ecommerce.SKUInfo)">
            <summary>
            Returns shoppping cart item created from the order item data.
            </summary>
            <param name="item">Order item</param>
            <param name="sku">Current data of the product (SKU) which is associated with the order item</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.GetShoppingCartItems(System.Int32)">
            <summary>
            Returns DataSet with all shopping cart items data of the specified cart. DataSet includes both SKU data and shopping cart item data.
            </summary>
            <param name="cartId">Shopping cart ID</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.GetShoppingCartItemsFromOrder(System.Int32)">
            <summary>
            Returns DataSet with all shopping cart items of the specified order. DataSet includes both SKU data and order item data.
            </summary>
            <param name="orderId">Order ID</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.LoadShoppingCartItems(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Loads shopping cart items into the specified shopping cart. 
            If shopping cart is created from an order, cart items are loaded from the corresponding order items.
            </summary>
            <param name="cart">Shopping cart</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.IsProductWithTextOption(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Indicates if specified shopping cart item is representing product with at least one text option.
            </summary>
            <param name="item">Shopping cart item to check.</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.CheckShoppingCartItem(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Checks shopping cart item in the shopping cart. If check fails the, specified error message is returned, otherwise an empty string is returned.
            The following conditions must be met to pass the check:
            1)Shopping cart item is enabled 2)Max units in one order are not exceeded 
            3)There is enough units in the inventory 4) Customer is registered, if it is a membership type product 
            5)Product validity is valid, if it is a membership or e-product type product
            </summary>
            <param name="item">Shopping cart item to check</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.GetSKUOrderUnits(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Returns sum of all units of the specified SKU in the order from which the shopping cart item is loaded.
            </summary>
            <param name="item">Shopping cart item which is loaded from the order (has order data).</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.GetSKUShoppingCartUnits(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Returns sum of all units of the specified SKU in the shopping cart to which the shopping cart item belongs. 
            </summary>
            <param name="item">Shopping cart item.</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.GetShoppingCartItemResolver(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Returns initialized shopping item cart resolver.
            </summary>
            <param name="item">Shopping cart item data to be used for resolver initialization</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.EvaluateShoppingCartItem(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Calculates shopping cart item discounts and taxes.
            </summary>
            <param name="item">Shopping cart item</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.EvaluateDiscounts(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Calculates shopping cart item discounts.
            </summary>
            <param name="item">Shopping cart item</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.EvaluateTaxes(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Calculates shopping cart item taxes.
            </summary>
            <param name="item">Shopping cart item</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.CreateDiscountsTable">
            <summary>
            Creates empty table for calculated shopping cart item discounts.
            </summary>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.CreateTaxesTable">
            <summary>
            Creates empty table for calculated shopping cart item taxes.
            </summary>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.CreateDiscountRow(CMS.Ecommerce.ShoppingCartItemInfo,CMS.Ecommerce.IItemDiscount)">
            <summary>
            Creates one row of the discounts table with the data which are calculated from the shopping cart item and specified discount.
            </summary>
            <param name="item">Shopping cart item</param>
            <param name="discount">Discount which should be applied to the shopping cart item</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.CreateTaxRow(CMS.Ecommerce.ShoppingCartItemInfo,CMS.Ecommerce.IItemTax)">
            <summary>
            Creates one row of the taxes table with the data which are calculated from the shopping cart item and specified tax.
            </summary>
            <param name="item">Shopping cart item</param>
            <param name="tax">Tax which should be applied to the shopping cart item</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.GetDiscounts(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Returns list of all discounts which should be applied to the specified shopping cart item.
            </summary>
            <param name="item">Shopping cart item</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.CalculateUnitDiscount(CMS.Ecommerce.ShoppingCartItemInfo,CMS.Ecommerce.IItemDiscount)">
            <summary>
            Calculates single discount which is applied to one shopping cart item unit. Result is in site main currency.
            </summary>
            <param name="item">Shopping cart item</param>
            <param name="discount">Discount which should be applied to the shopping cart item</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.CalculateUnitTax(CMS.Ecommerce.ShoppingCartItemInfo,CMS.Ecommerce.IItemTax)">
            <summary>
            Calculates single tax which is applied to one shopping cart item unit. Result is in site main currency.
            </summary>
            <param name="item">Shopping cart item</param>
            <param name="tax">Data of the tax which is used for unit tax calculation</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.CalculateSubtotalDiscount(CMS.Ecommerce.ShoppingCartItemInfo,CMS.Ecommerce.IItemDiscount,System.Double)">
            <summary>
            Calculates the subtotal of a single discount which is applied to all shopping cart item units altogether. Result is in site main currency.
            </summary>
            <param name="item">Shopping cart item</param>
            <param name="discount">Data of the discount which was used for unit discount calculation</param>
            <param name="unitDiscount">Calculated unit discount</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.CalculateSubtotalTax(CMS.Ecommerce.ShoppingCartItemInfo,CMS.Ecommerce.IItemTax,System.Double)">
            <summary>
            Calculates the subtotal of a single tax which is applied to all shopping cart item units altogether. Result is in site main currency.
            </summary>
            <param name="item">Shopping cart item</param>
            <param name="tax">Data of the tax which was used for unit tax calculation</param>
            <param name="unitTax">Calculated unit tax</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.CalculateUnitTotalDiscount(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>        
            Calculates the sum of all discounts which are applied to one shopping cart item unit altogether. Result is in site main currency.
            </summary>
            <param name="item">Shopping cart item</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.CalculateUnitTotalTax(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Calculates the sum of all taxes which are applied to one shopping cart item unit altogether. Result is in site main currency.
            </summary>
            <param name="item">Shopping cart item</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.CalculateTotalDiscount(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>        
            Calculates the sum of all discounts which are applied to all shopping cart item units altogether. Result is in site main currency.
            </summary>
            <param name="item">Shopping cart item</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.CalculateTotalTax(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Calculates the sum of all taxes which are applied to all shopping cart item units altogether. Result is in site main currency.
            </summary>
            <param name="item">Shopping cart item</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.CalculateUnitPrice(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Calculates the price of one shopping cart item unit. Result is in site main currency.
            </summary>
            <param name="item">Shopping cart item</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.CalculateUnitTotalPrice(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Calculates the total price of one shopping cart item unit. Shopping cart item unit total discount and unit total tax are included. Result is in site main currency.
            </summary>
            <param name="item">Shopping cart item</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.CalculateTotalPrice(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Calculates the total price of all shopping cart item units altogether. Shopping cart item total discount and total tax are included. Result is in site main currency.
            </summary>
            <param name="item">Shopping cart item</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.CalculateUnitWeight(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Calculates the weight of one shopping cart item unit. 'SKUWeight' field value of the corresponding SKU is returned by default.
            </summary>
            <param name="item">Shopping cart item</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.CalculateTotalWeight(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Calculates the total weight of all shopping cart item units altogether.
            </summary>
            <param name="item">Shopping cart item</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.CalculateUnitPriceAfterDiscount(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Returns unit price after the discounts which were already applied. Result is in site main currency.
            </summary>
            <param name="item">Shopping cart item</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.GetShoppingCartItemsInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all shopping cart items matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.GetShoppingCartItemInfoInternal(System.Int32)">
            <summary>
            Returns shopping cart item with specified ID.
            </summary>
            <param name="itemId">Shopping cart item ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.GetShoppingCartItemInfoInternal(System.Guid)">
            <summary>
            Returns shopping cart item with specified GUID.
            </summary>
            <param name="itemGuid">Shopping cart item GUID</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.SetShoppingCartItemInfoInternal(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Sets (updates or inserts) specified shopping cart item.
            </summary>
            <param name="itemObj">Shopping cart item to be set</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.DeleteShoppingCartItemInfoInternal(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Deletes specified shopping cart item.
            </summary>
            <param name="itemObj">Shopping cart item to be deleted</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.GetShoppingCartItemInfoInternal(CMS.Ecommerce.OrderItemInfo,CMS.Ecommerce.SKUInfo)">
            <summary>
            Returns shoppping cart item created from the order item data.
            </summary>
            <param name="item">Order item</param>
            <param name="sku">Current data of the product (SKU) which is associated with the order item</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.GetShoppingCartItemsInternal(System.Int32)">
            <summary>
            Returns DataSet with all shopping cart items data of the specified cart. DataSet includes both SKU data and shopping cart item data.
            </summary>
            <param name="cartId">Shopping cart ID</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.GetShoppingCartItemsFromOrderInternal(System.Int32)">
            <summary>
            Returns DataSet with all shopping cart items of the specified order. DataSet includes both SKU data and order item data.
            </summary>
            <param name="orderId">Order ID</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.LoadItemsFromCartInternal(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Loads shopping cart items into the specified shopping cart. 
            Shopping cart items are loaded from standard shopping cart items data.       
            </summary>
            <param name="cart">Shopping cart</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.LoadItemsFromOrderInternal(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Loads shopping cart items into the specified shopping cart. 
            Shopping cart items are loaded from items of the order from which the shopping cart is created.        
            </summary>
            <param name="cart">Shopping cart which is created from order data</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.IsProductWithTextOptionInternal(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Indicates if specified shopping cart item is representing product with at least one text option.
            </summary>
            <param name="item">Shopping cart item to check.</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.CheckShoppingCartItemInternal(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Checks shopping cart item in the shopping cart. If check fails the specified error message is returned, otherwise an empty string is returned.
            The following conditions must be met to pass the check:
            1)Shopping cart item is enabled 2)Max units in one order are not exceeded 
            3)There is enough units in the inventory 4) Customer is registered, if it is a membership type product 
            5)Product validity is valid, if it is a membership or e-product type product
            </summary>
            <param name="item">Shopping cart item to check</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.GetSKUOrderUnitsIternal(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Returns sum of all units of the specified SKU in the order from which the shopping cart item is loaded.
            </summary>
            <param name="item">Shopping cart item which is loaded from the order (has order data).</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.GetSKUShoppingCartUnitsInternal(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Returns sum of all units of the specified SKU in the shopping cart to which the shopping cart item belongs. 
            </summary>
            <param name="item">Shopping cart item.</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.GetShoppingCartItemResolverInternal(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Returns initialized shopping item cart resolver.
            </summary>
            <param name="item">Shopping cart item data to be used for resolver initialization</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.EvaluateShoppingCartItemInternal(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Calculates shopping cart item discounts and taxes.
            </summary>
            <param name="item">Shopping cart item</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.EvaluateDiscountsInternal(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Calculates shopping cart item discounts.
            </summary>
            <param name="item">Shopping cart item</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.EvaluateTaxesInternal(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Calculates shopping cart item taxes.
            </summary>
            <param name="item">Shopping cart item</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.CreateDiscountsTableInternal">
            <summary>
            Creates empty table for calculated shopping cart item discounts.
            </summary>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.CreateTaxesTableInternal">
            <summary>
            Creates empty table for calculated shopping cart item taxes.
            </summary>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.CreateDiscountRowInternal(CMS.Ecommerce.ShoppingCartItemInfo,CMS.Ecommerce.IItemDiscount)">
            <summary>
            Creates one row of the discounts table with the data which are calculated from the shopping cart item and specified discount.
            </summary>
            <param name="item">Shopping cart item</param>        
            <param name="discount">Discount which should be applied to the shopping cart item</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.CreateTaxRowInternal(CMS.Ecommerce.ShoppingCartItemInfo,CMS.Ecommerce.IItemTax)">
            <summary>
            Creates one row of the taxes table with the data which are calculated from the shopping cart item and specified tax.
            </summary>
            <param name="item">Shopping cart item</param>
            <param name="tax">Tax which should be applied to the shopping cart item</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.GetDiscountsInternal(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Returns the list of all discounts which should be applied to the specified shopping cart item.
            </summary>
            <param name="item">Shopping cart item</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.CalculateUnitDiscountInternal(CMS.Ecommerce.ShoppingCartItemInfo,CMS.Ecommerce.IItemDiscount)">
            <summary>
            Calculates single discount which is applied to one shopping cart item unit. Result is in site main currency.
            </summary>
            <param name="item">Shopping cart item</param>        
            <param name="discount">Discount which should be applied to the shopping cart item</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.CalculateUnitAverageDiscountInternal(CMS.Ecommerce.ShoppingCartItemInfo,CMS.Ecommerce.IItemDiscount,System.Double)">
            <summary>
            Calculates average discount per shopping cart item unit. 
            If discount is applied to all units of the shopping cart item average discount is equal to unit discount. Result is in site main currency.
            </summary>
            <param name="item">Shopping cart item</param>        
            <param name="discount">Discount which should be applied to the shopping cart item</param>
            <param name="subtotalDiscount">Calculated subtotal discount</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.CalculateUnitTaxInternal(CMS.Ecommerce.ShoppingCartItemInfo,CMS.Ecommerce.IItemTax)">
            <summary>
            Calculates single tax which is applied to one shopping cart item unit. Result is in site main currency.
            </summary>
            <param name="item">Shopping cart item</param>        
            <param name="tax">Data of the tax which is used for unit tax calculation</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.CalculateSubtotalDiscountInternal(CMS.Ecommerce.ShoppingCartItemInfo,CMS.Ecommerce.IItemDiscount,System.Double)">
            <summary>
            Calculates the subtotal of a single discount which is applied to all shopping cart item units altogether. Result is in site main currency.
            </summary>
            <param name="item">Shopping cart item</param>
            <param name="discount">Data of the discount which was used for unit discount calculation</param>
            <param name="unitDiscount">Calculated unit discount</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.CalculateSubtotalTaxInternal(CMS.Ecommerce.ShoppingCartItemInfo,CMS.Ecommerce.IItemTax,System.Double)">
            <summary>
            Calculates the subtotal of a single tax which is applied to all shopping cart item units altogether. Result is in site main currency.
            </summary>
            <param name="item">Shopping cart item</param>
            <param name="tax">Data of the tax which was used for unit tax calculation</param>
            <param name="unitTax">Calculated unit tax</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.CalculateUnitTotalDiscountInternal(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>        
            Calculates the sum of all discounts which are applied to one shopping cart item unit altogether. Result is in site main currency.
            </summary>
            <param name="item">Shopping cart item</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.CalculateUnitTotalTaxInternal(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Calculates the sum of all taxes which are applied to one shopping cart item unit altogether. Result is in site main currency.
            </summary>
            <param name="item">Shopping cart item</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.CalculateTotalDiscountInternal(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>        
            Calculates the sum of all discounts which are applied to all shopping cart item units altogether. Result is in site main currency.
            </summary>
            <param name="item">Shopping cart item</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.CalculateTotalTaxInternal(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Calculates the sum of all taxes which are applied to all shopping cart item units altogether. Result is in site main currency.
            </summary>
            <param name="item">Shopping cart item</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.CalculateUnitPriceInternal(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Calculates the price of one shopping cart item unit. Result is in site main currency.
            </summary>
            <param name="item">Shopping cart item</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.CalculateUnitTotalPriceInternal(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Calculates the total price of one shopping cart item unit. Shopping cart item unit total discount and unit total tax are included. Result is in site main currency.
            </summary>
            <param name="item">Shopping cart item</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.CalculateTotalPriceInternal(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Calculates the total price of all shopping cart item units altogether. Shopping cart item total discount and total tax are included. Result is in site main currency.
            </summary>
            <param name="item">Shopping cart item</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.CalculateUnitWeightInternal(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Calculates the weight of one shopping cart item unit. 'SKUWeight' field value of the corresponding SKU is returned by default.
            </summary>
            <param name="item">Shopping cart item</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.CalculateTotalWeightInternal(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Calculates the total weight of all shopping cart item units altogether.
            </summary>
            <param name="item">Shopping cart item</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.CalculateUnitPriceAfterDiscountInternal(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Returns unit price after the discounts which were already applied. Result is in site main currency.
            </summary>
            <param name="item">Shopping cart item</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.InitShoppingCartItems(System.Collections.Generic.List{CMS.Ecommerce.ShoppingCartItemInfo})">
            <summary>
            Sets product options of each parent cart item and puts all cart items to the proper order (parent1-parent1 children, parent2- parent2 children,...).
            </summary>
            <param name="cartItems">List of shopping cart item objects</param>
        </member>
        <member name="T:CMS.Ecommerce.ShopingCartModeEnum">
            <summary>
            Says how the customer is represented during shopping.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ShopingCartModeEnum.ExistingAccount">
            <summary>
            Customer will use existing account for registration.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ShopingCartModeEnum.NewAccount">
            <summary>
            Customer will create new account.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ShopingCartModeEnum.AnonymousCustomer">
            <summary>
            Customer will continue as anonymous.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.SKUDiscountCouponInfo">
            <summary>
            SKUDiscountCouponInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.SKUDiscountCouponInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SKUDiscountCouponInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SKUDiscountCouponInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SKUDiscountCouponInfo.#ctor">
            <summary>
            Constructor - Creates an empty SKUDiscountCouponInfo object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SKUDiscountCouponInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new SKUDiscountCouponInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SKUDiscountCouponInfo.CheckPermissions(CMS.SettingsProvider.PermissionsEnum,System.String,CMS.SettingsProvider.IUserInfo)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
        </member>
        <member name="P:CMS.Ecommerce.SKUDiscountCouponInfo.SKUID">
            <summary>
            ID of the SKU.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUDiscountCouponInfo.DiscountCouponID">
            <summary>
            ID of the coupon.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.SKUDiscountCouponInfoProvider">
            <summary>
            Class providing SKUDiscountCouponInfo management.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SKUDiscountCouponInfoProvider.GetSKUDiscountCoupons(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all relationships between SKUs and discount coupons matching the specified criteria.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUDiscountCouponInfoProvider.GetSKUDiscountCoupons(System.String,System.String)">
            <summary>
            Returns dataset of all relationships between SKUs and discount coupons matching the specified criteria.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUDiscountCouponInfoProvider.GetSKUDiscountCouponInfo(System.Int32,System.Int32)">
            <summary>
            Returns relationship between specified SKU and discount coupon.
            </summary>
            <param name="skuId">SKU ID</param>
            <param name="couponId">Discount coupon ID</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUDiscountCouponInfoProvider.SetSKUDiscountCouponInfo(CMS.Ecommerce.SKUDiscountCouponInfo)">
            <summary>
            Sets relationship between specified SKU and discount coupon.
            </summary>
            <param name="infoObj">SKU-discount coupon relationship to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUDiscountCouponInfoProvider.DeleteSKUDiscountCouponInfo(CMS.Ecommerce.SKUDiscountCouponInfo)">
            <summary>
            Deletes relationship between specified SKU and discount coupon.
            </summary>
            <param name="infoObj">SKU-discount coupon relationship to be deleted</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUDiscountCouponInfoProvider.AddDiscountCouponToSKU(System.Int32,System.Int32)">
            <summary>
            Sets relationship between specified SKU and discount coupon.
            </summary>  
            <param name="skuId">SKU ID</param>
            <param name="couponId">Discount coupon ID</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUDiscountCouponInfoProvider.RemoveDiscountCouponFromSKU(System.Int32,System.Int32)">
            <summary>
            Deletes relationship between specified SKU and discount coupon.
            </summary>
            <param name="skuId">SKU ID</param>
            <param name="couponId">Discount coupon ID</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUDiscountCouponInfoProvider.IsSKUAssignedToDiscountCoupon(System.Int32,System.Int32)">
            <summary>
            Returns true if discount coupon can be applied with the SKU.
            </summary>
            <param name="skuId">SKU ID</param>
            <param name="couponId">Discount coupon ID</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUDiscountCouponInfoProvider.GetSKUDiscountCouponsInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all relationships between SKUs and discount coupons matching the specified criteria.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUDiscountCouponInfoProvider.GetSKUDiscountCouponInfoInternal(System.Int32,System.Int32)">
            <summary>
            Returns relationship between specified SKU and discount coupon.
            </summary>
            <param name="skuId">SKU ID</param>
            <param name="couponId">Discount coupon ID</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUDiscountCouponInfoProvider.SetSKUDiscountCouponInfoInternal(CMS.Ecommerce.SKUDiscountCouponInfo)">
            <summary>
            Sets relationship between specified SKU and discount coupon.
            </summary>
            <param name="infoObj">SKU-discount coupon relationship to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUDiscountCouponInfoProvider.DeleteSKUDiscountCouponInfoInternal(CMS.Ecommerce.SKUDiscountCouponInfo)">
            <summary>
            Deletes relationship between specified SKU and discount coupon.
            </summary>
            <param name="infoObj">SKU-discount coupon relationship to be deleted</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUDiscountCouponInfoProvider.IsSKUAssignedToDiscountCouponInternal(System.Int32,System.Int32)">
            <summary>
            Returns true if discount coupon can be applied with the SKU.
            </summary>
            <param name="skuId">SKU ID</param>
            <param name="couponId">Discount coupon ID</param>
        </member>
        <member name="T:CMS.Ecommerce.SKUInfo">
            <summary>
            SKUInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.SKUInfo.TYPEINFOSKU">
            <summary>
            Type information SKU.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.SKUInfo.TYPEINFOOPTIONSKU">
            <summary>
            Type information Option SKU.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.SKUInfo.mSKUCustomData">
            <summary>
            SKU custom data.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfo.GetObjectTypeResourceKey">
            <summary>
            Gets the resource key for the name of the object type.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor for deserialization.
            </summary>
            <param name="info">Serialization inf</param>
            <param name="context">Streaming context</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfo.#ctor">
            <summary>
            Constructor - Creates an empty SKUInfo object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new SKUInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets object data.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfo.CheckPermissions(CMS.SettingsProvider.PermissionsEnum,System.String,CMS.SettingsProvider.IUserInfo)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.TypeInfo">
            <summary>
            Type info.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.SKUPriceAfterDiscountInMainCurrency">
            <summary>
            Product price after catalogue discounts. 
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.SKUDiscounts">
            <summary>
            List of catalogue discounts which should be applied to the SKU
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.SKUInternalStatusID">
            <summary>
            Product internal status ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.SKUDepartmentID">
            <summary>
            Product department ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.SKUManufacturerID">
            <summary>
            Product manufacturer ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.SKUDescription">
            <summary>
            Product description.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.SKUName">
            <summary>
            Product name.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.SKUID">
            <summary>
            Product ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.SKUNumber">
            <summary>
            Product number.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.SKUEnabled">
            <summary>
            Product enabled.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.SKUAvailableInDays">
            <summary>
            Product available in days.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.SKUPublicStatusID">
            <summary>
            Product public status ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.SKUSupplierID">
            <summary>
            Product supplier ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.SKUPrice">
            <summary>
            Product price.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.SKUGUID">
            <summary>
            Product GUID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.SKUSiteID">
            <summary>
            SKU site ID. Set to 0 for global SKU.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.SKUImagePath">
            <summary>
            Product image path.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.SKUWeight">
            <summary>
            Product weight.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.SKUHeight">
            <summary>
            Product height.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.SKUWidth">
            <summary>
            Product width.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.SKUDepth">
            <summary>
            Product depth.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.SKUAvailableItems">
            <summary>
            Product available items.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.SKUSellOnlyAvailable">
            <summary>
            Product sell only available.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.SKUCustomData">
            <summary>
            Product custom data.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.SKUOptionCategoryID">
            <summary>
            SKU option category ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.SKUOrder">
            <summary>
            SKU option order within the parent option category.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.SKULastModified">
            <summary>
            Object last modified.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.SKUCreated">
            <summary>
            Object creation date.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.IsProductOption">
            <summary>
            Indicates if current SKU is representing product or product option.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.SKUProductType">
            <summary>
            Product type.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.SKUConversionName">
            <summary>
            Conversion name of the product
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.SKUConversionValue">
            <summary>
            Conversion value of the product
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.SKUMembershipGUID">
            <summary>
            GUID of the membership associated with SKU.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.SKUValidity">
            <summary>
            Validity type of SKU.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.SKUValidFor">
            <summary>
            Multiplier for period defined by SKU validity type.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.SKUValidUntil">
            <summary>
            Date until which products represented by SKU are valid.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.SKUMaxDownloads">
            <summary>
            Maximum number of downloads.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.SKUBundleInventoryType">
            <summary>
            Indicates how bundle product is removed from inventory.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.SKUPrivateDonation">
            <summary>
            Indicates if donation represented by SKU is allowed to be private.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.SKUMinPrice">
            <summary>
            Minimum allowed price of SKU.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.SKUMaxPrice">
            <summary>
            Maximum allowed price of SKU.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.SKUNeedsShipping">
            <summary>
            Indicates if SKU needs to be shipped.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.SKUMaxItemsInOrder">
            <summary>
            Maximum number of items of SKU allowed to be in one order.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.SKUInfoProvider">
            <summary>
            Class providing SKUInfo management.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.GetSKUs(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all products and product options matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.GetSKUs(System.String,System.String)">
            <summary>
            Returns dataset of all products and product options matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.GetSKUInfo(System.Int32)">
            <summary>
            Returns product with specified ID.
            </summary>
            <param name="skuId">Product ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.GetSKUInfo(System.Guid)">
            <summary>
            Returns product with specified GUID.
            </summary>
            <param name="skuGuid">Product GUID</param>        
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.SetSKUInfo(CMS.Ecommerce.SKUInfo)">
            <summary>
            Sets (updates or inserts) specified product.
            </summary>
            <param name="skuObj">Product to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.DeleteSKUInfo(CMS.Ecommerce.SKUInfo)">
            <summary>
            Deletes specified product.
            </summary>
            <param name="skuObj">Product to be deleted</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.DeleteSKUInfo(System.Int32)">
            <summary>
            Deletes product with specified ID.
            </summary>
            <param name="skuId">Product ID</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.Clear(System.Boolean)">
            <summary>
            Clears hashtables.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.GetSKUInfo(CMS.Ecommerce.ShoppingCartItemInfo,CMS.Ecommerce.SKUInfo,CMS.Ecommerce.SKUInfo)">
            <summary>
            Returns SKU data for the specified shopping cart item.
            </summary>
            <param name="item">Shopping cart item.</param>
            <param name="newSku">Current SKU data loaded from the products catalog.</param>
            <param name="oldSku">Old SKU data loaded from the asscociated order item.</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.GetSKUs(System.String,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Returns dataset of all products and product options for specified site matching the specified parameters.
            </summary>       
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
            <param name="siteId">Site ID</param>            
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.GetSKUs(System.Int32,System.Boolean,System.Boolean,System.String,System.String)">
            <summary>
            Returns dataset of all products and/or product options for specified site matching the specified parameters.
            </summary>
            <param name="siteId">Site ID</param> 
            <param name="products">Indicates if products should be selected</param>
            <param name="productOptions">Indicates if product options should be selected</param>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.GetSKUList(System.String,System.String,System.String,System.Int32)">
            <summary>
            Returns dataset of all products including display names of product statuses. 
            This method is used to display list of products in the user interface.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>        
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.GetRelatedProductsByBuy(System.Int32,System.Int32,System.String)">
            <summary>
            Returns dataset with products which were bought together with specified product.
            </summary>
            <param name="skuId">Product ID</param>
            <param name="siteId">Site ID</param>
            <param name="where">Where condition</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.GetTopNProductsBySales(System.Int32,System.Int32,System.String)">
            <summary>
            Returns dataset with top N products by sales.
            </summary>
            <param name="topN">Number of products to be selected</param>
            <param name="siteId">Site ID</param>
            <param name="where">Where condition</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.GetSKUOptions(System.Int32,System.Boolean)">
            <summary>
            Returns dataset of all product options from specified product option category.
            </summary>
            <param name="categoryId">Product option category ID</param> 
            <param name="onlyEnabled">Indicates if only enabled product options should be selected</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.GetSKUOptionsCount(System.Int32)">
            <summary>
            Returns number of product options which are defined for the specified product option category.
            </summary>
            <param name="categoryId">Product option category ID</param> 
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.MoveSKUOptionUp(System.Int32)">
            <summary>
            Moves specified product option up within the parent option category.
            </summary>
            <param name="skuId">Product option ID</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.MoveSKUOptionDown(System.Int32)">
            <summary>
            Moves specified product option down within the parent option category.
            </summary>
            <param name="skuId">Product option ID</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.GetBundleItems(System.Int32)">
            <summary>
            Returns dataset of all bundle items for specified bundle SKU ID.
            </summary>
            <param name="bundleId">Bundle SKU ID</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.GetWishlistProducts(System.Int32,System.Int32)">
            <summary>
            Returns dataset with the products from specified user's wishlist.
            </summary>
            <param name="userId">ID of the user the wishlist belongs to</param>  
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.GetCouponProducts(System.Int32)">
            <summary>
            Returns the dataset of all products which are assigned to the specified discount coupon.
            </summary>
            <param name="couponId">Coupon ID</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.GetSKUUrl(System.Guid,System.String,System.String)">
            <summary>
            Returns user friendly URL of the specified product.
            </summary>
            <param name="skuGuid">Product unique identifier (GUID)</param>
            <param name="skuName">Product name</param>
            <param name="siteName">Site Name</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.GetSKUUrl(System.Guid,System.String)">
            <summary>
            Returns user friendly URL of the specified product.
            </summary>
            <param name="skuGuid">Product unique identifier (GUID)</param>
            <param name="skuName">Product name</param>        
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.UpdateInventory(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Updates products' available items according to the products' units of the specified shopping cart.
            </summary>
            <param name="cartObj">Shopping cart with some products</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.IsUserAuthorizedToModifySKU(CMS.Ecommerce.SKUInfo,System.String,CMS.SiteProvider.UserInfo)">
            <summary>
            Indicates if user is authorized to modify specific SKU. 
            For global SKU: 'EcommerceGlobalModify' permission is checked. 
            For site-specific SKU: 'EcommerceModify' OR 'ModifyProducts' permission is checked.
            </summary>
            <param name="skuObj">SKU to be checked</param>
            <param name="siteName">Site name</param>
            <param name="user">User to be checked</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.IsUserAuthorizedToModifySKU(System.Boolean,System.String,CMS.SiteProvider.UserInfo)">
            <summary>
            Indicates if user is authorized to modify SKUs.
            </summary>
            <param name="global">For global SKUs (global = True): 'EcommerceGlobalModify' permission is checked. 
            For site-specific SKUs (global = False): 'EcommerceModify' OR 'ModifyProducts' permission is checked.</param>        
            <param name="siteName">Site name</param>
            <param name="user">User to be checked</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.CheckDependencies(System.Int32)">
            <summary>
            Checks dependencies, returns true if dependent.
            </summary>
            <param name="skuId">Product identifier</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.LicenseVersionCheck(System.String,CMS.SettingsProvider.FeatureEnum,CMS.SettingsProvider.VersionActionEnum)">
            <summary>
            License version check.
            </summary>
            <param name="domain">Domain name</param>
            <param name="feature">Feature</param>
            <param name="action">Action to check</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.RecalculateProducts(System.Single,System.Int32,System.String,System.Int32)">
            <summary>
            Recalculates products (including product options) prices using the given coefficient.
            </summary>
            <param name="coefficient">Factor by which values are recalculated</param>        
            <param name="roundTo">Number of significant digits the number should be rounded to</param>
            <param name="where">Additional WHERE condition</param>
            <param name="siteId">Id of the site which records are to be recalculated</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.RecalculateProductDocuments(System.Single,System.Int32,System.String,System.Int32)">
            <summary>
            Recalculate prices in fields of all product documents which are mapped to SKU price field. This method is invoked 
            in case of changing main currency.
            </summary>
            <param name="coefficient">Factor by which values are recalculated</param>        
            <param name="roundTo">Number of significant digits the number should be rounded to</param>
            <param name="where">Additional WHERE condition for View_CMS_Tree_Joined filtering</param>
            <param name="siteId">Id of the site which main currency was changed (0 for global main currency changed)</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.SortProductOptionsAlphabetically(System.Int32)">
            <summary>
            Sorts product options of the specified option category alphabetically (A-Z).
            </summary>
            <param name="categoryId">ID of option category</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.HasSKUEnabledOptions(System.Int32)">
            <summary>
            Returns True if there are any enabled options categories with some enabled product options assigned to the specified SKU, otherwise returns False.
            </summary>
            <param name="skuId">SKU ID</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.CreateDefaultSKU(CMS.TreeEngine.TreeNode)">
            <summary>
            Creates default SKU for the document. Does not save the document. Returns true on success, otherwise false.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.UpdateSKUColumns(CMS.TreeEngine.TreeNode,CMS.Ecommerce.SKUInfo)">
            <summary>
            Updates the SKU's columns with data from given node.
            </summary>
            <param name="node">Document with the source data</param>
            <param name="si">SKU info object</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.UpdateSKUColumns(CMS.TreeEngine.TreeNode)">
            <summary>
            Updates given node's SKU with data from this node.
            </summary>
            <param name="node">Document to update</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.GetSKUProductTypeEnum(System.String)">
            <summary>
            Returns SKUProductType enum.
            </summary>
            <param name="skuProductType">SKU product type</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.GetSKUProductTypeString(CMS.Ecommerce.SKUProductTypeEnum)">
            <summary>
            Returns SKUProductType string.
            </summary>
            <param name="skuProductType">SKU product type</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.GetBundleInventoryTypeEnum(System.String)">
            <summary>
            Returns BundleInventoryType enum.
            </summary>
            <param name="bundleInventoryType">Bundle inventory type</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.GetBundleInventoryTypeString(CMS.Ecommerce.BundleInventoryTypeEnum)">
            <summary>
            Returns BundleInventoryType string.
            </summary>
            <param name="bundleInventoryType">Bundle inventory type</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.GetSKUPrice(CMS.Ecommerce.SKUInfo,CMS.Ecommerce.ShoppingCartInfo,System.Boolean,System.Boolean)">
            <summary>
            Returns product catalogue price based on the SKU data and shopping cart data. 
            Catalogue discounts and/or taxes are included optionally. Result is in site main currency.
            </summary>
            <param name="sku">SKU data</param>
            <param name="cart">Shopping cart data</param>
            <param name="discounts">True - catalogue discounts are applied to the price</param>
            <param name="taxes">True - catalogue taxes are applied to the discounted price</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.GetSKUPrice(CMS.Ecommerce.SKUInfo,CMS.Ecommerce.ShoppingCartInfo,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Returns product catalogue price based on the SKU data and shopping cart data. 
            Catalogue discounts and/or taxes are included optionally. Result is in site main currency.
            </summary>
            <param name="sku">SKU data</param>
            <param name="cart">Shopping cart data</param>
            <param name="discounts">True - catalogue discounts are applied to the price</param>
            <param name="taxes">True - catalogue taxes are applied to the discounted price</param>
            <param name="forCart">True - This method is called within the shopping cart calculations, False (default) - This method is called within the displaying price on the live site.</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.GetSKUFormattedPrice(CMS.Ecommerce.SKUInfo,CMS.Ecommerce.ShoppingCartInfo,System.Boolean,System.Boolean)">
            <summary>
            Returns formatted product catalogue price based on the SKU data and shopping cart data. 
            Catalogue discounts and/or taxes are included optionally. Result is in shopping cart currency.
            </summary>
            <param name="sku">SKU data</param>
            <param name="cart">Shopping cart data</param>
            <param name="discounts">True - catalogue discounts are applied to the price</param>
            <param name="taxes">True - catalogue taxes are applied to the discounted price</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.GetSKUPrice(CMS.Ecommerce.SKUInfo,CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Returns catalogue price of the given product based on the SKU data and shopping cart data. 
            By default it is loaded from the SKUPrice field.
            </summary>
            <param name="sku">SKU dta</param>
            <param name="cart">Shopping cart data</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.GetSKUsInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all products and product options matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.GetSKUInfoInternal(System.Int32)">
            <summary>
            Returns product with specified ID.
            </summary>
            <param name="skuId">Product ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.GetSKUInfoInternal(System.Guid)">
            <summary>
            Returns product with specified GUID.
            </summary>
            <param name="skuGuid">Product GUID</param>        
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.SetSKUInfoInternal(CMS.Ecommerce.SKUInfo)">
            <summary>
            Sets (updates or inserts) specified product.
            </summary>
            <param name="skuObj">Product to be set</param>        
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.DeleteSKUInfoInternal(CMS.Ecommerce.SKUInfo)">
            <summary>
            Deletes specified product.
            </summary>
            <param name="skuObj">Product to be deleted</param>        
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.GetSKUInfoInternal(CMS.Ecommerce.ShoppingCartItemInfo,CMS.Ecommerce.SKUInfo,CMS.Ecommerce.SKUInfo)">
            <summary>
            Returns SKU data for the specified shopping cart item.
            </summary>
            <param name="item">Shopping cart item.</param>
            <param name="newSku">Current SKU data loaded from the products catalog.</param>
            <param name="oldSku">Old SKU data loaded from the asscociated order item.</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.GetSKUsInternal(System.String,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Returns dataset of all products and product options for specified site matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
            <param name="siteId">Site ID</param> 
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.GetSKUsInternal(System.Int32,System.Boolean,System.Boolean,System.String,System.String)">
            <summary>
            Returns dataset of all products and/or product options for specified site matching the specified parameters.
            </summary>
            <param name="siteId">Site ID</param> 
            <param name="products">Indicates if products should be selected</param>
            <param name="productOptions">Indicates if product options should be selected</param>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.GetSKUListInternal(System.String,System.String,System.String,System.Int32)">
            <summary>
            Returns dataset of all products including display names of product statuses.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>        
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.GetRelatedProductsByBuyInternal(System.Int32,System.Int32,System.String)">
            <summary>
            Returns dataset with products which were bought together with specified product.
            </summary>
            <param name="skuId">Product ID</param>
            <param name="siteId">Site ID</param>
            <param name="where">Where condition</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.GetTopNProductsBySalesInternal(System.Int32,System.Int32,System.String)">
            <summary>
            Returns dataset with top N products by sales.
            </summary>
            <param name="topN">Number of products to be selected</param>
            <param name="siteId">Site ID</param>
            <param name="where">Where condition</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.GetSKUOptionsInternal(System.Int32,System.Boolean)">
            <summary>
            Returns dataset of all product options from specified product option category.
            </summary>
            <param name="categoryId">Product option category ID</param> 
            <param name="onlyEnabled">Indicates if only enabled product options should be selected</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.GetSKUOptionsCountInternal(System.Int32)">
            <summary>
            Returns number of product options which are defined for the specified product option category.
            </summary>
            <param name="categoryId">Product option category ID</param> 
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.MoveSKUOptionUpInternal(System.Int32)">
            <summary>
            Moves specified product option up within the parent option category.
            </summary>
            <param name="skuId">Product option ID</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.MoveSKUOptionDownInternal(System.Int32)">
            <summary>
            Moves specified product option down within the parent option category.
            </summary>
            <param name="skuId">Product option ID</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.GetBundleItemsInternal(System.Int32)">
            <summary>
            Returns dataset of all bundle items for specified bundle SKU ID.
            </summary>
            <param name="bundleId">Bundle SKU ID</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.GetWishlistProductsInternal(System.Int32,System.Int32)">
            <summary>
            Returns dataset with the products from specified user's wishlist.
            </summary>
            <param name="userId">ID of the user the wishlist belongs to</param>  
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.GetCouponProductsInternal(System.Int32)">
            <summary>
            Returns the dataset of all products which are assigned to the specified discount coupon.
            </summary>
            <param name="couponId">Coupon ID</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.GetSKUUrlInternal(System.Guid,System.String,System.String)">
            <summary>
            Returns user friendly URL of the specified product.
            </summary>
            <param name="skuGuid">Product unique identifier (GUID)</param>
            <param name="skuName">Product name</param>
            <param name="siteName">Site Name</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.UpdateInventoryInternal(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Updates products' available items in database according to the products' units of the specified shopping cart.
            </summary>
            <param name="cartObj">Shopping cart with some products</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.RecalculateProductsInternal(System.Single,System.Int32,System.String,System.Int32)">
            <summary>
            Recalculates products (including product options) prices using the given coefficient.
            </summary>
            <param name="coefficient">Factor by which values are recalculated</param>        
            <param name="roundTo">Number of significant digits the number should be rounded to</param>
            <param name="where">Additional WHERE condition</param>
            <param name="siteId">ID of the site which records are to be recalculated</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.RecalculateProductDocumentsInternal(System.Single,System.Int32,System.String,System.Int32)">
            <summary>
            Recalculate prices in fields of all product documents which are mapped to SKU price field. This method is invoked 
            in case of changing main currency.
            </summary>
            <param name="coefficient">Factor by which values are recalculated</param>        
            <param name="roundTo">Number of significant digits the number should be rounded to</param>
            <param name="where">Additional WHERE condition for View_CMS_Tree_Joined filtering</param>
            <param name="siteId">Id of the site which main currency was changed (0 for global main currency changed)</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.SortProductOptionsAlphabeticallyInternal(System.Int32)">
            <summary>
            Sorts product options of the specified option category alphabetically (A-Z).
            </summary>
            <param name="categoryId">Option category ID</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.HasSKUEnabledOptionsInternal(System.Int32)">
            <summary>
            Returns True if there are any enabled options categories with some enabled product options assigned to the specified SKU, otherwise returns False.
            </summary>
            <param name="skuId">SKU ID</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.CreateDefaultSKUInternal(CMS.TreeEngine.TreeNode)">
            <summary>
            Creates default SKU for the document. Does not save the document. Returns true on success, otherwise false.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.UpdateSKUColumnsInternal(CMS.TreeEngine.TreeNode,CMS.Ecommerce.SKUInfo)">
            <summary>
            Updates the SKU's columns with data from given node.
            </summary>
            <param name="node">Document with the source data</param>
            <param name="si">SKU info object</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.UpdateSKUColumnsInternal(CMS.TreeEngine.TreeNode)">
            <summary>
            Updates given node's SKU with data from this node.
            </summary>
            <param name="node">Document to update</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.GetSKUPriceInternal(CMS.Ecommerce.SKUInfo,CMS.Ecommerce.ShoppingCartInfo,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Returns product catalogue price based on the SKU data and the shopping cart data. 
            Discounts and/or taxes are included optionally. Result is in site main currency.
            </summary>
            <param name="sku">SKU data</param>
            <param name="cart">Shopping cart data</param>
            <param name="discounts">True - catalogue discounts are applied to the price</param>
            <param name="taxes">True - catalogue taxes are applied to the discounted price</param>
            <param name="forCart">True - This method is called within the shopping cart calculations, False - This method is called within the displaying price on the live site.</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.GetSKUFormattedPriceInternal(CMS.Ecommerce.SKUInfo,CMS.Ecommerce.ShoppingCartInfo,System.Boolean,System.Boolean)">
            <summary>
            Returns formatted product catalogue price based on the SKU data and the shopping cart data. 
            Discounts and/or taxes are included optionally. Result is in shopping cart currency.
            </summary>
            <param name="sku">SKU data</param>
            <param name="cart">Shopping cart data</param>
            <param name="discounts">True - catalogue discounts are applied to the price</param>
            <param name="taxes">True - catalogue taxes are applied to the discounted price</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.GetSKUPriceInternal(CMS.Ecommerce.SKUInfo,CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Returns catalogue price of the given product based on the SKU data and shopping cart data. 
            By default price is loaded from the SKUPrice field.
            </summary>
            <param name="sku">SKU dta</param>
            <param name="cart">Shopping cart data</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.GetSKUDiscountsInternal(CMS.Ecommerce.SKUInfo,CMS.Ecommerce.ShoppingCartInfo,System.Boolean)">
            <summary>
            Returns list of catalogue discounts which should be applied to the given product based on the product data and shopping cart data.
            </summary>
            <param name="sku">SKU data</param>
            <param name="cart">Shopping cart data</param>
            <param name="forCart">True - This method is called within the shopping cart calculations, False - This method is called within the displaying price on the live site.</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.CalculateSKUPriceAfterDiscountInternal(CMS.Ecommerce.SKUInfo,CMS.Ecommerce.ShoppingCartInfo,System.Boolean)">
            <summary>
            Calculates product price after all its catalogue discounts are applied, 
            meaning that SKUDiscounts and SKUPriceAfterDiscountInMainCurrency properties of the given sku will be initialized.
            </summary>
            <param name="sku">SKU data</param>
            <param name="cart">Shopping cart data</param>
            <param name="forCart">True - This method is called within the shopping cart calculations, False - This method is called within the displaying price on the live site.</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.CalculateSKUDiscountInternal(CMS.Ecommerce.SKUInfo,CMS.Ecommerce.ShoppingCartInfo,CMS.Ecommerce.IItemDiscount)">
            <summary>
            Calculates specified catalogue discount which should be applied to the given product. Result is in site main currency.
            Expects SKUPriceAfterDiscountInMainCurrency property to be initialized.
            </summary>
            <param name="sku">SKU data</param>
            <param name="cart">Shopping cart data</param>
            <param name="discount">Discount data</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.CalculateSKUTotalTaxInternal(CMS.Ecommerce.SKUInfo,CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Returns product total tax in site main currency based on the product data and the data of the shopping cart.
            This method is used
            </summary>
            <param name="sku">SKU data</param>
            <param name="cart">Shopping cart data</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.ClearEccomerceLicense">
            <summary>
            Clear e-commerce license.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.UpdateSearchIndex(CMS.Ecommerce.SKUInfo)">
            <summary>
            Updates search indes of depending nodes.
            </summary>
            <param name="skuObj">Product data</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.SetDefaultTaxes(CMS.Ecommerce.SKUInfo)">
            <summary>
            Sets default tax class to a specified product according to its department.
            </summary>
            <param name="skuObj">Product data</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.LogChangeOrderSynchronization(System.Int32)">
            <summary>
            Logs synchronization task when product options order was changed.
            </summary>
            <param name="categoryId">ID of the moved option.</param>
        </member>
        <member name="T:CMS.Ecommerce.SKUOptionCategoryInfo">
            <summary>
            SKUOptionCategoryInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.SKUOptionCategoryInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SKUOptionCategoryInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SKUOptionCategoryInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SKUOptionCategoryInfo.#ctor">
            <summary>
            Constructor - Creates an empty SKUOptionCategoryInfo object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SKUOptionCategoryInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new SKUOptionCategoryInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SKUOptionCategoryInfo.CheckPermissions(CMS.SettingsProvider.PermissionsEnum,System.String,CMS.SettingsProvider.IUserInfo)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
        </member>
        <member name="P:CMS.Ecommerce.SKUOptionCategoryInfo.SKUID">
            <summary>
            ID of the SKU.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUOptionCategoryInfo.CategoryID">
            <summary>
            ID of the category.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.SKUOptionCategoryInfoProvider">
            <summary>
            Class providing SKUOptionCategoryInfo management.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SKUOptionCategoryInfoProvider.GetSKUOptionCategories(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all relationships between categories and SKUs matching the specified criteria.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUOptionCategoryInfoProvider.GetSKUOptionCategories(System.String,System.String)">
            <summary>
            Returns dataset of all relationships between categories and SKUs matching the specified criteria.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUOptionCategoryInfoProvider.GetSKUOptionCategoryInfo(System.Int32,System.Int32)">
            <summary>
            Returns relationship between specified category and SKU.
            </summary>
            <param name="categoryId">Category ID</param>
            <param name="skuId">SKU ID</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUOptionCategoryInfoProvider.SetSKUOptionCategoryInfo(CMS.Ecommerce.SKUOptionCategoryInfo)">
            <summary>
            Sets relationship between specified category and SKU.
            </summary>
            <param name="infoObj">Category-SKU relationship to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUOptionCategoryInfoProvider.DeleteSKUOptionCategoryInfo(CMS.Ecommerce.SKUOptionCategoryInfo)">
            <summary>
            Deletes relationship between specified category and SKU.
            </summary>
            <param name="infoObj">Category-SKU relationship to be deleted</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUOptionCategoryInfoProvider.AddOptionCategoryToSKU(System.Int32,System.Int32)">
            <summary>
            Sets relationship between specified category and SKU.
            </summary>  
            <param name="categoryId">Category ID</param>
            <param name="skuId">SKU ID</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUOptionCategoryInfoProvider.RemoveOptionCategoryFromSKU(System.Int32,System.Int32)">
            <summary>
            Deletes relationship between specified category and SKU.
            </summary>
            <param name="categoryId">Category ID</param>
            <param name="skuId">SKU ID</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUOptionCategoryInfoProvider.GetSKUOptionCategoriesInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all relationships between categories and SKUs matching the specified criteria.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUOptionCategoryInfoProvider.GetSKUOptionCategoryInfoInternal(System.Int32,System.Int32)">
            <summary>
            Returns relationship between specified category and SKU.
            </summary>
            <param name="categoryId">Category ID</param>
            <param name="skuId">SKU ID</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUOptionCategoryInfoProvider.SetSKUOptionCategoryInfoInternal(CMS.Ecommerce.SKUOptionCategoryInfo)">
            <summary>
            Sets relationship between specified category and SKU.
            </summary>
            <param name="infoObj">Category-SKU relationship to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUOptionCategoryInfoProvider.DeleteSKUOptionCategoryInfoInternal(CMS.Ecommerce.SKUOptionCategoryInfo)">
            <summary>
            Deletes relationship between specified category and SKU.
            </summary>
            <param name="infoObj">Category-SKU relationship to be deleted</param>
        </member>
        <member name="T:CMS.Ecommerce.SKUTaxClassInfo">
            <summary>
            SKUTaxClassInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.SKUTaxClassInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SKUTaxClassInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SKUTaxClassInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SKUTaxClassInfo.#ctor">
            <summary>
            Constructor - Creates an empty SKUTaxClassInfo object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SKUTaxClassInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new SKUTaxClassInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SKUTaxClassInfo.CheckPermissions(CMS.SettingsProvider.PermissionsEnum,System.String,CMS.SettingsProvider.IUserInfo)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
        </member>
        <member name="P:CMS.Ecommerce.SKUTaxClassInfo.SKUID">
            <summary>
            ID of the SKU.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUTaxClassInfo.TaxClassID">
            <summary>
            ID of the tax class.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.SKUTaxClassInfoProvider">
            <summary>
            Class providing SKUTaxClassInfo management.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SKUTaxClassInfoProvider.GetSKUTaxClasses(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all relationships between SKUs and tax classes matching the specified criteria.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUTaxClassInfoProvider.GetSKUTaxClasses(System.String,System.String)">
            <summary>
            Returns dataset of all relationships between SKUs and tax classes matching the specified criteria.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUTaxClassInfoProvider.GetSKUTaxClassInfo(System.Int32,System.Int32)">
            <summary>
            Returns relationship between specified SKU and tax class.
            </summary>
            <param name="taxClassId">Tax class ID</param>
            <param name="skuId">SKU ID</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUTaxClassInfoProvider.SetSKUTaxClassInfo(CMS.Ecommerce.SKUTaxClassInfo)">
            <summary>
            Sets relationship between specified SKU and tax class.
            </summary>
            <param name="infoObj">SKU-tax class relationship to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUTaxClassInfoProvider.DeleteSKUTaxClassInfo(CMS.Ecommerce.SKUTaxClassInfo)">
            <summary>
            Deletes relationship between specified SKU and tax class.
            </summary>
            <param name="infoObj">SKU-tax class relationship to be deleted</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUTaxClassInfoProvider.AddTaxClassToSKU(System.Int32,System.Int32)">
            <summary>
            Sets relationship between specified SKU and tax class.
            </summary>  
            <param name="taxClassId">Tax class ID</param>
            <param name="skuId">SKU ID</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUTaxClassInfoProvider.RemoveTaxClassFromSKU(System.Int32,System.Int32)">
            <summary>
            Deletes relationship between specified SKU and tax class.
            </summary>
            <param name="taxClassId">Tax class ID</param>
            <param name="skuId">SKU ID</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUTaxClassInfoProvider.GetSKUTaxClassesInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all relationships between SKUs and tax classes matching the specified criteria.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUTaxClassInfoProvider.GetSKUTaxClassInfoInternal(System.Int32,System.Int32)">
            <summary>
            Returns relationship between specified SKU and tax class.
            </summary>
            <param name="taxClassId">Tax class ID</param>
            <param name="skuId">SKU ID</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUTaxClassInfoProvider.SetSKUTaxClassInfoInternal(CMS.Ecommerce.SKUTaxClassInfo)">
            <summary>
            Sets relationship between specified SKU and tax class.
            </summary>
            <param name="infoObj">SKU-tax class relationship to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUTaxClassInfoProvider.DeleteSKUTaxClassInfoInternal(CMS.Ecommerce.SKUTaxClassInfo)">
            <summary>
            Deletes relationship between specified SKU and tax class.
            </summary>
            <param name="infoObj">SKU-tax class relationship to be deleted</param>
        </member>
        <member name="T:CMS.Ecommerce.SupplierInfo">
            <summary>
            SupplierInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.SupplierInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SupplierInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SupplierInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SupplierInfo.#ctor">
            <summary>
            Constructor - Creates an empty SupplierInfo object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SupplierInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new SupplierInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SupplierInfo.CheckPermissions(CMS.SettingsProvider.PermissionsEnum,System.String,CMS.SettingsProvider.IUserInfo)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
        </member>
        <member name="P:CMS.Ecommerce.SupplierInfo.SupplierFax">
            <summary>
            Fax of the supplier.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SupplierInfo.SupplierEmail">
            <summary>
            E-mail of the supplier.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SupplierInfo.SupplierID">
            <summary>
            ID of the supplier.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SupplierInfo.SupplierPhone">
            <summary>
            Phone of the supplier.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SupplierInfo.SupplierDisplayName">
            <summary>
            Supplier display name.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SupplierInfo.SupplierEnabled">
            <summary>
            Supplier enabled.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SupplierInfo.SupplierGUID">
            <summary>
            Supplier GUID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SupplierInfo.SupplierLastModified">
            <summary>
            Object last modified.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SupplierInfo.SupplierSiteID">
            <summary>
            Supplier site ID. Set to 0 for global supplier.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.SupplierInfoProvider">
            <summary>
            Class providing SupplierInfo management.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SupplierInfoProvider.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SupplierInfoProvider.GetSuppliers(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all suppliers matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.Ecommerce.SupplierInfoProvider.GetSuppliers(System.String,System.String)">
            <summary>
            Returns dataset of all suppliers matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
        </member>
        <member name="M:CMS.Ecommerce.SupplierInfoProvider.GetSupplierInfo(System.Int32)">
            <summary>
            Returns supplier with specified ID.
            </summary>
            <param name="supplierId">Supplier ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.SupplierInfoProvider.SetSupplierInfo(CMS.Ecommerce.SupplierInfo)">
            <summary>
            Sets (updates or inserts) specified supplier.
            </summary>
            <param name="supplierObj">Supplier to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.SupplierInfoProvider.DeleteSupplierInfo(CMS.Ecommerce.SupplierInfo)">
            <summary>
            Deletes specified supplier.
            </summary>
            <param name="supplierObj">Supplier to be deleted</param>
        </member>
        <member name="M:CMS.Ecommerce.SupplierInfoProvider.DeleteSupplierInfo(System.Int32)">
            <summary>
            Deletes supplier with specified ID.
            </summary>
            <param name="supplierId">Supplier ID</param>
        </member>
        <member name="M:CMS.Ecommerce.SupplierInfoProvider.Clear(System.Boolean)">
            <summary>
            Clears hashtables.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.Ecommerce.SupplierInfoProvider.GetSuppliers(System.String,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Returns dataset of all suppliers for specified site matching the specified parameters.
            </summary>       
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
            <param name="siteId">Site ID</param>            
        </member>
        <member name="M:CMS.Ecommerce.SupplierInfoProvider.GetSuppliers(System.Int32,System.Boolean)">
            <summary>
            Returns dataset of all suppliers for specified site.
            </summary>
            <param name="siteId">Site ID</param>   
            <param name="onlyEnabled">True - only enable suppliers are returned.
            False - both enabled and disabled suppliers are returned.</param>
        </member>
        <member name="M:CMS.Ecommerce.SupplierInfoProvider.GetSupplierInfo(System.String,System.String)">
            <summary>
            Returns suppliers with specified display name.
            </summary>
            <param name="supplierName">Supplier display name</param>        
            <param name="siteName">Supplier site name</param>        
        </member>
        <member name="M:CMS.Ecommerce.SupplierInfoProvider.CheckDependencies(System.Int32)">
            <summary>
            Checks dependencies, returns true if dependent.
            </summary>
            <param name="supplierId">Supplier ID</param>
        </member>
        <member name="M:CMS.Ecommerce.SupplierInfoProvider.IsUserAuthorizedToModifySupplier(CMS.Ecommerce.SupplierInfo,System.String,CMS.SiteProvider.UserInfo)">
            <summary>
            Indicates if user is authorized to modify specific supplier. 
            For global supplier: 'EcommerceGlobalModify' permission is checked. 
            For site-specific supplier: 'EcommerceModify' OR 'ModifySuppliers' permission is checked.
            </summary>
            <param name="supplier">Supplier to be checked</param>        
            <param name="siteName">Site name</param>
            <param name="user">User to be checked</param>
        </member>
        <member name="M:CMS.Ecommerce.SupplierInfoProvider.IsUserAuthorizedToModifySupplier(System.Boolean,System.String,CMS.SiteProvider.UserInfo)">
            <summary>
            Indicates if user is authorized to modify suppliers.
            </summary>
            <param name="global">For global suppliers (global = True): 'EcommerceGlobalModify' permission is checked. 
            For site-specific suppliers (global = False): 'EcommerceModify' OR 'ModifySuppliers' permission is checked.</param>        
            <param name="siteName">Site name</param>
            <param name="user">User to be checked</param>
        </member>
        <member name="M:CMS.Ecommerce.SupplierInfoProvider.GetSuppliersInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all suppliers matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.Ecommerce.SupplierInfoProvider.GetSupplierInfoInternal(System.Int32)">
            <summary>
            Returns supplier with specified ID.
            </summary>
            <param name="supplierId">Supplier ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.SupplierInfoProvider.SetSupplierInfoInternal(CMS.Ecommerce.SupplierInfo)">
            <summary>
            Sets (updates or inserts) specified supplier.
            </summary>
            <param name="supplierObj">Supplier to be set</param>        
        </member>
        <member name="M:CMS.Ecommerce.SupplierInfoProvider.DeleteSupplierInfoInternal(CMS.Ecommerce.SupplierInfo)">
            <summary>
            Deletes specified supplier.
            </summary>
            <param name="supplierObj">Supplier to be deleted</param>        
        </member>
        <member name="M:CMS.Ecommerce.SupplierInfoProvider.GetSuppliersInternal(System.String,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Returns dataset of all suppliers for specified site matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.Ecommerce.SupplierInfoProvider.GetSuppliersInternal(System.Int32,System.Boolean)">
            <summary>
            Returns dataset of all suppliers for specified site.
            </summary>
            <param name="siteId">Site ID</param>   
            <param name="onlyEnabled">True - only enable suppliers are returned.
            False - both enabled and disabled suppliers are returned.</param>
        </member>
        <member name="M:CMS.Ecommerce.SupplierInfoProvider.GetSupplierInfoInternal(System.String,System.String)">
            <summary>
            Returns suppliers with specified display name.
            </summary>
            <param name="supplierName">Supplier display name</param>        
            <param name="siteName">Supplier site name</param>        
        </member>
        <member name="T:CMS.Ecommerce.TaxClassCountryInfo">
            <summary>
            TaxClassCountryInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.TaxClassCountryInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassCountryInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassCountryInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassCountryInfo.#ctor">
            <summary>
            Constructor - Creates an empty TaxClassCountryInfo object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassCountryInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new TaxClassCountryInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassCountryInfo.CheckPermissions(CMS.SettingsProvider.PermissionsEnum,System.String,CMS.SettingsProvider.IUserInfo)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
        </member>
        <member name="P:CMS.Ecommerce.TaxClassCountryInfo.TaxClassCountryID">
            <summary>
            Tax class - country relationship ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.TaxClassCountryInfo.TaxValue">
            <summary>
            Value of the tax.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.TaxClassCountryInfo.CountryID">
            <summary>
            ID of the country.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.TaxClassCountryInfo.TaxClassID">
            <summary>
            ID of the tax class.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.TaxClassCountryInfo.IsFlatValue">
            <summary>
            Indicates whether the value is flat or not.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.TaxClassCountryInfoProvider">
            <summary>
            Class providing TaxClassCountryInfo management.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassCountryInfoProvider.GetTaxClassCountries(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all relationships between tax classes and countries matching the specified criteria.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassCountryInfoProvider.GetTaxClassCountries(System.String,System.String)">
            <summary>
            Returns dataset of all relationships between tax classes and countries matching the specified criteria.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassCountryInfoProvider.GetTaxClassCountryInfo(System.Int32,System.Int32)">
            <summary>
            Returns relationship between specified tax class and country.
            </summary>
            <param name="countryId">Country ID</param>
            <param name="taxClassId">Tax class ID</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassCountryInfoProvider.SetTaxClassCountryInfo(CMS.Ecommerce.TaxClassCountryInfo)">
            <summary>
            Sets relationship between specified tax class and country.
            </summary>
            <param name="infoObj">Tax class-country relationship to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassCountryInfoProvider.DeleteTaxClassCountryInfo(CMS.Ecommerce.TaxClassCountryInfo)">
            <summary>
            Deletes relationship between specified tax class and country.
            </summary>
            <param name="infoObj">Tax class-country relationship to be deleted</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassCountryInfoProvider.RemoveCountryTaxValue(System.Int32,System.Int32)">
            <summary>
            Removes tax value defined for specified country. 
            </summary>
            <param name="countryId">Country ID</param>
            <param name="taxClassId">Tax class ID</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassCountryInfoProvider.GetCountriesAndTaxValues(System.Int32)">
            <summary>
            Returns dataset with countries and their values of the specified tax. 
            This method is used in the administration user inteface when configuring values of the specified tax for all contries.
            </summary>
            <param name="classId">Tax class ID</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassCountryInfoProvider.CopyCountryTaxes(System.Int32,System.Int32)">
            <summary>
            Copies country-specific tax values from global another country.
            </summary>
            <param name="srcTaxClassId">ID of the tax class used as source</param>
            <param name="dstTaxClassId">ID of the tax class used as destination</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassCountryInfoProvider.RecalculateCountryTaxes(System.Single,System.Int32,System.Boolean,System.Boolean,System.String,System.Int32)">
            <summary>
            Recalculates country-dependent value of tax class using the given coefficient.
            </summary>
            <param name="coefficient">Factor by which values are recalculated</param>        
            <param name="roundTo">Number of significant digits the number should be rounded to</param>
            <param name="flatValues">Indicates if flat values should be recalculated</param>
            <param name="relativeValues">Indicates if relative values should be recalculated</param>
            <param name="where">Additional WHERE condition</param>
            <param name="siteId">ID of the site which records are to be recalculated</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassCountryInfoProvider.GetTaxClassCountriesInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all relationships between tax classes and countries matching the specified criteria.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassCountryInfoProvider.GetTaxClassCountryInfoInternal(System.Int32,System.Int32)">
            <summary>
            Returns relationship between specified tax class and country.
            </summary>
            <param name="countryId">Country ID</param>
            <param name="taxClassId">Tax class ID</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassCountryInfoProvider.SetTaxClassCountryInfoInternal(CMS.Ecommerce.TaxClassCountryInfo)">
            <summary>
            Sets relationship between specified tax class and country.
            </summary>
            <param name="infoObj">Tax class-country relationship to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassCountryInfoProvider.DeleteTaxClassCountryInfoInternal(CMS.Ecommerce.TaxClassCountryInfo)">
            <summary>
            Deletes relationship between specified tax class and country.
            </summary>
            <param name="infoObj">Tax class-country relationship to be deleted</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassCountryInfoProvider.GetCountriesAndTaxValuesInternal(System.Int32)">
            <summary>
            Returns dataset with countries and their values of the specified tax. 
            This method is used in the administration user inteface when configuring values of the specified tax for all contries.
            </summary>
            <param name="classId">Tax class ID</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassCountryInfoProvider.RecalculateCountryTaxesInternal(System.Single,System.Int32,System.Boolean,System.Boolean,System.String,System.Int32)">
            <summary>
            Recalculates country-dependent value of tax class using the given coefficient.
            </summary>
            <param name="coefficient">Factor by which values are recalculated</param>        
            <param name="roundTo">Number of significant digits the number should be rounded to</param>
            <param name="flatValues">Indicates if flat values should be recalculated</param>
            <param name="relativeValues">Indicates if relative values should be recalculated</param>
            <param name="where">Additional WHERE condition</param>
            <param name="siteId">ID of the site which records are to be recalculated</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassCountryInfoProvider.CopyCountryTaxesInternal(System.Int32,System.Int32)">
            <summary>
            Copies country-specific tax values from global another country.
            </summary>
            <param name="srcTaxClassId">ID of the tax class used as source</param>
            <param name="dstTaxClassId">ID of the tax class used as destination</param>
        </member>
        <member name="T:CMS.Ecommerce.TaxClassInfo">
            <summary>
            TaxClassInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.TaxClassInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassInfo.CopyDataFrom(CMS.Ecommerce.TaxClassInfo)">
            <summary>
            Fills data properties with values from given template.
            </summary>
            <param name="taxClass">Template to copy data from</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassInfo.#ctor">
            <summary>
            Constructor - Creates an empty TaxClassInfo object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new TaxClassInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassInfo.CheckPermissions(CMS.SettingsProvider.PermissionsEnum,System.String,CMS.SettingsProvider.IUserInfo)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
        </member>
        <member name="P:CMS.Ecommerce.TaxClassInfo.TaxClassDisplayName">
            <summary>
            Display name of the tax class.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.TaxClassInfo.TaxClassID">
            <summary>
            ID of the tax class.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.TaxClassInfo.TaxClassName">
            <summary>
            Code name of the tax class.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.TaxClassInfo.TaxClassZeroIfIDSupplied">
            <summary>
            Zero tax if tax ID is supplied.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.TaxClassInfo.TaxClassGUID">
            <summary>
            TaxClass GUID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.TaxClassInfo.TaxClassLastModified">
            <summary>
            Object last modified.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.TaxClassInfo.TaxClassSiteID">
            <summary>
            Tax class site ID. Set to 0 for global tax class.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.TaxClassInfoProvider">
            <summary>
            Class providing TaxClassInfo management.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassInfoProvider.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassInfoProvider.GetTaxClasses(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all tax classes matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassInfoProvider.GetTaxClasses(System.String,System.String)">
            <summary>
            Returns dataset of all tax classes matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassInfoProvider.GetTaxClassInfo(System.Int32)">
            <summary>
            Returns tax class with specified ID.
            </summary>
            <param name="classId">Tax class ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.TaxClassInfoProvider.GetTaxClassInfo(System.String,System.String)">
            <summary>
            Returns tax class with specified name.
            </summary>
            <param name="className">Tax class name</param>                
            <param name="siteName">Site name</param>                
        </member>
        <member name="M:CMS.Ecommerce.TaxClassInfoProvider.SetTaxClassInfo(CMS.Ecommerce.TaxClassInfo)">
            <summary>
            Sets (updates or inserts) specified tax class.
            </summary>
            <param name="classObj">Tax class to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassInfoProvider.DeleteTaxClassInfo(CMS.Ecommerce.TaxClassInfo)">
            <summary>
            Deletes specified tax class.
            </summary>
            <param name="classObj">Tax class to be deleted</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassInfoProvider.DeleteTaxClassInfo(System.Int32)">
            <summary>
            Deletes tax class with specified ID.
            </summary>
            <param name="classId">Tax class ID</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassInfoProvider.Clear(System.Boolean)">
            <summary>
            Clears hashtables.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassInfoProvider.GetTaxClasses(System.String,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Returns dataset of all tax classes for specified site matching the specified parameters.
            </summary>       
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
            <param name="siteId">Site ID</param>            
        </member>
        <member name="M:CMS.Ecommerce.TaxClassInfoProvider.GetTaxClasses(System.Int32)">
            <summary>
            Returns dataset of all tax classes for specified site.
            </summary>
            <param name="siteId">Site ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.TaxClassInfoProvider.GetSKUTaxClasses(System.Int32)">
            <summary>
            Returns DataSet with all the tax classes that are assigned to the specified product.
            </summary>
            <param name="skuId">SKU ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.TaxClassInfoProvider.GetDepartmentTaxClasses(System.Int32)">
            <summary>
            Returns DataSet with all the tax classes that are assigned to the specified department.
            </summary>
            <param name="departmentId">Department ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.TaxClassInfoProvider.GetTaxes(System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Returns DataSet with all the taxes that are applied to the specified product and their values according to the specified country, state and zip code.
            </summary>
            <param name="skuId">SKU ID</param>
            <param name="stateId">State ID</param>
            <param name="countryId">Country ID</param>  
            <param name="zipCode">ZIP code - for later use, not implemented yet.</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassInfoProvider.ApplyTax(System.Double,System.Double,System.Boolean)">
            <summary>
            Returns the modified price after the specified tax is applied.
            </summary>
            <param name="price">Price the tax should be applied to</param>
            <param name="taxValue">Tax value, either flat or relative</param>
            <param name="isFlat">True - tax value is flat, False - tax value is relative</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassInfoProvider.GetTaxValue(System.Double,System.Double,System.Boolean)">
            <summary>
            Returns calculated tax based on the product price and tax type.
            </summary>
            <param name="price">Price the tax should be calculated from</param>
            <param name="taxValue">Tax value</param>
            <param name="isFlat">
            True - tax value is flat (both price and tax value must be expressed in the same currency to obtain correct result), 
            False - tax value is relative (currency of the price is not important).</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassInfoProvider.CopyFromGlobal(System.Int32)">
            <summary>
            Copies site-specific tax class options from global tax class list.
            </summary>
            <param name="siteId">Id of the site for which new tax classes are to be created</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassInfoProvider.CheckDependencies(System.Int32)">
            <summary>
            Checks tax class dependencies. Returns true if the tax class is dependent.
            </summary>
            <param name="classId">Tax class ID</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassInfoProvider.RecalculateTaxes(System.Single,System.Int32,System.Boolean,System.Boolean,System.String,System.Int32)">
            <summary>
            Recalculates tax class values (values for countries and states) using the given coefficient.
            </summary>
            <param name="coefficient">Factor by which values are recalculated</param>        
            <param name="roundTo">Number of significant digits the number should be rounded to</param>
            <param name="flatValues">Indicates if flat values should be recalculated</param>
            <param name="relativeValues">Indicates if relative values should be recalculated</param>
            <param name="where">Additional WHERE condition</param>
            <param name="siteId">ID of the site which records are to be recalculated</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassInfoProvider.GetTaxes(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Returns DataSet with all taxes which should be applied the shopping cart items.
            </summary>
            <param name="cart">Shopping cart</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassInfoProvider.GetShippingTaxes(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Returns DataSet with all taxes which should be applied to the shopping cart shipping option.
            </summary>
            <param name="cart">Shopping cart</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassInfoProvider.GetTaxes(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Returns list of all taxes which should be applied to the specified shopping cart item.
            </summary>
            <param name="item">Shopping cart item</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassInfoProvider.GetTaxClassesInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all tax classes matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassInfoProvider.GetTaxClassInfoInternal(System.Int32)">
            <summary>
            Returns tax class with specified ID.
            </summary>
            <param name="classId">Tax class ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.TaxClassInfoProvider.GetTaxClassInfoInternal(System.String,System.String)">
            <summary>
            Returns tax class with specified name.
            </summary>
            <param name="className">Tax class name</param>                
            <param name="siteName">Site name</param>         
        </member>
        <member name="M:CMS.Ecommerce.TaxClassInfoProvider.SetTaxClassInfoInternal(CMS.Ecommerce.TaxClassInfo)">
            <summary>
            Sets (updates or inserts) specified tax class.
            </summary>
            <param name="classObj">Tax class to be set</param>        
        </member>
        <member name="M:CMS.Ecommerce.TaxClassInfoProvider.DeleteTaxClassInfoInternal(CMS.Ecommerce.TaxClassInfo)">
            <summary>
            Deletes specified tax class.
            </summary>
            <param name="classObj">Tax class to be deleted</param>        
        </member>
        <member name="M:CMS.Ecommerce.TaxClassInfoProvider.GetTaxClassesInternal(System.String,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Returns dataset of all tax classes for specified site matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
            <param name="siteId">Site ID</param> 
        </member>
        <member name="M:CMS.Ecommerce.TaxClassInfoProvider.GetSKUTaxClassesInternal(System.Int32)">
            <summary>
            Returns DataSet with all the taxes that are assigned to the specified product.
            </summary>
            <param name="skuId">SKU ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.TaxClassInfoProvider.GetDepartmentTaxClassesInternal(System.Int32)">
            <summary>
            Returns DataSet with all the taxes that are assigned to the specified department.
            </summary>
            <param name="departmentId">Department ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.TaxClassInfoProvider.GetTaxesInternal(System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Returns DataSet with all the taxes that are applied to the specified product and their values according to the specified country, state and zip code.
            </summary>
            <param name="skuId">SKU ID</param>
            <param name="stateId">State ID</param>
            <param name="countryId">Country ID</param>  
            <param name="zipCode">ZIP code - for later use, not implemented yet.</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassInfoProvider.GetTaxValueInternal(System.Double,System.Double,System.Boolean)">
            <summary>
            Returns tax value based on the product price and tax type.
            </summary>
            <param name="price">Price the tax should be calculated from</param>
            <param name="taxValue">Tax value</param>
            <param name="isFlat">True - tax value is flat, False - tax value is relative</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassInfoProvider.ApplyTaxInternal(System.Double,System.Double,System.Boolean)">
            <summary>
            Returns the modified price after the specified tax is applied.
            </summary>
            <param name="price">Price the tax should be applied to</param>
            <param name="taxValue">Tax value, either flat or relative</param>
            <param name="isFlat">True - tax value is flat, False - tax value is relative</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassInfoProvider.CopyFromGlobalInternal(System.Int32)">
            <summary>
            Copies site-specific tax class options from global tax class list.
            </summary>
            <param name="siteId">Id of the site for which new tax classes are to be created</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassInfoProvider.RecalculateTaxesInternal(System.Single,System.Int32,System.Boolean,System.Boolean,System.String,System.Int32)">
            <summary>
            Recalculates tax class values (values for countries and states) using the given coefficient.
            </summary>
            <param name="coefficient">Factor by which values are recalculated</param>        
            <param name="roundTo">Number of significant digits the number should be rounded to</param>
            <param name="flatValues">Indicates if flat values should be recalculated</param>
            <param name="relativeValues">Indicates if relative values should be recalculated</param>
            <param name="where">Additional WHERE condition</param>
            <param name="siteId">ID of the site which records are to be recalculated</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassInfoProvider.GetTaxesInternal(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Returns DataSet with all taxes which should be applied the shopping cart items.
            </summary>
            <param name="cart">Shopping cart</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassInfoProvider.GetShippingTaxesInternal(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Returns DataSet with all taxes which should be applied to the shopping cart shipping option.
            </summary>
            <param name="cart">Shopping cart</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassInfoProvider.GetTaxesInternal(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Returns list of all taxes which should be applied to the specified shopping cart item.
            </summary>
            <param name="item">Shopping cart item</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassInfoProvider.GetItemTaxClassInternal(System.Data.DataRow)">
            <summary>
            Returns ITaxClassInfo object created from the given data row.
            </summary>
            <param name="dr">Data row with the tax calculated data. Names of data row columns: TaxClassID, TaxClassDisplayName, TaxClassZeroIfIDSupplied, TaxValue, TaxIsFlat, TaxIsGlobal</param>        
        </member>
        <member name="M:CMS.Ecommerce.TaxClassInfoProvider.DeleteIfNotUsed(CMS.Ecommerce.TaxClassInfo)">
            <summary>
            Attempts to delete the tax class. Has no effect, if tax class is used.
            </summary>
            <param name="classObj">Tax to be deleted</param>
        </member>
        <member name="T:CMS.Ecommerce.TaxClassStateInfo">
            <summary>
            TaxClassStateInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.TaxClassStateInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassStateInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassStateInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassStateInfo.#ctor">
            <summary>
            Constructor - Creates an empty TaxClassStateInfo object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassStateInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new TaxClassStateInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassStateInfo.CheckPermissions(CMS.SettingsProvider.PermissionsEnum,System.String,CMS.SettingsProvider.IUserInfo)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
        </member>
        <member name="P:CMS.Ecommerce.TaxClassStateInfo.TaxClassStateID">
            <summary>
            Tax class - state relationship ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.TaxClassStateInfo.TaxValue">
            <summary>
            Value of the tax.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.TaxClassStateInfo.TaxClassID">
            <summary>
            ID of the tax class.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.TaxClassStateInfo.IsFlatValue">
            <summary>
            Indicates whether the value is flat or not.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.TaxClassStateInfo.StateID">
            <summary>
            ID of the state.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.TaxClassStateInfoProvider">
            <summary>
            Class providing TaxClassStateInfo management.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassStateInfoProvider.GetTaxClassStates(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all relationships between tax classes and states matching the specified criteria.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassStateInfoProvider.GetTaxClassStates(System.String,System.String)">
            <summary>
            Returns dataset of all relationships between tax classes and states matching the specified criteria.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassStateInfoProvider.GetTaxClassStateInfo(System.Int32,System.Int32)">
            <summary>
            Returns relationship between specified tax class and state.
            </summary>
            <param name="taxClassId">Tax class ID</param>
            <param name="stateId">State ID</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassStateInfoProvider.SetTaxClassStateInfo(CMS.Ecommerce.TaxClassStateInfo)">
            <summary>
            Sets relationship between specified tax class and state.
            </summary>
            <param name="infoObj">Tax class-state relationship to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassStateInfoProvider.DeleteTaxClassStateInfo(CMS.Ecommerce.TaxClassStateInfo)">
            <summary>
            Deletes relationship between specified tax class and state.
            </summary>
            <param name="infoObj">Tax class-state relationship to be deleted</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassStateInfoProvider.RemoveStateTaxValue(System.Int32,System.Int32)">
            <summary>
            Removes tax value defined for specified state. 
            </summary>
            <param name="taxClassId">Tax class ID</param>
            <param name="stateId">State ID</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassStateInfoProvider.RecalculateStateTaxes(System.Single,System.Int32,System.Boolean,System.Boolean,System.String,System.Int32)">
            <summary>
            Recalculates state-dependent value of tax class using the given coefficient.
            </summary>
            <param name="coefficient">Factor by which values are recalculated</param>        
            <param name="roundTo">Number of significant digits the number should be rounded to</param>
            <param name="flatValues">Indicates if flat values should be recalculated</param>
            <param name="relativeValues">Indicates if relative values should be recalculated</param>
            <param name="where">Additional WHERE condition</param>
            <param name="siteId">ID of the site which records are to be recalculated</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassStateInfoProvider.GetStatesAndTaxValues(System.Int32,System.Int32)">
            <summary>
            Returns dataset with states and their values of the specified tax. 
            This method is used in the administration user inteface when configuring values of the specified tax for all states.
            </summary>
            <param name="classId">Tax class ID</param>
            <param name="countryId">Country ID</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassStateInfoProvider.CopyStateTaxes(System.Int32,System.Int32)">
            <summary>
            Copies state-specific tax values from another tax class.
            </summary>
            <param name="srcTaxClassId">Id of the tax class used as source</param>
            <param name="dstTaxClassId">Id of the tax class used as destination</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassStateInfoProvider.CopyStateTaxes(System.Int32,System.Int32,System.Int32)">
            <summary>
            Copies state-specific tax values from another country.
            </summary>
            <param name="srcTaxClassId">Id of the tax class used as source</param>
            <param name="dstTaxClassId">Id of the tax class used as destination</param>
            <param name="countryId">Id of the country which states should be copied</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassStateInfoProvider.GetTaxClassStatesInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all relationships between tax classes and states matching the specified criteria.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassStateInfoProvider.GetTaxClassStateInfoInternal(System.Int32,System.Int32)">
            <summary>
            Returns relationship between specified tax class and state.
            </summary>
            <param name="taxClassId">Tax class ID</param>
            <param name="stateId">State ID</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassStateInfoProvider.SetTaxClassStateInfoInternal(CMS.Ecommerce.TaxClassStateInfo)">
            <summary>
            Sets relationship between specified tax class and state.
            </summary>
            <param name="infoObj">Tax class-state relationship to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassStateInfoProvider.DeleteTaxClassStateInfoInternal(CMS.Ecommerce.TaxClassStateInfo)">
            <summary>
            Deletes relationship between specified tax class and state.
            </summary>
            <param name="infoObj">Tax class-state relationship to be deleted</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassStateInfoProvider.RecalculateStateTaxesInternal(System.Single,System.Int32,System.Boolean,System.Boolean,System.String,System.Int32)">
            <summary>
            Recalculates state-dependent value of tax class using the given coefficient.
            </summary>
            <param name="coefficient">Factor by which values are recalculated</param>        
            <param name="roundTo">Number of significant digits the number should be rounded to</param>
            <param name="flatValues">Indicates if flat values should be recalculated</param>
            <param name="relativeValues">Indicates if relative values should be recalculated</param>
            <param name="where">Additional WHERE condition</param>
            <param name="siteId">ID of the site which records are to be recalculated</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassStateInfoProvider.GetStatesAndTaxValuesInternal(System.Int32,System.Int32)">
            <summary>
            Returns dataset with states and their values of the specified tax. 
            This method is used in the administration user inteface when configuring values of the specified tax for all states.
            </summary>
            <param name="classId">Tax class ID</param>
            <param name="countryId">Country ID</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassStateInfoProvider.CopyStateTaxesInternal(System.Int32,System.Int32)">
            <summary>
            Copies state-specific tax values from another tax class.
            </summary>
            <param name="srcTaxClassId">Id of the tax class used as source</param>
            <param name="dstTaxClassId">Id of the tax class used as destination</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassStateInfoProvider.CopyStateTaxesInternal(System.Int32,System.Int32,System.Int32)">
            <summary>
            Copies state-specific tax values from another country.
            </summary>
            <param name="srcTaxClassId">Id of the tax class used as source</param>
            <param name="dstTaxClassId">Id of the tax class used as destination</param>
            <param name="countryId">Id of the country which states should be copied</param>
        </member>
        <member name="T:CMS.Ecommerce.UserDepartmentInfo">
            <summary>
            UserDepartmentInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.UserDepartmentInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.UserDepartmentInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.UserDepartmentInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.UserDepartmentInfo.#ctor">
            <summary>
            Constructor - Creates an empty UserDepartmentInfo object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.UserDepartmentInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new UserDepartmentInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.UserDepartmentInfo.CheckPermissions(CMS.SettingsProvider.PermissionsEnum,System.String,CMS.SettingsProvider.IUserInfo)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
        </member>
        <member name="P:CMS.Ecommerce.UserDepartmentInfo.UserID">
            <summary>
            ID of the user.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.UserDepartmentInfo.DepartmentID">
            <summary>
            ID of the department.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.UserDepartmentInfoProvider">
            <summary>
            Class providing UserDepartmentInfo management.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.UserDepartmentInfoProvider.GetUserDepartments(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all relationships between users and departments matching the specified criteria.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.Ecommerce.UserDepartmentInfoProvider.GetUserDepartments(System.String,System.String)">
            <summary>
            Returns dataset of all relationships between users and departments matching the specified criteria.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
        </member>
        <member name="M:CMS.Ecommerce.UserDepartmentInfoProvider.GetUserDepartmentInfo(System.Int32,System.Int32)">
            <summary>
            Returns relationship between specified user and department.
            </summary>
            <param name="userId">User ID</param>
            <param name="departmentId">Department ID</param>
        </member>
        <member name="M:CMS.Ecommerce.UserDepartmentInfoProvider.SetUserDepartmentInfo(CMS.Ecommerce.UserDepartmentInfo)">
            <summary>
            Sets relationship between specified user and department.
            </summary>
            <param name="infoObj">User-department relationship to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.UserDepartmentInfoProvider.DeleteUserDepartmentInfo(CMS.Ecommerce.UserDepartmentInfo)">
            <summary>
            Deletes relationship between specified user and department.
            </summary>
            <param name="infoObj">User-department relationship to be deleted</param>
        </member>
        <member name="M:CMS.Ecommerce.UserDepartmentInfoProvider.AddUserToDepartment(System.Int32,System.Int32)">
            <summary>
            Sets relationship between specified user and department.
            </summary>  
            <param name="departmentId">Department ID</param>
            <param name="userId">User ID</param>
        </member>
        <member name="M:CMS.Ecommerce.UserDepartmentInfoProvider.RemoveUserFromDepartment(System.Int32,System.Int32)">
            <summary>
            Deletes relationship between specified user and department.
            </summary>
            <param name="departmentId">Department ID</param>
            <param name="userId">User ID</param>
        </member>
        <member name="M:CMS.Ecommerce.UserDepartmentInfoProvider.GetUserDepartmentsInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all relationships between users and departments matching the specified criteria.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.Ecommerce.UserDepartmentInfoProvider.GetUserDepartmentInfoInternal(System.Int32,System.Int32)">
            <summary>
            Returns relationship between specified user and department.
            </summary>
            <param name="departmentId">Department ID</param>
            <param name="userId">User ID</param>
        </member>
        <member name="M:CMS.Ecommerce.UserDepartmentInfoProvider.SetUserDepartmentInfoInternal(CMS.Ecommerce.UserDepartmentInfo)">
            <summary>
            Sets relationship between specified user and department.
            </summary>
            <param name="infoObj">User-department relationship to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.UserDepartmentInfoProvider.DeleteUserDepartmentInfoInternal(CMS.Ecommerce.UserDepartmentInfo)">
            <summary>
            Deletes relationship between specified user and department.
            </summary>
            <param name="infoObj">User-department relationship to be deleted</param>
        </member>
        <member name="T:CMS.Ecommerce.VolumeDiscountInfo">
            <summary>
            VolumeDiscountInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.VolumeDiscountInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.VolumeDiscountInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.VolumeDiscountInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.VolumeDiscountInfo.#ctor">
            <summary>
            Constructor - Creates an empty VolumeDiscountInfo object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.VolumeDiscountInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new VolumeDiscountInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.VolumeDiscountInfo.CheckPermissions(CMS.SettingsProvider.PermissionsEnum,System.String,CMS.SettingsProvider.IUserInfo)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
        </member>
        <member name="P:CMS.Ecommerce.VolumeDiscountInfo.VolumeDiscountID">
            <summary>
            ID of the discount.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.VolumeDiscountInfo.VolumeDiscountValue">
            <summary>
            Value of the discount.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.VolumeDiscountInfo.VolumeDiscountMinCount">
            <summary>
            Minimal number of objects for the discount to be applied.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.VolumeDiscountInfo.VolumeDiscountSKUID">
            <summary>
            ID of the SKU for which the discount is applied.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.VolumeDiscountInfo.VolumeDiscountIsFlatValue">
            <summary>
            Indicates whether the discount is flat or not.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.VolumeDiscountInfo.VolumeDiscountGUID">
            <summary>
            GUID of the discount.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.VolumeDiscountInfo.VolumeDiscountLastModified">
            <summary>
            Object last modified.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.VolumeDiscountInfo.ItemDiscountType">
            <summary>
            Discount type. Used for discount calculation in the shopping cart.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.VolumeDiscountInfo.ItemDiscountID">
            <summary>
            Discount identifier. Used for discount calculation in the shopping cart.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.VolumeDiscountInfo.ItemDiscountDisplayName">
            <summary>
            Discount display name. Used for discount calculation in the shopping cart.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.VolumeDiscountInfo.ItemDiscountValue">
            <summary>
            Discount value. Used for discount calculation in the shopping cart.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.VolumeDiscountInfo.ItemDiscountIsFlat">
            <summary>
            True - discount value is flat, False - discount value is relative. Used for discount calculation in the shopping cart.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.VolumeDiscountInfo.ItemDiscountIsGlobal">
            <summary>
            True - says that discounts value is set in global main currency, False - says that discounts value is set in site main currency. 
            Takes effect only if discount value is flat. Used for discount calculation in the shopping cart.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.VolumeDiscountInfo.ItemDiscountedUnits">
            <summary>
            Number of units the discount should be applied to
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.VolumeDiscountInfo.ItemDiscountCustomData">
            <summary>
            Discount custom data.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.VolumeDiscountInfoProvider">
            <summary>
            Class providing VolumeDiscountInfo management.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.VolumeDiscountInfoProvider.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.VolumeDiscountInfoProvider.GetVolumeDiscounts(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all volume discounts matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.Ecommerce.VolumeDiscountInfoProvider.GetVolumeDiscounts(System.String,System.String)">
            <summary>
            Returns dataset of all volume discounts matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
        </member>
        <member name="M:CMS.Ecommerce.VolumeDiscountInfoProvider.GetVolumeDiscountInfo(System.Int32)">
            <summary>
            Returns volume discount with specified ID.
            </summary>
            <param name="discountId">Volume discount ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.VolumeDiscountInfoProvider.SetVolumeDiscountInfo(CMS.Ecommerce.VolumeDiscountInfo)">
            <summary>
            Sets (updates or inserts) specified volume discount.
            </summary>
            <param name="discountObj">Volume discount to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.VolumeDiscountInfoProvider.DeleteVolumeDiscountInfo(CMS.Ecommerce.VolumeDiscountInfo)">
            <summary>
            Deletes specified volume discount.
            </summary>
            <param name="discountObj">Volume discount to be deleted</param>
        </member>
        <member name="M:CMS.Ecommerce.VolumeDiscountInfoProvider.DeleteVolumeDiscountInfo(System.Int32)">
            <summary>
            Deletes volume discount with specified ID.
            </summary>
            <param name="discountId">Volume discount ID</param>
        </member>
        <member name="M:CMS.Ecommerce.VolumeDiscountInfoProvider.Clear(System.Boolean)">
            <summary>
            Clears hashtables.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.Ecommerce.VolumeDiscountInfoProvider.GetVolumeDiscounts(System.Int32)">
            <summary>
            Returns DataSet with volume discounts for specified product(SKU).
            </summary>
            <param name="skuId">SKU id</param>
        </member>
        <member name="M:CMS.Ecommerce.VolumeDiscountInfoProvider.GetVolumeDiscountInfo(System.Int32,System.Int32)">
            <summary>
            Returns coresponding VolumeDiscountInfo structure for the specified SKU and SKU units, if no volume discount found returns null.
            </summary>        
            <param name="skuId">SKU id</param>
            <param name="units">SKU units</param>
        </member>
        <member name="M:CMS.Ecommerce.VolumeDiscountInfoProvider.RecalculateVolumeDiscounts(System.Single,System.Int32,System.Boolean,System.Boolean,System.String,System.Int32)">
            <summary>
            Recalculates volume discount values using the given coefficient.
            </summary>
            <param name="coefficient">Factor by which values are recalculated</param>        
            <param name="roundTo">Number of significant digits the number should be rounded to</param>
            <param name="flatValues">Indicates if flat values should be recalculated</param>
            <param name="relativeValues">Indicates if relative values should be recalculated</param>
            <param name="where">Additional WHERE condition</param>
            <param name="siteId">ID of the site which records are to be recalculated</param>
        </member>
        <member name="M:CMS.Ecommerce.VolumeDiscountInfoProvider.ValidateVolumeDiscount(CMS.Ecommerce.ShoppingCartItemInfo,CMS.Ecommerce.VolumeDiscountInfo)">
            <summary>
            Returns True if volume discount is valid and can be applied to the specified shopping cart item, otherwise returns False.
            </summary>
            <param name="item">Shopping cart item to which the volume discount should be applied</param>
            <param name="discount">Volume discount data</param>        
        </member>
        <member name="M:CMS.Ecommerce.VolumeDiscountInfoProvider.CalculateUnitDiscount(CMS.Ecommerce.ShoppingCartItemInfo,CMS.Ecommerce.VolumeDiscountInfo)">
            <summary>
            Validates volume discount and calculates shopping cart item unit discount after the volume discount is applied.
            </summary>
            <param name="item">Shopping cart item to which the volumen discount should be applied</param>
            <param name="discount">Volume discount data</param>
        </member>
        <member name="M:CMS.Ecommerce.VolumeDiscountInfoProvider.GetVolumeDiscountsInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all volume discounts matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.Ecommerce.VolumeDiscountInfoProvider.GetVolumeDiscountInfoInternal(System.Int32)">
            <summary>
            Returns volume discount with specified ID.
            </summary>
            <param name="discountId">Volume discount ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.VolumeDiscountInfoProvider.SetVolumeDiscountInfoInternal(CMS.Ecommerce.VolumeDiscountInfo)">
            <summary>
            Sets (updates or inserts) specified volume discount.
            </summary>
            <param name="discountObj">Volume discount to be set</param>        
        </member>
        <member name="M:CMS.Ecommerce.VolumeDiscountInfoProvider.DeleteVolumeDiscountInfoInternal(CMS.Ecommerce.VolumeDiscountInfo)">
            <summary>
            Deletes specified volume discount.
            </summary>
            <param name="discountObj">Volume discount to be deleted</param>        
        </member>
        <member name="M:CMS.Ecommerce.VolumeDiscountInfoProvider.GetVolumeDiscountsInternal(System.Int32)">
            <summary>
            Returns DataSet with volume discounts for specified product(SKU). Records are ordered by VolumeDiscountMinCount field.
            </summary>
            <param name="skuId">SKU id</param>
        </member>
        <member name="M:CMS.Ecommerce.VolumeDiscountInfoProvider.GetVolumeDiscountInfoInternal(System.Int32,System.Int32)">
            <summary>
            Returns coresponding VolumeDiscountInfo structure for the specified SKU and SKU units, if no volume discount found returns null.
            </summary>        
            <param name="skuId">SKU id</param>
            <param name="units">SKU units</param>
        </member>
        <member name="M:CMS.Ecommerce.VolumeDiscountInfoProvider.RecalculateVolumeDiscountsInternal(System.Single,System.Int32,System.Boolean,System.Boolean,System.String,System.Int32)">
            <summary>
            Recalculates volume discount values using the given coefficient.
            </summary>
            <param name="coefficient">Factor by which values are recalculated</param>        
            <param name="roundTo">Number of significant digits the number should be rounded to</param>
            <param name="flatValues">Indicates if flat values should be recalculated</param>
            <param name="relativeValues">Indicates if relative values should be recalculated</param>
            <param name="where">Additional WHERE condition</param>
            <param name="siteId">ID of the site which records are to be recalculated</param>
        </member>
        <member name="M:CMS.Ecommerce.VolumeDiscountInfoProvider.ValidateVolumeDiscountInternal(CMS.Ecommerce.ShoppingCartItemInfo,CMS.Ecommerce.VolumeDiscountInfo)">
            <summary>
            Returns True if volume discount is valid and can be applied to the specified shopping cart item, otherwise returns False.
            </summary>
            <param name="item">Shopping cart item to which the volume discount should be applied</param>
            <param name="discount">Volume discount data</param>        
        </member>
        <member name="M:CMS.Ecommerce.VolumeDiscountInfoProvider.CalculateUnitDiscountInternal(CMS.Ecommerce.ShoppingCartItemInfo,CMS.Ecommerce.VolumeDiscountInfo)">
            <summary>
            Validates volume discount and calculates shopping cart item unit discount after the volume discount is applied.
            </summary>
            <param name="item">Shopping cart item to which the volume discount should be applied</param>
            <param name="discount">Volume discount data</param>
        </member>
    </members>
</doc>
